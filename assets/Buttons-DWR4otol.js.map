{"version":3,"file":"Buttons-DWR4otol.js","sources":["../../node_modules/.pnpm/@lightningtv+solid-ui@0.25.1_@lightningtv+core@2.0.1_@lightningtv+solid@2.0.1_solid-js@1.8.20_qzzzsgtmahk6mnetksqugeaghu/node_modules/@lightningtv/solid-ui/components/Badge/Badge.tsx","../../src/pages/Buttons.tsx"],"sourcesContent":["/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { createMemo, type Component } from 'solid-js';\nimport { View, Text, type BorderStyleObject } from '@lightningtv/solid';\nimport styles from './Badge.styles.js';\nimport type { BadgeProps } from './Badge.types.js';\n\nconst BadgeContainer: Component<BadgeProps> = props => {\n  return (\n    <View\n      {...props}\n      // borderColor={props.strokeColor} // TODO clew uses strokeColor, but we currently don't account for nested properties (border.color)\n      // borderWidth={props.strokeWidth} // TODO clew uses strokeWidth, but we currently don't account for nested properties (border.width)\n      color={props.backgroundColor}\n      borderRadius={props.radius}\n      // @ts-expect-error TODO type needs to be fixed in framework\n      style={[\n        props.style, //\n        styles.Container.tones[props.tone ?? styles.tone],\n        styles.Container.base\n      ]}\n      forwardStates\n    />\n  );\n};\n\nconst Badge: Component<BadgeProps> = (props: BadgeProps) => {\n  const tone = createMemo(() => props.tone ?? styles.tone);\n  const baseBorderStyle = styles.Container.base.border as BorderStyleObject;\n\n  return (\n    <BadgeContainer\n      {...props}\n      height={props.height || styles.Text.base.lineHeight}\n      tone={tone()}\n      style={props.style}\n    >\n      <Text\n        color={props.textColor}\n        lineHeight={(props.height || styles.Text.base.lineHeight) + baseBorderStyle.width}\n        style={[\n          styles.Text.tones[tone()], //\n          styles.Text.base\n        ]}\n      >\n        {props.title}\n      </Text>\n    </BadgeContainer>\n  );\n};\n\nexport { Badge as default, BadgeContainer };\n","import {\n  View,\n  Text,\n  ElementNode,\n  IntrinsicNodeStyleProps,\n} from \"@lightningtv/solid\";\nimport { Button, Badge } from \"@lightningtv/solid-ui\";\nimport { Row } from \"@lightningtv/solid-ui\";\n\nconst ButtonsPage = () => {\n  function onEnter(this: ElementNode, event, elm) {\n    this.states.toggle(\"disabled\");\n  }\n\n  const RowStyles = {\n    display: \"flex\",\n    justifyContent: \"flexStart\",\n    width: 1500,\n    height: 300,\n    color: \"#00000000\",\n    gap: 26,\n    y: 400,\n  } satisfies IntrinsicNodeStyleProps;\n\n  return (\n    <>\n      <Row x={100} y={200} gap={5} style={RowStyles}>\n        <Badge>HD</Badge>\n        <Badge>PG13</Badge>\n        <Badge>NC17</Badge>\n        <Text fontSize={30}>I like bananas</Text>\n        <Badge>DOLBY</Badge>\n      </Row>\n\n      <Row x={100} gap={40} style={RowStyles}>\n        <Button autofocus onEnter={onEnter}>\n          TV Shows\n        </Button>\n        <Button states={{ active: true, disabled: false }}>Movies</Button>\n        <Button states={\"active\"}>Sports</Button>\n        <Button states=\"disabled\">News</Button>\n      </Row>\n    </>\n  );\n};\n\nexport default ButtonsPage;\n"],"names":["BadgeContainer","props","_$createComponent","View","_$mergeProps","color","backgroundColor","borderRadius","radius","style","styles","Container","tones","tone","base","forwardStates","Badge","createMemo","baseBorderStyle","border","height","Text","lineHeight","children","textColor","width","title","ButtonsPage","onEnter","event","elm","states","toggle","RowStyles","display","justifyContent","gap","y","Row","x","fontSize","Button","autofocus","active","disabled"],"mappings":"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","x_google_ignoreList":[0]}