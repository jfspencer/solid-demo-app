{"version":3,"file":"Login-legacy-C3_CVpIE.js","sources":["../../node_modules/.pnpm/@lightningtv+solid-ui@0.23.0-rc1_@lightningtv+core@2.0.0_@lightningtv+solid@2.0.0_solid-js@1.8.20__solid-js@1.8.20/node_modules/@lightningtv/solid-ui/components/Input/Input.tsx","../../node_modules/.pnpm/@lightningtv+solid-ui@0.23.0-rc1_@lightningtv+core@2.0.0_@lightningtv+solid@2.0.0_solid-js@1.8.20__solid-js@1.8.20/node_modules/@lightningtv/solid-ui/components/Key/Key.tsx","../../node_modules/.pnpm/@lightningtv+solid-ui@0.23.0-rc1_@lightningtv+core@2.0.0_@lightningtv+solid@2.0.0_solid-js@1.8.20__solid-js@1.8.20/node_modules/@lightningtv/solid-ui/components/Keyboard/KeyboardSimple.tsx","../../node_modules/.pnpm/@lightningtv+solid-ui@0.23.0-rc1_@lightningtv+core@2.0.0_@lightningtv+solid@2.0.0_solid-js@1.8.20__solid-js@1.8.20/node_modules/@lightningtv/solid-ui/components/Keyboard/Keyboard.tsx","../../src/pages/Login.tsx"],"sourcesContent":["/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSignal, type Component, createEffect, on, createMemo } from 'solid-js';\nimport { View, Text } from '@lightningtv/solid';\nimport styles from './Input.styles.js';\nimport type { InputProps } from './Input.types.js';\n\nconst getformatTitleText = (props, title) =>\n  props.password ? (props.mask ?? '').repeat(title.length ?? 0) : title;\n\nconst Input: Component<InputProps> = props => {\n  /* eslint-disable solid/reactivity */\n  const [title, setTitle] = props.titleSignal;\n  const [position, setPosition] = createSignal(props.position ?? title().length);\n  const [keyEvent, setKeyEvent] = props.keyEvent;\n  const formatTitleText = createMemo(() => getformatTitleText(props, title()));\n\n  const formatInputText = (key: string) => {\n    if (key === undefined || key === '') {\n      return;\n    }\n\n    const inputText = title();\n    let currentPosition = position();\n    let newTitle = '';\n    switch (key.toLowerCase()) {\n      case 'backspace':\n      case 'delete':\n        newTitle =\n          currentPosition > 0\n            ? inputText.slice(0, currentPosition - 1) + inputText.slice(currentPosition)\n            : inputText;\n        currentPosition--;\n        break;\n      case 'done':\n        break;\n      case 'space':\n        newTitle =\n          currentPosition > 0\n            ? inputText.slice(0, currentPosition) + ' ' + inputText.slice(currentPosition)\n            : ' ' + inputText;\n        currentPosition++;\n        break;\n      case 'clear':\n        newTitle = '';\n        currentPosition = 0;\n        break;\n      default:\n        newTitle =\n          currentPosition > 0\n            ? inputText.slice(0, currentPosition) + key + inputText.slice(currentPosition)\n            : key + inputText;\n        currentPosition++;\n        break;\n    }\n\n    setKeyEvent('');\n    setTitle(newTitle);\n    setPosition(currentPosition);\n    return '';\n  };\n\n  createEffect(\n    on(\n      () => keyEvent(),\n      keyEvent => {\n        formatInputText(keyEvent);\n      },\n      { defer: true }\n    )\n  );\n\n  function onRight() {\n    setPosition(p => Math.max(p + 1, title().length));\n    return true;\n  }\n\n  function onLeft() {\n    setPosition(p => Math.max(p - 1, 0));\n    return true;\n  }\n\n  return (\n    <View\n      {...props}\n      // borderColor={props.strokeColor} // TODO clew uses strokeColor, but we currently don't account for nested properties (border.color)\n      // borderWidth={props.strokeWidth} // TODO clew uses strokeWidth, but we currently don't account for nested properties (border.width)\n      color={props.backgroundColor}\n      justifyContent={props.justify}\n      borderRadius={props.radius}\n      position={position()}\n      onLeft={onLeft}\n      onRight={onRight}\n      // @ts-expect-error TODO type needs to be fixed in framework\n      style={[\n        props.style, //\n        styles.Container.tones[props.tone ?? styles.tone],\n        styles.Container.base\n      ]}\n    >\n      <Text\n        tone={props.tone ?? styles.tone}\n        color={props.textColor}\n        style={[\n          styles.Text.tones[props.tone ?? styles.tone], //\n          styles.Text.base\n        ]}\n      >\n        {formatTitleText() || ' '}\n      </Text>\n    </View>\n  );\n};\n\nexport default Input;\n","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createMemo, type Component } from 'solid-js';\nimport { Text } from '@lightningtv/solid';\nimport { ButtonContainer } from '../Button/Button.jsx';\nimport styles from './Key.styles.js';\nimport type { KeyProps } from './Key.types.js';\n\nconst getTone = (props: KeyProps) => props.tone ?? styles.tone;\nconst getMultiplier = (props: KeyProps) =>\n  props.sizes?.[props.size ?? 'sm'] ??\n  styles.Container?.tones?.[props.tone ?? styles.tone]?.sizes?.[props.size ?? 'sm'] ??\n  styles.Container.base.sizes[props.size ?? 'sm'];\n\nconst getBaseWidth = (props: KeyProps) =>\n  props.baseWidth ??\n  styles.Container?.tones?.[props.tone ?? styles.tone]?.baseWidth ??\n  styles.Container.base.baseWidth;\n\nconst getKeySpacing = (props: KeyProps) =>\n  props.keySpacing ??\n  styles.Container.tones?.[props.tone ?? styles.tone]?.keySpacing ??\n  styles.Container.base.keySpacing;\n\nconst Key: Component<KeyProps> = props => {\n  const tone = createMemo(() => getTone(props));\n  const multiplier = createMemo(() => getMultiplier(props));\n  const baseWidth = createMemo(() => getBaseWidth(props));\n  const keySpacing = createMemo(() => getKeySpacing(props));\n\n  return (\n    <ButtonContainer\n      {...props}\n      // @ts-expect-error TODO type needs to be fixed in framework\n      style={[\n        props.style, //\n        styles.Container.tones?.[tone()],\n        styles.Container.base\n      ]}\n      forwardStates\n      width={multiplier() * baseWidth() + keySpacing() * (multiplier() - 1)}\n    >\n      <Text\n        contain={props.contain ?? 'width'}\n        textAlign={props.textAlign}\n        style={[\n          styles.Text.tones[tone()], //\n          styles.Text.base\n        ]}\n      >\n        {props.title ? props.title : ''}\n      </Text>\n    </ButtonContainer>\n    // if props onEnter, use that, else utilize toggle to see if update keyboard or add the key\n\n    // props.setValue('props.jeyID')\n    // onEnter={props.onEnter? props.onEnter : (props.toggle? toggleKeyboard: softKey, keyID/title) }\n  );\n};\n\nexport default Key;\n","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { For, Show, createMemo, createSignal, type Accessor, type Component } from 'solid-js';\nimport Column from '../Column/Column.jsx';\nimport Row from '../Row/Row.jsx';\nimport Key from '../Key/Key.jsx';\nimport type { KeyProps } from '../Key/Key.types.js';\nimport styles from './Keyboard.styles.js';\nimport type { KeyboardProps } from './Keyboard.types.js';\nimport { ElementNode, View } from '@lightningtv/solid';\nimport keyStyles from '../Key/Key.styles.js';\n\nconst getTone = (props: KeyboardProps) => \n  props.tone ?? styles.tone;\n\nconst getGap = (props: KeyboardProps) =>\n  props.gap ??\n  props.keySpacing ??\n  styles.Container.tones[props.tone ?? styles.tone]?.keySpacing ??\n  styles.Container.base.keySpacing;\n\nconst getKeyHeight = (props: KeyboardProps) =>\n  props.keyHeight ??\n  styles.Container.tones[props.tone ?? styles.tone]?.keyHeight ??\n  styles.Container.base.keyHeight;\n\nconst getTotalWidth = (props: KeyboardProps) =>\n  props.screenW ??\n  props.width ??\n  styles.Container.tones[props.tone ?? styles.tone]?.width ??\n  styles.Container.base.width;\n\nconst getMultiplier = (props: KeyProps) =>\n  props.sizes?.[props.size ?? 'sm'] ??\n  keyStyles.Container?.tones?.[props.tone ?? keyStyles.tone]?.sizes?.[props.size ?? 'sm'] ??\n  keyStyles.Container.base.sizes[props.size ?? 'sm'];\n\nconst getBaseWidth = (props: KeyProps) =>\n  props.baseWidth ??\n  keyStyles.Container?.tones?.[props.tone ?? keyStyles.tone]?.baseWidth ??\n  keyStyles.Container.base.baseWidth;\n\nconst getKeySpacing = (props: KeyProps) =>\n  props.keySpacing ??\n  keyStyles.Container.tones?.[props.tone ?? keyStyles.tone]?.keySpacing ??\n  keyStyles.Container.base.keySpacing;\n\nconst KeyboardSimple: Component<KeyboardProps> = (props: KeyboardProps) => {\n  // eslint-disable-next-line solid/reactivity\n  const [_, setKeySignal] = props.keySignal ?? createSignal('');\n  const [activeKeyboard, setActiveKeyboard] = createSignal('default');\n  const [selectedRowIndex, setSelectedRowIndex] = createSignal(0);\n  const [selectedColumnIndex, setSelectedColumnIndex] = createSignal(0);\n  const [rowWidth, setRowWidth] = createSignal(0);\n\n  const tone = createMemo(() => getTone(props));\n  const gap = createMemo(() => getGap(props));\n  const totalWidth = createMemo(() => getTotalWidth(props));\n  const keyHeight = createMemo(() => getKeyHeight(props));\n  const keyboardRefList = new Map<string, [ElementNode, number]>();\n\n  const setOnEnter = (key: string | KeyProps, rowIdx: Accessor<number>, colIdx: Accessor<number>) => {\n    if (typeof key === 'string') {\n      return () => setKeySignal(key);\n    } else if (key.toggle) {\n      return () => {\n        setSelectedRowIndex(rowIdx());\n        setSelectedColumnIndex(colIdx());\n        setActiveKeyboard(key.toggle);\n        keyboardRefList[key.toggle]?.element?.setFocus();\n        setRowWidth(keyboardRefList[key.toggle]?.width ?? 0);\n      };\n    } else {\n      return () => setKeySignal(typeof key === 'string' ? key : key.title ?? '');\n    }\n  };\n\n  const addKeyboardWidth = (keyboard: string) => {\n    // largest row size\n    let maxRow = 0;\n    for (const row of props.formats[keyboard]) {\n      // width of individual row\n      let rowWidth = 0;\n      for (const key of row) {\n        let width = getBaseWidth(props);\n        if (typeof key === 'object') {\n          width = getMultiplier(key) * getBaseWidth(props) + getKeySpacing(props) * (getMultiplier(key) - 1);\n        }\n        rowWidth += width + getKeySpacing(props);\n      }\n      if (maxRow < rowWidth) {\n        maxRow = rowWidth;\n      }\n    }\n    return maxRow;\n  };\n\n  return (\n    <View\n      {...props}\n      forwardFocus={0}\n      // @ts-expect-error TODO type needs to be fixed in framework\n      style={[props.style, styles.Container.tones[tone()], styles.Container.base]}\n      width={totalWidth()}\n      // height is defined by the height of the keys, the number of rows, as well as the gap between them\n      height={undefined}\n    >\n      <For each={Object.keys(props.formats)}>\n        {keyboard => (\n          <Show when={activeKeyboard() === keyboard}>\n            <View\n              ref={element => {\n                keyboardRefList[keyboard] = { element: element, width: addKeyboardWidth(keyboard) };\n                if (activeKeyboard() === keyboard) {\n                  element.setFocus();\n                  setRowWidth(keyboardRefList[keyboard]?.width ?? 0);\n                }\n                return keyboard;\n              }}\n              justifyContent={props.centerKeyboard ? 'center' : 'flexStart'}\n              display={'flex'}\n              forwardFocus={0}\n            >\n              <Column\n                scroll={'none'}\n                plinko\n                selected={selectedColumnIndex()}\n                alignItems={props.centerKeys || props.centerKeyboard ? 'center' : 'flexStart'}\n                width={rowWidth()}\n                gap={gap()}\n              >\n                <For each={props.formats[keyboard]}>\n                  {(row: (string | KeyProps)[], colIdx) => (\n                    <Row\n                      scroll={'none'}\n                      selected={selectedRowIndex()}\n                      flexBoundary={props.flexBoundary ?? 'contain'}\n                      display={'flex'}\n                      gap={gap()}\n                      height={keyHeight()}\n                      wrap={props.rowWrap}\n                    >\n                      <For each={row}>\n                        {(key: string | KeyProps, rowIdx) => (\n                          <Key\n                            {...(typeof key === 'string' ? {} : key)}\n                            onEnter={setOnEnter(key, rowIdx, colIdx)}\n                            title={typeof key === 'string' ? key : key.title ?? ''}\n                            height={keyHeight()}\n                          />\n                        )}\n                      </For>\n                    </Row>\n                  )}\n                </For>\n              </Column>\n            </View>\n          </Show>\n        )}\n      </For>\n    </View>\n  );\n};\n\nexport default KeyboardSimple;\n","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { type Component } from 'solid-js';\nimport styles from './Keyboard.styles.js';\nimport KeyboardSimple from './KeyboardSimple.jsx';\nimport type { KeyboardProps } from './Keyboard.types.js';\n\n// rows created from each array passed in\nconst Keyboard: Component<KeyboardProps> = (props: KeyboardProps) => {\n  return (\n    <KeyboardSimple\n      {...props}\n      // @ts-expect-error TODO type needs to be fixed in framework\n      style={[\n        props.style, //\n        styles.Container.tones[props.tone ?? styles.tone],\n        styles.Container.base\n      ]}\n    />\n  );\n};\n\nexport default Keyboard;\n","import {\n  IntrinsicNodeStyleProps,\n  IntrinsicTextNodeStyleProps,\n  Text,\n  View,\n} from \"@lightningtv/solid\";\nimport { createSignal, onMount } from \"solid-js\";\nimport { Keyboard, Input, Column } from \"@lightningtv/solid-ui\";\nimport { setGlobalBackground } from \"../state\";\n\nconst TextPage = () => {\n  const Title = {\n    fontSize: 42,\n    fontWeight: \"bold\",\n  } as const;\n\n  const formats = {\n    uppercase: [\n      [\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\",\n        \"8\",\n        \"9\",\n        \"0\",\n        {\n          title: \"Delete\",\n          size: \"md\",\n          keyId: \"delete\",\n          announce: \"delete, button\",\n        },\n      ],\n      [\n        \"Q\",\n        \"W\",\n        \"E\",\n        \"R\",\n        \"T\",\n        \"Y\",\n        \"U\",\n        \"I\",\n        \"O\",\n        \"P\",\n        {\n          title: \"#@!\",\n          size: \"md\",\n          toggle: \"symbols\",\n          announce: \"symbol mode, button\",\n          keyId: \"symbols\",\n        },\n      ],\n      [\n        \"A\",\n        \"S\",\n        \"D\",\n        \"F\",\n        \"G\",\n        \"H\",\n        \"J\",\n        \"K\",\n        \"L\",\n        \"@\",\n        {\n          title: \"áöû\",\n          size: \"md\",\n          toggle: \"accents\",\n          announce: \"accents, button\",\n          keyId: \"accents\",\n        },\n      ],\n      [\n        \"Z\",\n        \"X\",\n        \"C\",\n        \"V\",\n        \"B\",\n        \"N\",\n        \"M\",\n        { title: \".\", announce: \"period, button\" },\n        { title: \"-\", announce: \"dash, button\" },\n        { title: \"_\", announce: \"underscore, button\" },\n        {\n          title: \"shift\",\n          size: \"md\",\n          toggle: \"default\",\n          announce: \"shift off, button\",\n          keyId: \"shift\",\n        },\n      ],\n      [\n        { title: \".com\", announce: \"dot, com\", size: \"md\" },\n        { title: \".net\", announce: \"dot, net\", size: \"md\" },\n        { title: \".edu\", announce: \"dot, edu\", size: \"md\" },\n        { title: \".org\", announce: \"dot, org\", size: \"md\" },\n        { title: \".co\", announce: \"dot, co\", size: \"md\" },\n        { title: \".uk\", announce: \"dot, uk\", size: \"md\" },\n      ],\n      [\n        {\n          title: \"Clear\",\n          size: \"lg\",\n          keyId: \"clear\",\n          announce: \"clear, button\",\n        },\n        {\n          title: \"Space\",\n          size: \"xl\",\n          keyId: \"space\",\n          announce: \"space, button\",\n        },\n        {\n          title: \"Done\",\n          size: \"lg\",\n          keyId: \"done\",\n          announce: \"done, button\",\n        },\n      ],\n    ],\n    default: [\n      [\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\",\n        \"8\",\n        \"9\",\n        \"0\",\n        {\n          title: \"Delete\",\n          size: \"md\",\n          keyId: \"delete\",\n          announce: \"delete, button\",\n        },\n      ],\n      [\n        \"q\",\n        \"w\",\n        \"e\",\n        \"r\",\n        \"t\",\n        \"y\",\n        \"u\",\n        \"i\",\n        \"o\",\n        \"p\",\n        {\n          title: \"#@!\",\n          size: \"md\",\n          toggle: \"symbols\",\n          announce: \"symbol mode, button\",\n          keyId: \"symbols\",\n        },\n      ],\n      [\n        \"a\",\n        \"s\",\n        \"d\",\n        \"f\",\n        \"g\",\n        \"h\",\n        \"j\",\n        \"k\",\n        \"l\",\n        \"@\",\n        {\n          title: \"áöû\",\n          size: \"md\",\n          toggle: \"accents\",\n          announce: \"accents, button\",\n          keyId: \"accents\",\n        },\n      ],\n      [\n        \"z\",\n        \"x\",\n        \"c\",\n        \"v\",\n        \"b\",\n        \"n\",\n        \"m\",\n        { title: \"_\", announce: \"underscore, button\" },\n        { title: \".\", announce: \"period, button\" },\n        { title: \"-\", announce: \"dash, button\" },\n        {\n          title: \"shift\",\n          size: \"md\",\n          toggle: \"uppercase\",\n          announce: \"shift on, button\",\n          keyId: \"shift\",\n        },\n      ],\n      [\n        { title: \".com\", announce: \"dot, com\", size: \"md\" },\n        { title: \".net\", announce: \"dot, net\", size: \"md\" },\n        { title: \".edu\", announce: \"dot, edu\", size: \"md\" },\n        { title: \".org\", announce: \"dot, org\", size: \"md\" },\n        { title: \".co\", announce: \"dot, co\", size: \"md\" },\n        { title: \".uk\", announce: \"dot, uk\", size: \"md\" },\n      ],\n      [\n        {\n          title: \"Clear\",\n          size: \"lg\",\n          keyId: \"clear\",\n          announce: \"clear, button\",\n        },\n        {\n          title: \"Space\",\n          size: \"xl\",\n          keyId: \"space\",\n          announce: \"space, button\",\n        },\n        {\n          title: \"Done\",\n          size: \"lg\",\n          keyId: \"done\",\n          announce: \"done, button\",\n        },\n      ],\n    ],\n  };\n  const keyEvent = createSignal(\"\");\n  const titleSignal = createSignal(\"\");\n  onMount(() => {\n    setGlobalBackground(\"#000000\");\n  });\n\n  return (\n    <>\n      <View width={1080} x={350} y={100}>\n        <Column autofocus selected={1} scroll={\"none\"}>\n          <Text skipFocus style={Title}>\n            Username\n          </Text>\n          <Input titleSignal={titleSignal} keyEvent={keyEvent} />\n          <Keyboard formats={formats} keySignal={keyEvent} />\n        </Column>\n      </View>\n    </>\n  );\n};\n\nexport default TextPage;\n"],"names":["Input","props","_props$position","_props$titleSignal","_slicedToArray","titleSignal","title","setTitle","_createSignal2","createSignal","position","length","setPosition","_props$keyEvent","keyEvent","setKeyEvent","formatTitleText","createMemo","getformatTitleText","password","mask","repeat","_$createComponent","createEffect","on","key","undefined","inputText","currentPosition","newTitle","toLowerCase","slice","formatInputText","defer","View","_$mergeProps","color","backgroundColor","justifyContent","justify","borderRadius","radius","onLeft","Math","max","p","onRight","style","_props$tone","styles","Container","tones","tone","base","children","Text","_props$tone2","textColor","_props$tone3","Key","getTone","multiplier","_ref","sizes","size","_props$size","getMultiplier","baseWidth","_styles$1$Container2","getBaseWidth","keySpacing","_styles$1$Container$t","getKeySpacing","ButtonContainer","_styles$1$Container$t2","forwardStates","width","contain","_props$contain","textAlign","_ref9","_props$size4","keyStyles","_styles$1$Container4","_styles$1$Container$t3","KeyboardSimple","_props$keySignal","_ref13","keySignal","_","setKeySignal","_createSignal4","activeKeyboard","setActiveKeyboard","_createSignal6","selectedRowIndex","setSelectedRowIndex","_createSignal8","selectedColumnIndex","setSelectedColumnIndex","_createSignal10","rowWidth","setRowWidth","gap","getGap","totalWidth","screenW","getTotalWidth","keyHeight","_styles$2$Container$t2","getKeyHeight","keyboardRefList","Map","addKeyboardWidth","keyboard","_step","maxRow","_iterator","_createForOfIteratorHelper","formats","s","n","done","_step2","row","_iterator2","err","e","f","forwardFocus","height","For","each","Object","keys","Show","when","ref","element","_keyboardRefList$keyb","_keyboardRefList$keyb2","setFocus","centerKeyboard","display","Column","scroll","plinko","selected","alignItems","centerKeys","colIdx","Row","flexBoundary","_props$flexBoundary","wrap","rowWrap","rowIdx","onEnter","setOnEnter","toggle","_keyboardRefList$key$","_keyboardRefList$key$2","_keyboardRefList$key$3","_key$title","_key$title2","Keyboard","_props$tone15","TextPage","Title","fontSize","fontWeight","uppercase","keyId","announce","default","onMount","setGlobalBackground","x","y","autofocus","skipFocus"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}