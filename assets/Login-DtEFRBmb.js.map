{"version":3,"file":"Login-DtEFRBmb.js","sources":["../../node_modules/.pnpm/@lightningtv+solid-ui@0.23.0-rc1_@lightningtv+core@1.5.7_@lightningtv+solid@1.6.6_solid-js@1.8.20__solid-js@1.8.20/node_modules/@lightningtv/solid-ui/components/Input/Input.tsx","../../node_modules/.pnpm/@lightningtv+solid-ui@0.23.0-rc1_@lightningtv+core@1.5.7_@lightningtv+solid@1.6.6_solid-js@1.8.20__solid-js@1.8.20/node_modules/@lightningtv/solid-ui/components/Key/Key.tsx","../../node_modules/.pnpm/@lightningtv+solid-ui@0.23.0-rc1_@lightningtv+core@1.5.7_@lightningtv+solid@1.6.6_solid-js@1.8.20__solid-js@1.8.20/node_modules/@lightningtv/solid-ui/components/Keyboard/KeyboardSimple.tsx","../../node_modules/.pnpm/@lightningtv+solid-ui@0.23.0-rc1_@lightningtv+core@1.5.7_@lightningtv+solid@1.6.6_solid-js@1.8.20__solid-js@1.8.20/node_modules/@lightningtv/solid-ui/components/Keyboard/Keyboard.tsx","../../src/pages/Login.tsx"],"sourcesContent":["/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSignal, type Component, createEffect, on, createMemo } from 'solid-js';\nimport { View, Text } from '@lightningtv/solid';\nimport styles from './Input.styles.js';\nimport type { InputProps } from './Input.types.js';\n\nconst getformatTitleText = (props, title) =>\n  props.password ? (props.mask ?? '').repeat(title.length ?? 0) : title;\n\nconst Input: Component<InputProps> = props => {\n  /* eslint-disable solid/reactivity */\n  const [title, setTitle] = props.titleSignal;\n  const [position, setPosition] = createSignal(props.position ?? title().length);\n  const [keyEvent, setKeyEvent] = props.keyEvent;\n  const formatTitleText = createMemo(() => getformatTitleText(props, title()));\n\n  const formatInputText = (key: string) => {\n    if (key === undefined || key === '') {\n      return;\n    }\n\n    const inputText = title();\n    let currentPosition = position();\n    let newTitle = '';\n    switch (key.toLowerCase()) {\n      case 'backspace':\n      case 'delete':\n        newTitle =\n          currentPosition > 0\n            ? inputText.slice(0, currentPosition - 1) + inputText.slice(currentPosition)\n            : inputText;\n        currentPosition--;\n        break;\n      case 'done':\n        break;\n      case 'space':\n        newTitle =\n          currentPosition > 0\n            ? inputText.slice(0, currentPosition) + ' ' + inputText.slice(currentPosition)\n            : ' ' + inputText;\n        currentPosition++;\n        break;\n      case 'clear':\n        newTitle = '';\n        currentPosition = 0;\n        break;\n      default:\n        newTitle =\n          currentPosition > 0\n            ? inputText.slice(0, currentPosition) + key + inputText.slice(currentPosition)\n            : key + inputText;\n        currentPosition++;\n        break;\n    }\n\n    setKeyEvent('');\n    setTitle(newTitle);\n    setPosition(currentPosition);\n    return '';\n  };\n\n  createEffect(\n    on(\n      () => keyEvent(),\n      keyEvent => {\n        formatInputText(keyEvent);\n      },\n      { defer: true }\n    )\n  );\n\n  function onRight() {\n    setPosition(p => Math.max(p + 1, title().length));\n    return true;\n  }\n\n  function onLeft() {\n    setPosition(p => Math.max(p - 1, 0));\n    return true;\n  }\n\n  return (\n    <View\n      {...props}\n      // borderColor={props.strokeColor} // TODO clew uses strokeColor, but we currently don't account for nested properties (border.color)\n      // borderWidth={props.strokeWidth} // TODO clew uses strokeWidth, but we currently don't account for nested properties (border.width)\n      color={props.backgroundColor}\n      justifyContent={props.justify}\n      borderRadius={props.radius}\n      position={position()}\n      onLeft={onLeft}\n      onRight={onRight}\n      // @ts-expect-error TODO type needs to be fixed in framework\n      style={[\n        props.style, //\n        styles.Container.tones[props.tone ?? styles.tone],\n        styles.Container.base\n      ]}\n    >\n      <Text\n        tone={props.tone ?? styles.tone}\n        color={props.textColor}\n        style={[\n          styles.Text.tones[props.tone ?? styles.tone], //\n          styles.Text.base\n        ]}\n      >\n        {formatTitleText() || ' '}\n      </Text>\n    </View>\n  );\n};\n\nexport default Input;\n","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createMemo, type Component } from 'solid-js';\nimport { Text } from '@lightningtv/solid';\nimport { ButtonContainer } from '../Button/Button.jsx';\nimport styles from './Key.styles.js';\nimport type { KeyProps } from './Key.types.js';\n\nconst getTone = (props: KeyProps) => props.tone ?? styles.tone;\nconst getMultiplier = (props: KeyProps) =>\n  props.sizes?.[props.size ?? 'sm'] ??\n  styles.Container?.tones?.[props.tone ?? styles.tone]?.sizes?.[props.size ?? 'sm'] ??\n  styles.Container.base.sizes[props.size ?? 'sm'];\n\nconst getBaseWidth = (props: KeyProps) =>\n  props.baseWidth ??\n  styles.Container?.tones?.[props.tone ?? styles.tone]?.baseWidth ??\n  styles.Container.base.baseWidth;\n\nconst getKeySpacing = (props: KeyProps) =>\n  props.keySpacing ??\n  styles.Container.tones?.[props.tone ?? styles.tone]?.keySpacing ??\n  styles.Container.base.keySpacing;\n\nconst Key: Component<KeyProps> = props => {\n  const tone = createMemo(() => getTone(props));\n  const multiplier = createMemo(() => getMultiplier(props));\n  const baseWidth = createMemo(() => getBaseWidth(props));\n  const keySpacing = createMemo(() => getKeySpacing(props));\n\n  return (\n    <ButtonContainer\n      {...props}\n      // @ts-expect-error TODO type needs to be fixed in framework\n      style={[\n        props.style, //\n        styles.Container.tones?.[tone()],\n        styles.Container.base\n      ]}\n      forwardStates\n      width={multiplier() * baseWidth() + keySpacing() * (multiplier() - 1)}\n    >\n      <Text\n        contain={props.contain ?? 'width'}\n        textAlign={props.textAlign}\n        style={[\n          styles.Text.tones[tone()], //\n          styles.Text.base\n        ]}\n      >\n        {props.title ? props.title : ''}\n      </Text>\n    </ButtonContainer>\n    // if props onEnter, use that, else utilize toggle to see if update keyboard or add the key\n\n    // props.setValue('props.jeyID')\n    // onEnter={props.onEnter? props.onEnter : (props.toggle? toggleKeyboard: softKey, keyID/title) }\n  );\n};\n\nexport default Key;\n","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { For, Show, createMemo, createSignal, type Accessor, type Component } from 'solid-js';\nimport Column from '../Column/Column.jsx';\nimport Row from '../Row/Row.jsx';\nimport Key from '../Key/Key.jsx';\nimport type { KeyProps } from '../Key/Key.types.js';\nimport styles from './Keyboard.styles.js';\nimport type { KeyboardProps } from './Keyboard.types.js';\nimport { ElementNode, View } from '@lightningtv/solid';\nimport keyStyles from '../Key/Key.styles.js';\n\nconst getTone = (props: KeyboardProps) => \n  props.tone ?? styles.tone;\n\nconst getGap = (props: KeyboardProps) =>\n  props.gap ??\n  props.keySpacing ??\n  styles.Container.tones[props.tone ?? styles.tone]?.keySpacing ??\n  styles.Container.base.keySpacing;\n\nconst getKeyHeight = (props: KeyboardProps) =>\n  props.keyHeight ??\n  styles.Container.tones[props.tone ?? styles.tone]?.keyHeight ??\n  styles.Container.base.keyHeight;\n\nconst getTotalWidth = (props: KeyboardProps) =>\n  props.screenW ??\n  props.width ??\n  styles.Container.tones[props.tone ?? styles.tone]?.width ??\n  styles.Container.base.width;\n\nconst getMultiplier = (props: KeyProps) =>\n  props.sizes?.[props.size ?? 'sm'] ??\n  keyStyles.Container?.tones?.[props.tone ?? keyStyles.tone]?.sizes?.[props.size ?? 'sm'] ??\n  keyStyles.Container.base.sizes[props.size ?? 'sm'];\n\nconst getBaseWidth = (props: KeyProps) =>\n  props.baseWidth ??\n  keyStyles.Container?.tones?.[props.tone ?? keyStyles.tone]?.baseWidth ??\n  keyStyles.Container.base.baseWidth;\n\nconst getKeySpacing = (props: KeyProps) =>\n  props.keySpacing ??\n  keyStyles.Container.tones?.[props.tone ?? keyStyles.tone]?.keySpacing ??\n  keyStyles.Container.base.keySpacing;\n\nconst KeyboardSimple: Component<KeyboardProps> = (props: KeyboardProps) => {\n  // eslint-disable-next-line solid/reactivity\n  const [_, setKeySignal] = props.keySignal ?? createSignal('');\n  const [activeKeyboard, setActiveKeyboard] = createSignal('default');\n  const [selectedRowIndex, setSelectedRowIndex] = createSignal(0);\n  const [selectedColumnIndex, setSelectedColumnIndex] = createSignal(0);\n  const [rowWidth, setRowWidth] = createSignal(0);\n\n  const tone = createMemo(() => getTone(props));\n  const gap = createMemo(() => getGap(props));\n  const totalWidth = createMemo(() => getTotalWidth(props));\n  const keyHeight = createMemo(() => getKeyHeight(props));\n  const keyboardRefList = new Map<string, [ElementNode, number]>();\n\n  const setOnEnter = (key: string | KeyProps, rowIdx: Accessor<number>, colIdx: Accessor<number>) => {\n    if (typeof key === 'string') {\n      return () => setKeySignal(key);\n    } else if (key.toggle) {\n      return () => {\n        setSelectedRowIndex(rowIdx());\n        setSelectedColumnIndex(colIdx());\n        setActiveKeyboard(key.toggle);\n        keyboardRefList[key.toggle]?.element?.setFocus();\n        setRowWidth(keyboardRefList[key.toggle]?.width ?? 0);\n      };\n    } else {\n      return () => setKeySignal(typeof key === 'string' ? key : key.title ?? '');\n    }\n  };\n\n  const addKeyboardWidth = (keyboard: string) => {\n    // largest row size\n    let maxRow = 0;\n    for (const row of props.formats[keyboard]) {\n      // width of individual row\n      let rowWidth = 0;\n      for (const key of row) {\n        let width = getBaseWidth(props);\n        if (typeof key === 'object') {\n          width = getMultiplier(key) * getBaseWidth(props) + getKeySpacing(props) * (getMultiplier(key) - 1);\n        }\n        rowWidth += width + getKeySpacing(props);\n      }\n      if (maxRow < rowWidth) {\n        maxRow = rowWidth;\n      }\n    }\n    return maxRow;\n  };\n\n  return (\n    <View\n      {...props}\n      forwardFocus={0}\n      // @ts-expect-error TODO type needs to be fixed in framework\n      style={[props.style, styles.Container.tones[tone()], styles.Container.base]}\n      width={totalWidth()}\n      // height is defined by the height of the keys, the number of rows, as well as the gap between them\n      height={undefined}\n    >\n      <For each={Object.keys(props.formats)}>\n        {keyboard => (\n          <Show when={activeKeyboard() === keyboard}>\n            <View\n              ref={element => {\n                keyboardRefList[keyboard] = { element: element, width: addKeyboardWidth(keyboard) };\n                if (activeKeyboard() === keyboard) {\n                  element.setFocus();\n                  setRowWidth(keyboardRefList[keyboard]?.width ?? 0);\n                }\n                return keyboard;\n              }}\n              justifyContent={props.centerKeyboard ? 'center' : 'flexStart'}\n              display={'flex'}\n              forwardFocus={0}\n            >\n              <Column\n                scroll={'none'}\n                plinko\n                selected={selectedColumnIndex()}\n                alignItems={props.centerKeys || props.centerKeyboard ? 'center' : 'flexStart'}\n                width={rowWidth()}\n                gap={gap()}\n              >\n                <For each={props.formats[keyboard]}>\n                  {(row: (string | KeyProps)[], colIdx) => (\n                    <Row\n                      scroll={'none'}\n                      selected={selectedRowIndex()}\n                      flexBoundary={props.flexBoundary ?? 'contain'}\n                      display={'flex'}\n                      gap={gap()}\n                      height={keyHeight()}\n                      wrap={props.rowWrap}\n                    >\n                      <For each={row}>\n                        {(key: string | KeyProps, rowIdx) => (\n                          <Key\n                            {...(typeof key === 'string' ? {} : key)}\n                            onEnter={setOnEnter(key, rowIdx, colIdx)}\n                            title={typeof key === 'string' ? key : key.title ?? ''}\n                            height={keyHeight()}\n                          />\n                        )}\n                      </For>\n                    </Row>\n                  )}\n                </For>\n              </Column>\n            </View>\n          </Show>\n        )}\n      </For>\n    </View>\n  );\n};\n\nexport default KeyboardSimple;\n","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { type Component } from 'solid-js';\nimport styles from './Keyboard.styles.js';\nimport KeyboardSimple from './KeyboardSimple.jsx';\nimport type { KeyboardProps } from './Keyboard.types.js';\n\n// rows created from each array passed in\nconst Keyboard: Component<KeyboardProps> = (props: KeyboardProps) => {\n  return (\n    <KeyboardSimple\n      {...props}\n      // @ts-expect-error TODO type needs to be fixed in framework\n      style={[\n        props.style, //\n        styles.Container.tones[props.tone ?? styles.tone],\n        styles.Container.base\n      ]}\n    />\n  );\n};\n\nexport default Keyboard;\n","import {\n  IntrinsicNodeStyleProps,\n  IntrinsicTextNodeStyleProps,\n  Text,\n  View,\n} from \"@lightningtv/solid\";\nimport { createSignal, onMount } from \"solid-js\";\nimport { Keyboard, Input, Column } from \"@lightningtv/solid-ui\";\nimport { setGlobalBackground } from \"../state\";\n\nconst TextPage = () => {\n  const Title = {\n    fontSize: 42,\n    fontWeight: \"bold\",\n  } as const;\n\n  const formats = {\n    uppercase: [\n      [\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\",\n        \"8\",\n        \"9\",\n        \"0\",\n        {\n          title: \"Delete\",\n          size: \"md\",\n          keyId: \"delete\",\n          announce: \"delete, button\",\n        },\n      ],\n      [\n        \"Q\",\n        \"W\",\n        \"E\",\n        \"R\",\n        \"T\",\n        \"Y\",\n        \"U\",\n        \"I\",\n        \"O\",\n        \"P\",\n        {\n          title: \"#@!\",\n          size: \"md\",\n          toggle: \"symbols\",\n          announce: \"symbol mode, button\",\n          keyId: \"symbols\",\n        },\n      ],\n      [\n        \"A\",\n        \"S\",\n        \"D\",\n        \"F\",\n        \"G\",\n        \"H\",\n        \"J\",\n        \"K\",\n        \"L\",\n        \"@\",\n        {\n          title: \"áöû\",\n          size: \"md\",\n          toggle: \"accents\",\n          announce: \"accents, button\",\n          keyId: \"accents\",\n        },\n      ],\n      [\n        \"Z\",\n        \"X\",\n        \"C\",\n        \"V\",\n        \"B\",\n        \"N\",\n        \"M\",\n        { title: \".\", announce: \"period, button\" },\n        { title: \"-\", announce: \"dash, button\" },\n        { title: \"_\", announce: \"underscore, button\" },\n        {\n          title: \"shift\",\n          size: \"md\",\n          toggle: \"default\",\n          announce: \"shift off, button\",\n          keyId: \"shift\",\n        },\n      ],\n      [\n        { title: \".com\", announce: \"dot, com\", size: \"md\" },\n        { title: \".net\", announce: \"dot, net\", size: \"md\" },\n        { title: \".edu\", announce: \"dot, edu\", size: \"md\" },\n        { title: \".org\", announce: \"dot, org\", size: \"md\" },\n        { title: \".co\", announce: \"dot, co\", size: \"md\" },\n        { title: \".uk\", announce: \"dot, uk\", size: \"md\" },\n      ],\n      [\n        {\n          title: \"Clear\",\n          size: \"lg\",\n          keyId: \"clear\",\n          announce: \"clear, button\",\n        },\n        {\n          title: \"Space\",\n          size: \"xl\",\n          keyId: \"space\",\n          announce: \"space, button\",\n        },\n        {\n          title: \"Done\",\n          size: \"lg\",\n          keyId: \"done\",\n          announce: \"done, button\",\n        },\n      ],\n    ],\n    default: [\n      [\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\",\n        \"8\",\n        \"9\",\n        \"0\",\n        {\n          title: \"Delete\",\n          size: \"md\",\n          keyId: \"delete\",\n          announce: \"delete, button\",\n        },\n      ],\n      [\n        \"q\",\n        \"w\",\n        \"e\",\n        \"r\",\n        \"t\",\n        \"y\",\n        \"u\",\n        \"i\",\n        \"o\",\n        \"p\",\n        {\n          title: \"#@!\",\n          size: \"md\",\n          toggle: \"symbols\",\n          announce: \"symbol mode, button\",\n          keyId: \"symbols\",\n        },\n      ],\n      [\n        \"a\",\n        \"s\",\n        \"d\",\n        \"f\",\n        \"g\",\n        \"h\",\n        \"j\",\n        \"k\",\n        \"l\",\n        \"@\",\n        {\n          title: \"áöû\",\n          size: \"md\",\n          toggle: \"accents\",\n          announce: \"accents, button\",\n          keyId: \"accents\",\n        },\n      ],\n      [\n        \"z\",\n        \"x\",\n        \"c\",\n        \"v\",\n        \"b\",\n        \"n\",\n        \"m\",\n        { title: \"_\", announce: \"underscore, button\" },\n        { title: \".\", announce: \"period, button\" },\n        { title: \"-\", announce: \"dash, button\" },\n        {\n          title: \"shift\",\n          size: \"md\",\n          toggle: \"uppercase\",\n          announce: \"shift on, button\",\n          keyId: \"shift\",\n        },\n      ],\n      [\n        { title: \".com\", announce: \"dot, com\", size: \"md\" },\n        { title: \".net\", announce: \"dot, net\", size: \"md\" },\n        { title: \".edu\", announce: \"dot, edu\", size: \"md\" },\n        { title: \".org\", announce: \"dot, org\", size: \"md\" },\n        { title: \".co\", announce: \"dot, co\", size: \"md\" },\n        { title: \".uk\", announce: \"dot, uk\", size: \"md\" },\n      ],\n      [\n        {\n          title: \"Clear\",\n          size: \"lg\",\n          keyId: \"clear\",\n          announce: \"clear, button\",\n        },\n        {\n          title: \"Space\",\n          size: \"xl\",\n          keyId: \"space\",\n          announce: \"space, button\",\n        },\n        {\n          title: \"Done\",\n          size: \"lg\",\n          keyId: \"done\",\n          announce: \"done, button\",\n        },\n      ],\n    ],\n  };\n  const keyEvent = createSignal(\"\");\n  const titleSignal = createSignal(\"\");\n  onMount(() => {\n    setGlobalBackground(\"#000000\");\n  });\n\n  return (\n    <>\n      <View width={1080} x={350} y={100}>\n        <Column autofocus selected={1} scroll={\"none\"}>\n          <Text skipFocus style={Title}>\n            Username\n          </Text>\n          <Input titleSignal={titleSignal} keyEvent={keyEvent} />\n          <Keyboard formats={formats} keySignal={keyEvent} />\n        </Column>\n      </View>\n    </>\n  );\n};\n\nexport default TextPage;\n"],"names":["getformatTitleText","props","title","password","mask","repeat","length","Input","setTitle","titleSignal","position","setPosition","createSignal","keyEvent","setKeyEvent","formatTitleText","createMemo","formatInputText","key","undefined","inputText","currentPosition","newTitle","toLowerCase","slice","createEffect","on","defer","onRight","p","Math","max","onLeft","_$createComponent","View","_$mergeProps","color","backgroundColor","justifyContent","justify","borderRadius","radius","style","styles","Container","tones","tone","base","children","Text","textColor","getTone","getMultiplier","sizes","size","getBaseWidth","baseWidth","getKeySpacing","keySpacing","Key","multiplier","ButtonContainer","forwardStates","width","contain","textAlign","getGap","gap","getKeyHeight","keyHeight","getTotalWidth","screenW","keyStyles","KeyboardSimple","_","setKeySignal","keySignal","activeKeyboard","setActiveKeyboard","selectedRowIndex","setSelectedRowIndex","selectedColumnIndex","setSelectedColumnIndex","rowWidth","setRowWidth","totalWidth","keyboardRefList","Map","setOnEnter","rowIdx","colIdx","toggle","element","setFocus","addKeyboardWidth","keyboard","maxRow","row","formats","forwardFocus","height","For","each","Object","keys","Show","when","ref","centerKeyboard","display","Column","scroll","plinko","selected","alignItems","centerKeys","Row","flexBoundary","wrap","rowWrap","onEnter","Keyboard","TextPage","Title","fontSize","fontWeight","uppercase","keyId","announce","default","onMount","setGlobalBackground","x","y","autofocus","skipFocus"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}