{"version":3,"file":"FlexGrow-legacy-DqjKoeQo.js","sources":["../../src/pages/FlexGrow.tsx"],"sourcesContent":["import {\n  ElementNode,\n  IntrinsicNodeStyleProps,\n  Text,\n  View,\n} from \"@lightningtv/solid\";\nimport { Column, Row } from \"@lightningtv/solid/primitives\";\nimport { createSignal, onMount } from \"solid-js\";\nimport styles from \"../styles\";\nimport { setGlobalBackground } from \"../state\";\n\nconst FlexGrow = () => {\n  const RowStyles = {\n    display: \"flex\",\n    justifyContent: \"flexStart\",\n    width: 1600,\n    height: 110,\n    color: \"#FFF\",\n  } satisfies IntrinsicNodeStyleProps;\n\n  const rowTitle = {\n    fontSize: 44,\n    marginTop: 25,\n    marginBottom: -20,\n    skipFocus: true,\n  };\n\n  const red = '#ff0000ff';\n  const darkorange = '#ff8c00ff';\n  const green = '#00ff00ff';\n\n  function Block(props) {\n    const styles = {\n      width: props.flexGrow ? undefined : 200, // Allow flexible width if flexGrow exists\n      height: 100,\n      y: 5,\n    };\n\n    return <View {...props} style={styles} />;\n  }\n\n  const [columnY, setColumnY] = createSignal(50);\n  function onFocus(this: ElementNode) {\n    this.children[this.selected || 0].setFocus();\n    setColumnY(150 + (this.y || 0) * -1);\n  }\n\n  onMount(() => {\n    setGlobalBackground(\"#333333\");\n  });\n\n  const gap = 50;\n\n  return (\n    <>\n      <Column\n        x={160}\n        y={columnY()}\n        gap={30}\n        height={850}\n        width={RowStyles.width}\n        style={styles.Column}\n      >\n        <Text style={rowTitle}>Flex Start RTL</Text>\n        <Row gap={gap} direction={'rtl'} style={RowStyles} onFocus={onFocus}>\n          <Block flexGrow={1} autofocus color={red} />\n          <Block flexGrow={2} color={darkorange} />\n          <Block color={green} />\n        </Row>\n\n        <Text style={rowTitle}>Flex End with Flex Grow</Text>\n        <Row gap={gap} style={RowStyles} onFocus={onFocus}>\n          <Block color={green} />\n          <Block flexGrow={1} color={red} />\n          <Block flexGrow={2} color={darkorange} />\n        </Row>\n\n        <Text style={rowTitle}>Space Between with Flex Grow</Text>\n        <Row gap={gap} justifyContent={\"spaceBetween\"} style={RowStyles} onFocus={onFocus}>\n          <Block flexGrow={1} color={red} />\n          <Block flexGrow={1} flexOrder={-1} color={darkorange} />\n          <Block flexGrow={2} color={green} />\n        </Row>\n      </Column>\n    </>\n  );\n};\n\nexport default FlexGrow;\n"],"names":["FlexGrow","RowStyles","display","justifyContent","width","height","color","rowTitle","fontSize","marginTop","marginBottom","skipFocus","red","darkorange","green","Block","props","styles","flexGrow","undefined","y","_$createComponent","View","_$mergeProps","style","_createSignal","createSignal","_createSignal2","_slicedToArray","columnY","setColumnY","onFocus","children","selected","setFocus","onMount","setGlobalBackground","gap","Column","x","Text","Row","direction","autofocus","flexOrder"],"mappings":"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"}