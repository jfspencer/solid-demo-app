{"version":3,"file":"Entity-legacy-DMa2RzLO.js","sources":["../../src/pages/Entity.tsx"],"sourcesContent":["import {\n  ElementNode,\n  Text,\n  View,\n  Show,\n  assertTruthy,\n  setActiveElement,\n} from \"@lightningtv/solid\";\nimport { Column, Row } from \"@lightningtv/solid/primitives\";\n\nimport { createEffect, on, createSignal } from \"solid-js\";\nimport { TileRow, Button } from \"../components\";\nimport { setGlobalBackground } from \"../state\";\nimport ContentBlock from \"../components/ContentBlock\";\nimport { useNavigate } from \"@solidjs/router\";\nimport styles from \"../styles\";\nimport * as player from \"../video\";\n\nconst Entity = (props) => {\n  const [backdropAlpha, setBackdropAlpha] = createSignal(0);\n  const navigate = useNavigate();\n\n  createEffect(\n    on(\n      props.data.entity,\n      (data) => {\n        setGlobalBackground(data.backgroundImage);\n      },\n      { defer: true }\n    )\n  );\n\n  const columnY = 640;\n\n  const Backdrop = {\n    color: \"#000000\",\n    alpha: 0,\n    width: 1900,\n    height: 890,\n    x: -160,\n    y: columnY,\n    borderRadius: 30,\n  };\n\n  function onRowFocus(this: ElementNode) {\n    this.children[this.selected || 0].setFocus();\n    columnRef.y = columnY;\n    backdropRef.y = columnY;\n    backdropRef.alpha = 0;\n  }\n\n  function onRowFocusAnimate(this: ElementNode) {\n    this.children[this.selected || 0].setFocus();\n    columnRef.y = 200;\n    backdropRef.y = 160;\n    backdropRef.alpha = 0.9;\n  }\n\n  function onEnter(this: ElementNode) {\n    let entity = this.children.find((c) => c.states.has(\"focus\"));\n    assertTruthy(entity && entity.item?.href);\n    navigate(entity.item.href as string);\n  }\n\n  function onEscape() {\n    //closeVideo();\n    // Set focus back to lightning app\n    document.getElementsByTagName(\"canvas\")[0].focus();\n    entityActions.setFocus();\n    setBackdropAlpha(0);\n  }\n\n  function onEnterTrailer() {\n    //const video = playVideo();\n    //setActiveElement(video);\n    setBackdropAlpha(0.9);\n  }\n\n  let columnRef, backdropRef, entityActions;\n\n  /**\n   * I used to have keyed on Show - This would cause the entire tree to be destroyed and recreated. Without keyed, the data is diffed and the nodes are reused and passed in new props.\n   * Only one element gets deleted and recreated - a text node for reviews.\n   *\n   * However this causes problems with elements which have internal state like Row & Column because the selected does not get reset.\n   */\n  return (\n    <Show when={props.data.entity()}>\n      <View x={170} onUp={() => entityActions.setFocus()} onEscape={onEscape}>\n        <ContentBlock\n          y={260}\n          content={props.data.entity().heroContent}\n        ></ContentBlock>\n        <Row\n          ref={entityActions}\n          y={500}\n          scroll=\"none\"\n          height={90}\n          width={640}\n          gap={40}\n          onDown={() => columnRef.setFocus()}\n          onEnter={onEnterTrailer}\n        >\n          <Button width={300} autofocus={props.data.entity()}>\n            Play\n          </Button>\n          <Button width={300}>Resume</Button>\n        </Row>\n\n        <Column\n          ref={columnRef}\n          x={0}\n          y={columnY}\n          style={styles.Column}\n          height={880}\n          scroll=\"none\"\n          zIndex={5}\n        >\n          <Show when={props.data.recommendations() && props.data.credits()}>\n            <Text skipFocus style={styles.RowTitle}>\n              Recommendations\n            </Text>\n            <TileRow\n              onFocus={onRowFocus}\n              onEnter={onEnter}\n              items={props.data.recommendations()}\n              width={1620}\n            />\n            <Text skipFocus style={styles.RowTitle}>\n              Cast and Crew\n            </Text>\n            <TileRow\n              onFocus={onRowFocusAnimate}\n              onEnter={onEnter}\n              items={props.data.credits()}\n              width={1620}\n            />\n          </Show>\n        </Column>\n        <View\n          ref={backdropRef}\n          style={Backdrop}\n          transition={{ alpha: true, y: true }}\n        />\n      </View>\n      <View\n        alpha={backdropAlpha()}\n        color={\"#000000\"}\n        skipFocus\n        zIndex={200}\n        transition={{ alpha: true }}\n      />\n    </Show>\n  );\n};\n\nexport default Entity;\n"],"names":["Entity","props","_createSignal","createSignal","_createSignal2","_slicedToArray","backdropAlpha","setBackdropAlpha","navigate","useNavigate","createEffect","on","data","entity","setGlobalBackground","backgroundImage","defer","columnY","Backdrop","color","alpha","width","height","x","y","borderRadius","onRowFocus","children","selected","setFocus","columnRef","backdropRef","onRowFocusAnimate","onEnter","_entity$item","find","c","states","has","item","href","onEscape","document","getElementsByTagName","focus","entityActions","onEnterTrailer","_$createComponent","Show","when","View","onUp","ContentBlock","content","heroContent","Row","ref","r$","_ref$","scroll","gap","onDown","Button","autofocus","Column","_ref$2","style","styles","zIndex","_$memo","recommendations","credits","Text","skipFocus","RowTitle","TileRow","onFocus","items","_ref$3","transition"],"mappings":"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"}