{"version":3,"file":"Grid-legacy-09hH4fVa.js","sources":["../../node_modules/.pnpm/@lightningtv+solid@2.0.1_solid-js@1.8.20_patch_hash=giqxcdoplfdpfwlhyp76wuxlxa_/node_modules/@lightningtv/solid/src/primitives/createInfiniteItems.ts","../../src/pages/gridStyles.ts","../../src/pages/Grid.tsx"],"sourcesContent":["import {\n  type Accessor,\n  batch,\n  type Setter,\n  createComputed,\n  createResource,\n  createSignal,\n} from 'solid-js';\n\n// Adopted from https://github.com/solidjs-community/solid-primitives/blob/main/packages/pagination/src/index.ts\n// As we don't have intersection observer in Lightning, we can't use the original implementation\n\n/**\n * Provides an easy way to implement infinite items.\n *\n * ```ts\n * const [items, loader, { item, setItem, setItems, end, setEnd }] = createInfiniteScroll(fetcher);\n * ```\n * @param fetcher `(item: number) => Promise<T[]>`\n * @return `items()` is an accessor contains array of contents\n * @property `items.loading` is a boolean indicator for the loading state\n * @property `items.error` contains any error encountered\n * @method `page` is an accessor that contains page number\n * @method `setPage` allows to manually change the page number\n * @method `setItems` allows to manually change the contents of the item\n * @method `end` is a boolean indicator for end of the item\n * @method `setEnd` allows to manually change the end\n */\nexport function createInfiniteItems<T>(\n  fetcher: (item: number) => Promise<T[]>,\n): [\n  items: Accessor<T[]>,\n  options: {\n    page: Accessor<number>;\n    setPage: Setter<number>;\n    setItems: Setter<T[]>;\n    end: Accessor<boolean>;\n    setEnd: Setter<boolean>;\n  },\n] {\n  const [items, setItems] = createSignal<T[]>([]);\n  const [page, setPage] = createSignal(0);\n  const [end, setEnd] = createSignal(false);\n\n  const [contents] = createResource(page, fetcher);\n\n  createComputed(() => {\n    const content = contents();\n    if (!content) return;\n    batch(() => {\n      if (content.length === 0) setEnd(true);\n      setItems((p) => [...p, ...content]);\n    });\n  });\n\n  return [\n    items,\n    {\n      page,\n      setPage,\n      setItems,\n      end,\n      setEnd,\n    },\n  ];\n}\n","import {\n  IntrinsicNodeStyleProps,\n  IntrinsicTextNodeStyleProps,\n  hexColor,\n} from \"@lightningtv/solid\";\nimport theme from \"theme\";\n\nconst ROW_HEIGHT = 50;\nexport default {\n  ProductRow: {\n    width: 500,\n    display: \"flex\",\n    flexDirection: \"row\",\n    gap: 40,\n    height: ROW_HEIGHT,\n    borderRadius: 16,\n    color: 0xffffff0d,\n    border: { color: 0x008085ff, width: 0 },\n    active: {\n      color: 0x39393cff,\n    },\n    focus: {\n      color: 0xf6f6f9ff,\n      border: { color: 0x008085ff, width: 6 },\n    },\n    transition: {\n      // leave easing blank to use default linear\n      x: { duration: 300 },\n      width: { duration: 300 },\n      alpha: { duration: 300 },\n    },\n  },\n  ProductText: {\n    fontSize: 20,\n    fontWeight: 600,\n    lineHeight: 24,\n    color: \"#f6f6f6\",\n    focus: {\n      color: 0x141417ff,\n    },\n  },\n  itemsContainer: {\n    width: theme.layout.screenW,\n    height: 600,\n    y: 180,\n    x: 180,\n    zIndex: 2,\n  },\n} as const;\n","import {\n  createEffect,\n  on,\n  createSignal,\n  createSelector,\n  Index,\n  onMount,\n} from \"solid-js\";\nimport { type ElementNode, View, Text } from \"@lightningtv/solid\";\nimport { Column, Row } from \"@lightningtv/solid-ui\";\nimport styles from \"./gridStyles\";\nimport { setGlobalBackground } from \"../state\";\nimport { createInfiniteItems } from \"@lightningtv/solid/primitives\";\n\ninterface ProductsResponse {\n  limit: number;\n  products: any[]; // You can replace 'any' with the actual type of your products\n  skip: number;\n  total: number;\n}\n\ninterface Product {\n  brand: string;\n  category: string;\n  description: string;\n  discountPercentage: number;\n  id: number;\n  images: string[];\n  price: number;\n  rating: number;\n  stock: number;\n  thumbnail: string;\n  title: string;\n}\n\nfunction ProductRow(props) {\n  return (\n    <View\n      y={props.y}\n      autofocus={props.autofocus}\n      style={styles.ProductRow}\n      forwardStates\n    >\n      <Text style={styles.ProductText}>{props.item.id}</Text>\n      <Text style={styles.ProductText}>{props.item.title}</Text>\n      <Text style={styles.ProductText}>{props.item.price}</Text>\n    </View>\n  );\n}\n\nconst Grid = () => {\n  let totalProducts = 100;\n  const [columnY, setcolumnY] = createSignal(0);\n  const isFirst = createSelector(() => 0);\n  const [rowIndex, setRowIndex] = createSignal(0);\n  const [items, setItems] = createSignal<Product[]>([]);\n  const [products, { setPage }] = createInfiniteItems<Product>((page) => {\n    return fetch(`https://dummyjson.com/products?limit=20&skip=${20 * page}`)\n      .then((res) => res.json())\n      .then((data: ProductsResponse) => {\n        totalProducts = data.total;\n        return data.products;\n      });\n  });\n\n  const EXTRA = 8;\n  // When rowIndex changes we create a sub array for the UI\n  createEffect(\n    on(\n      [products, rowIndex],\n      ([products, index]) => {\n        if (items().length - EXTRA > index) return;\n\n        setItems(products.slice(0, index + EXTRA));\n        if (index > products.length - 5) {\n          // Load more products\n          setPage((p) => p + 1);\n        }\n      },\n      { defer: true }\n    )\n  );\n\n  onMount(() => {\n    setGlobalBackground(\"#000000\");\n  });\n\n  function changeRow(elm, active, selectedIndex, lastSelectedIndex) {\n    setcolumnY((active.y || 0) * -1 + 50);\n    setRowIndex(selectedIndex);\n  }\n\n  return (\n    <View clipping style={styles.itemsContainer}>\n      <Column plinko y={columnY()} scroll=\"none\" onSelectedChanged={changeRow}>\n        <Index each={items()}>\n          {(item, i) => (\n            <ProductRow y={i * 50} item={item()} autofocus={isFirst(i)} />\n          )}\n        </Index>\n      </Column>\n    </View>\n  );\n};\n\nexport default Grid;\n"],"names":["createInfiniteItems","fetcher","_createSignal","createSignal","_createSignal2","_slicedToArray","items","setItems","_createSignal3","_createSignal4","page","setPage","_createSignal5","_createSignal6","end","setEnd","_createResource","createResource","_createResource2","contents","createComputed","content","batch","length","p","concat","_toConsumableArray","ROW_HEIGHT","styles","ProductRow","width","display","flexDirection","gap","height","borderRadius","color","border","active","focus","transition","x","duration","alpha","ProductText","fontSize","fontWeight","lineHeight","itemsContainer","theme","layout","screenW","y","zIndex","props","_$createComponent","View","autofocus","style","forwardStates","children","Text","item","id","title","price","Grid","_createSignal7","_createSignal8","columnY","setcolumnY","isFirst","createSelector","_createSignal9","_createSignal10","rowIndex","setRowIndex","_createSignal11","_createSignal12","_createInfiniteItems","fetch","then","res","json","data","total","products","_createInfiniteItems2","EXTRA","on","_ref","_ref2","index","slice","defer","onMount","setGlobalBackground","changeRow","elm","selectedIndex","lastSelectedIndex","clipping","Column","plinko","scroll","onSelectedChanged","Index","each","i"],"mappings":"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","x_google_ignoreList":[0]}