{"version":3,"file":"TMDBGrid-legacy-CZHbN1DR.js","sources":["../../node_modules/.pnpm/@lightningtv+solid@2.7.8_@lightningjs+renderer@2.13.0_@solidjs+router@0.15.3_patch_hash=hnhvc_j2dbu7s43oiapm3sbrx6morz7u/node_modules/@lightningtv/solid/src/primitives/Grid.tsx","../../src/pages/TMDBGrid.tsx"],"sourcesContent":["import { ValidComponent, For, createSignal, createMemo } from \"solid-js\";\nimport { View, Dynamic, type NodeProps, type ElementNode, isFunction } from \"@lightningtv/solid\";\n\nexport const Grid = <T,>(props: {\n  item: ValidComponent;\n  itemHeight?: number;\n  itemWidth?: number;\n  itemOffset?: number;\n  items: T[];\n  columns?: number;\n  looping?: boolean;\n  scroll?: \"auto\" | \"none\";\n  onSelectedChanged?: (index: number, grid: ElementNode, elm?: ElementNode) => void;\n} & NodeProps) => {\n  const [focusedIndex, setFocusedIndex] = createSignal(0);\n  const baseColumns = 4;\n\n  const columns = createMemo(() => props.columns || baseColumns);\n  const totalWidth = createMemo(() => (props.itemWidth ?? 300) + (props.itemOffset ?? 0));\n  const totalHeight = createMemo(() => (props.itemHeight ?? 300) + (props.itemOffset ?? 0));\n\n  const moveFocus = (delta: number, elm: ElementNode) => {\n    if (!props.items || props.items.length === 0) return false;\n    const newIndex = focusedIndex() + delta;\n\n    if (newIndex >= 0 && newIndex < props.items.length) {\n      setFocusedIndex(newIndex);\n    } else if (props.looping) {\n      const totalItems = props.items.length;\n      if (delta < 0) {\n        const lastRowStart = totalItems - (totalItems % columns()) || totalItems - columns();\n        const target = lastRowStart + (focusedIndex() % columns());\n        setFocusedIndex(target < totalItems ? target : target - columns());\n      } else {\n        setFocusedIndex(focusedIndex() % columns());\n      }\n    } else {\n      return false;\n    }\n    const focusedElm = elm.children[focusedIndex()] as ElementNode;\n    focusedElm.setFocus();\n    isFunction(props.onSelectedChanged) && props.onSelectedChanged.call(elm, focusedIndex(), elm, focusedElm);\n    return true;\n  };\n\n  const handleHorizontalFocus = (delta: number, elm: ElementNode) => {\n    if (!props.items || props.items.length === 0) return false;\n    const newIndex = focusedIndex() + delta;\n    const isWithinRow = Math.floor(newIndex / columns()) === Math.floor(focusedIndex() / columns());\n\n    if (newIndex >= 0 && newIndex < props.items.length && isWithinRow) {\n      setFocusedIndex(newIndex);\n    } else if (props.looping) {\n      const rowStart = Math.floor(focusedIndex() / columns()) * columns();\n      const rowEnd = Math.min(rowStart + columns() - 1, props.items.length - 1);\n      setFocusedIndex(delta > 0 ? (newIndex > rowEnd ? rowStart : newIndex) : newIndex < rowStart ? rowEnd : newIndex);\n    } else {\n      return false;\n    }\n    const focusedElm = elm.children[focusedIndex()] as ElementNode;\n    focusedElm.setFocus();\n    isFunction(props.onSelectedChanged) && props.onSelectedChanged.call(elm, focusedIndex(), elm, focusedElm);\n    return true;\n  };\n\n  function onFocus(this: ElementNode) {\n    handleHorizontalFocus(0, this);\n  }\n\n  const scrollY = createMemo(() =>\n    props.scroll === \"none\" ? props.y ?? 0 : -Math.floor(focusedIndex() / columns()) * totalHeight() + (props.y || 0)\n  );\n\n  return (\n    <View\n      transition={{ y: true }}\n      {...props}\n      onUp={(_e, elm) => moveFocus(-columns(), elm)}\n      onDown={(_e, elm) => moveFocus(columns(), elm)}\n      onLeft={(_e, elm) => handleHorizontalFocus(-1, elm)}\n      onRight={(_e, elm) => handleHorizontalFocus(1, elm)}\n      onFocus={onFocus}\n      strictBounds={false}\n      y={scrollY()}\n    >\n      <For each={props.items}>\n        {(item, index) => (\n          <Dynamic\n            {...item}\n            component={props.item}\n            width={props.itemWidth}\n            height={props.itemHeight}\n            x={(index() % columns()) * totalWidth()}\n            y={Math.floor(index() / columns()) * totalHeight()}\n          />\n        )}\n      </For>\n    </View>\n  );\n};\n\n","import { createEffect, on, createSignal, createMemo } from \"solid-js\";\nimport { ElementNode, activeElement, View, Text, NodeProps } from \"@lightningtv/solid\";\nimport { Grid } from \"@lightningtv/solid/primitives\";\nimport { setGlobalBackground } from \"../state\";\nimport ContentBlock from \"../components/ContentBlock\";\nimport { debounce } from \"@solid-primitives/scheduled\";\nimport { Poster } from \"../components\";\n\nconst TMDB = (props) => {\n  const [heroContent, setHeroContent] = createSignal({});\n  let contentBlock,\n    solidLogo,\n    firstRun = true;\n\n  const delayedBackgrounds = debounce(setGlobalBackground, 800);\n  const delayedHero = debounce(\n    (content: {}) => setHeroContent(content || {}),\n    600\n  );\n\n  createEffect(\n    on(\n      activeElement,\n      (elm) => {\n        if (!elm) return;\n\n        if (firstRun) {\n          elm.backdrop && setGlobalBackground(elm.backdrop);\n          elm.heroContent && setHeroContent(elm.heroContent);\n          firstRun = false;\n        } else {\n          elm.backdrop && delayedBackgrounds(elm.backdrop);\n          elm.heroContent && delayedHero(elm.heroContent);\n        }\n      },\n      { defer: true }\n    )\n  );\n\n  function onSelectedChanged(this: ElementNode, selectedIndex, column, row) {\n    const values =\n      selectedIndex === 0 ? { y: 300, alpha: 1 } : { y: 200, alpha: 0 };\n    contentBlock\n      .animate(values, { duration: 300, easing: \"ease-in-out\" })\n      .start();\n\n    const values2 =\n      selectedIndex === 0 ? { y: 80, alpha: 1 } : { y: 0, alpha: 0 };\n    solidLogo\n      .animate(values2, { duration: 300, easing: \"ease-in-out\" })\n      .start();\n  }\n\n  const items = createMemo(() => {\n    return props.data.rows.map((row) => row.items()).flat();\n  });\n\n  return (\n    <>\n      <View\n        ref={solidLogo}\n        width={300}\n        height={150}\n        x={162}\n        y={80}\n        zIndex={105}\n      >\n        <Text x={80} fontSize={28} color={0xf6f6f699}>\n          Built with\n        </Text>\n        <View y={32} src=\"./assets/solidWord.png\" width={280} height={52} />\n\n        <View x={0} y={110} src=\"./assets/tmdb.png\" width={80} height={41} />\n        <Text\n          x={90}\n          y={110}\n          contain=\"width\"\n          width={160}\n          fontSize={12}\n          color={0xf6f6f699}\n        >\n          This product uses the TMDB API but is not endorsed or certified by\n          TMDB.\n        </Text>\n      </View>\n\n      <ContentBlock\n        ref={contentBlock}\n        y={300}\n        x={162}\n        content={heroContent()}\n      />\n      <View x={165} y={540} clipping>\n        <Grid\n          x={12}\n          y={12}\n          autofocus={items()}\n          item={Poster}\n          itemWidth={200}\n          items={items()}\n          columns={6}\n          itemOffset={36}\n        />\n      </View>\n    </>\n  );\n};\n\nexport default TMDB;\n"],"names":["Grid","props","_createSignal","createSignal","_createSignal2","_slicedToArray","focusedIndex","setFocusedIndex","baseColumns","columns","createMemo","totalWidth","_props$itemWidth","_props$itemOffset","itemWidth","itemOffset","totalHeight","_props$itemHeight","_props$itemOffset2","itemHeight","moveFocus","delta","elm","items","length","newIndex","looping","totalItems","lastRowStart","target","focusedElm","children","setFocus","onSelectedChanged","call","handleHorizontalFocus","isWithinRow","Math","floor","rowStart","rowEnd","min","onFocus","scrollY","_props$y","scroll","y","_$createComponent","View","_$mergeProps","transition","onUp","_e","onDown","onLeft","onRight","strictBounds","For","each","item","index","Dynamic","component","width","height","x","TMDB","_createSignal3","_createSignal4","heroContent","setHeroContent","contentBlock","solidLogo","firstRun","delayedBackgrounds","debounce","setGlobalBackground","delayedHero","content","on","activeElement","backdrop","defer","data","rows","map","row","flat","ref","r$","_ref$","zIndex","Text","fontSize","color","src","contain","ContentBlock","_ref$2","clipping","autofocus","Poster"],"mappings":"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","x_google_ignoreList":[0]}