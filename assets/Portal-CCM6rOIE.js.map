{"version":3,"file":"Portal-CCM6rOIE.js","sources":["../../src/pages/Portal.tsx"],"sourcesContent":["import { createSignal, createSelector, For } from \"solid-js\";\nimport { ElementNode, View, Text, assertTruthy } from \"@lightningtv/solid\";\nimport { Column, Row } from \"@lightningtv/solid/primitives\";\nimport { useNavigate } from \"@solidjs/router\";\nimport styles from \"../styles\";\n\nconst Portal = () => {\n  const navigate = useNavigate();\n  const isFirst = createSelector(() => {\n    return 0;\n  });\n\n  function onEnter(this: ElementNode) {\n    let entity = this.children[this.selected || 0];\n    assertTruthy(entity && entity.id);\n    navigate(\"/\" + entity.id);\n  }\n\n  const flexDemos = [\n    {\n      title: \"Focus Basics\",\n      id: \"focusbasics\",\n      description: \"Quick guide on Focus\",\n    },\n    {\n      title: \"Key Handling\",\n      id: \"keyhandling\",\n      description: \"Understanding Key Handling\",\n    },\n    {\n      title: \"Loop Basics\",\n      id: \"loops\",\n      description: \"Understanding For, Index, Lazy and List\",\n    },\n    {\n      title: \"Infinite Items\",\n      id: \"infinite\",\n      description: \"Learn how to manage large list of items\",\n    },\n    {\n      title: \"Layout Basics\",\n      id: \"layout\",\n      description: \"Quick guide on Layout\",\n    },\n    {\n      title: \"Flex Row\",\n      id: \"flex\",\n      description: \"Flex Row Implementation\",\n    },\n    {\n      title: \"Flex Column\",\n      id: \"flexcolumn\",\n      description: \"Flex Column Implementation\",\n    },\n    {\n      title: \"Flex Grow\",\n      id: \"flexgrow\",\n      description: \"Flex Grow Examples\",\n    },\n    {\n      title: \"Flex Row Vertical Align\",\n      id: \"flexsize\",\n      description: \"Flex Row Vertical Align Implementation\",\n    },\n    {\n      title: \"Flex Column Vertical Align\",\n      id: \"flexcolumnsize\",\n      description: \"Flex Column Vertical Align Implementation\",\n    },\n    {\n      title: \"Flex Layout Tests\",\n      id: \"superflex\",\n      description: \"Complicated flex layouts\",\n    },\n  ];\n\n  const demos = [\n    {\n      title: \"Positioning\",\n      id: \"positioning\",\n      description: \"Positioning Elements\",\n    },\n    {\n      title: \"Gradients\",\n      id: \"gradients\",\n      description: \"Basic Gradients\",\n    },\n    {\n      title: \"Transitions\",\n      id: \"transitions\",\n      description: \"Comparing different Transitions\",\n    },\n    {\n      title: \"TMDB\",\n      id: \"tmdb\",\n      description: \"TMDB Example\",\n    },\n    {\n      title: \"Grid Primitive for Layout\",\n      id: \"tmdbgrid\",\n      description: \"Using Grid component\",\n    },\n    {\n      title: \"Firebolt Integration\",\n      id: \"firebolt\",\n      description: \"Firebolt API Integration\",\n    },\n    {\n      title: \"Components\",\n      id: \"components\",\n      description: \"Reusable Components\",\n    },\n    {\n      title: \"Focus Handling\",\n      id: \"focushandling\",\n      description: \"Dealing with Focus Handling\",\n    },\n    {\n      title: \"Grid\",\n      id: \"grid\",\n      description: \"Infinite Scroll Grid\",\n    },\n    {\n      title: \"Destroy\",\n      id: \"destroy\",\n      description: \"Using onDestroy to animate destruction\",\n    },\n    {\n      title: \"Login\",\n      id: \"login\",\n      description: \"Login example\",\n    },\n    {\n      title: \"Text\",\n      id: \"text\",\n      description: \"Text layout with flexbox\",\n    },\n    {\n      title: \"TextPoster\",\n      id: \"textposter\",\n      description: \"Text layout with flex and Poster\",\n    },\n    {\n      title: \"Create Elements\",\n      id: \"create\",\n      description: \"Testing Show + children + inserting text\",\n    },\n    {\n      title: \"Viewport\",\n      id: \"viewport\",\n      description: \"Events going in and out of viewport\",\n    },\n  ];\n\n  function DemoTile(props) {\n    const Container = {\n      width: 370,\n      height: 320,\n      borderRadius: 6,\n      scale: 1,\n      color: \"#182b44\",\n      transition: { color: true, scale: true },\n      $focus: {\n        scale: 1.1,\n        color: 0xffffffff,\n      },\n    };\n    const [hasFocus, setHasFocus] = createSignal(false);\n\n    return (\n      <View {...props} onFocusChanged={setHasFocus} style={Container}>\n        <View x={30}>\n          <Text\n            y={30}\n            fontSize={84}\n            color={hasFocus() ? 0x000000ff : 0xffffffff}\n          >\n            {props.index}\n          </Text>\n          <Text\n            y={140}\n            fontSize={42}\n            width={340}\n            height={42}\n            contain=\"both\"\n            color={hasFocus() ? 0x000000ff : 0xffffffff}\n          >\n            {props.title}\n          </Text>\n          <Text\n            y={200}\n            fontSize={28}\n            width={330}\n            contain=\"width\"\n            color={hasFocus() ? 0x000000ff : 0xffffffff}\n          >\n            {props.description}\n          </Text>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View colorTop={0x446b9eff} colorBottom={0x2c4f7cff}>\n      <View x={120}>\n        <View src=\"./assets/solidjs.png\" width={101} height={90} y={40} />\n        <Text fontSize={90} x={110} y={40}>\n          Examples\n        </Text>\n        <View y={140} height={1} width={1800} color={0xe8d7f9ff} />\n      </View>\n      <Column scroll=\"none\" y={200} x={170} gap={80} autofocus>\n        <Row\n          onEnter={onEnter}\n          gap={40}\n          height={320}\n          flexBoundary=\"contain\"\n          scroll=\"always\"\n        >\n          <For each={demos}>\n            {(demo, i) => <DemoTile index={i()} {...demo} />}\n          </For>\n        </Row>\n\n        <Row\n          onEnter={onEnter}\n          gap={40}\n          height={320}\n          flexBoundary=\"contain\"\n          scroll=\"always\"\n        >\n          <For each={flexDemos}>\n            {(demo, i) => <DemoTile index={i()} {...demo} />}\n          </For>\n        </Row>\n      </Column>\n    </View>\n  );\n};\n\nexport default Portal;\n"],"names":["Portal","navigate","useNavigate","createSelector","onEnter","entity","children","selected","id","flexDemos","title","description","demos","DemoTile","props","Container","width","height","borderRadius","scale","color","transition","$focus","hasFocus","setHasFocus","createSignal","_$createComponent","View","_$mergeProps","onFocusChanged","style","x","Text","y","fontSize","index","contain","colorTop","colorBottom","src","Column","scroll","gap","autofocus","Row","flexBoundary","For","each","demo","i"],"mappings":"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"}