{"version":3,"file":"Button-B3KhzDuX.js","sources":["../../node_modules/.pnpm/@lightningtv+solid-ui@0.23.0-rc1_@lightningtv+core@1.5.7_@lightningtv+solid@1.6.6_solid-js@1.8.20__solid-js@1.8.20/node_modules/@lightningtv/solid-ui/components/Button/Button.tsx"],"sourcesContent":["/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { type Component } from 'solid-js';\nimport { View, Text } from '@lightningtv/solid';\nimport styles from './Button.styles.js';\nimport type { ButtonContainerProps, ButtonProps } from './Button.types.js';\n\nconst Button: Component<ButtonProps> = props => {\n  return (\n    <ButtonContainer\n      {...props}\n      color={props.backgroundColor}\n      itemSpacing={props.contentSpacing}\n      alignItems=\"center\"\n      forwardStates\n    >\n      <Text\n        color={props.textColor}\n        contain={props.contain ?? 'width'}\n        textAlign={props.textAlign}\n        style={[\n          styles.Text.tones[props.tone ?? styles.tone], //\n          styles.Text.base\n        ]}\n      >\n        {props.children}\n      </Text>\n    </ButtonContainer>\n  );\n};\n\nconst ButtonContainer: Component<ButtonContainerProps> = props => {\n  return (\n    <View\n      {...props}\n      color={props.backgroundColor}\n      justifyContent={props.justify}\n      itemSpacing={props.contentSpacing}\n      // @ts-expect-error TODO type needs to be fixed in framework\n      style={[\n        props.style, //\n        styles.Container.tones?.[props.tone ?? styles.tone],\n        styles.Container.base\n      ]}\n      forwardStates\n    />\n  );\n};\n\nexport {\n  Button as default, //\n  ButtonContainer,\n  type ButtonProps\n};\n"],"names":["Button","props","_$createComponent","ButtonContainer","_$mergeProps","color","backgroundColor","itemSpacing","contentSpacing","alignItems","forwardStates","children","Text","textColor","contain","textAlign","style","styles","tones","tone","base","View","justifyContent","justify","Container"],"mappings":"oEAsBA,MAAMA,EAA0CC,GAC9CC,EACGC,EAAeC,EACVH,EAAK,CAAA,IACTI,OAAK,CAAA,OAAEJ,EAAMK,eAAe,EAAA,IAC5BC,aAAW,CAAA,OAAEN,EAAMO,cAAc,EACjCC,WAAU,SACVC,cAAa,GAAA,IAAAC,UAAA,CAAA,OAAAT,EAEZU,EAAI,CAAA,IACHP,OAAK,CAAA,OAAEJ,EAAMY,SAAS,EAAA,IACtBC,SAAO,OAAA,OAAEb,EAAAA,EAAMa,UAANb,KAAAA,EAAiB,OAAO,EAAA,IACjCc,WAAS,CAAA,OAAEd,EAAMc,SAAS,EAAA,IAC1BC,OAAK,OAAE,MAAA,CACLC,EAAOL,KAAKM,OAAMjB,EAAAA,EAAMkB,OAANlB,KAAAA,EAAcgB,EAAOE,IAAI,EAC3CF,EAAOL,KAAKQ,IAAAA,CACb,EAAA,IAAAT,UAAA,CAAA,OAEAV,EAAMU,QAAQ,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAMjBR,EAA4DF,GAChEC,EACGmB,EAAIjB,EACCH,EAAK,CAAA,IACTI,OAAK,CAAA,OAAEJ,EAAMK,eAAe,EAAA,IAC5BgB,gBAAc,CAAA,OAAErB,EAAMsB,OAAO,EAAA,IAC7BhB,aAAW,CAAA,OAAEN,EAAMO,cAAc,EAAA,IAEjCQ,OAAK,SAAE,MAAA,CACLf,EAAMe,OACNC,EAAAA,EAAOO,UAAUN,QAAjBD,YAAAA,GAAyBhB,EAAAA,EAAMkB,OAANlB,KAAAA,EAAcgB,EAAOE,MAC9CF,EAAOO,UAAUJ,IAAAA,CAClB,EACDV,cAAa,EAAA,CAAA,CAAA","x_google_ignoreList":[0]}