{"version":3,"file":"FlexGrow-BqkL0ezY.js","sources":["../../src/pages/FlexGrow.tsx"],"sourcesContent":["import {\n  ElementNode,\n  IntrinsicNodeStyleProps,\n  Text,\n  View,\n} from \"@lightningtv/solid\";\nimport { Column, Row } from \"@lightningtv/solid/primitives\";\nimport { createSignal, onMount } from \"solid-js\";\nimport styles from \"../styles\";\nimport { setGlobalBackground } from \"../state\";\n\nconst FlexGrow = () => {\n  const RowStyles = {\n    display: \"flex\",\n    justifyContent: \"flexStart\",\n    width: 1600,\n    height: 110,\n    color: \"#FFF\",\n  } satisfies IntrinsicNodeStyleProps;\n\n  const rowTitle = {\n    fontSize: 44,\n    marginTop: 25,\n    marginBottom: -20,\n    skipFocus: true,\n  };\n\n  const red = '#ff0000ff';\n  const darkorange = '#ff8c00ff';\n  const green = '#00ff00ff';\n\n  function Block(props) {\n    const styles = {\n      width: props.flexGrow ? undefined : 200, // Allow flexible width if flexGrow exists\n      height: 100,\n      y: 5,\n    };\n\n    return <View {...props} style={styles} />;\n  }\n\n  const [columnY, setColumnY] = createSignal(50);\n  function onFocus(this: ElementNode) {\n    this.children[this.selected || 0].setFocus();\n    setColumnY(150 + (this.y || 0) * -1);\n  }\n\n  onMount(() => {\n    setGlobalBackground(\"#333333\");\n  });\n\n  const gap = 50;\n\n  return (\n    <>\n      <Column\n        x={160}\n        y={columnY()}\n        gap={30}\n        height={850}\n        width={RowStyles.width}\n        style={styles.Column}\n      >\n        <Text style={rowTitle}>Flex Start RTL</Text>\n        <Row gap={gap} direction={'rtl'} style={RowStyles} onFocus={onFocus}>\n          <Block flexGrow={1} autofocus color={red} />\n          <Block flexGrow={2} color={darkorange} />\n          <Block color={green} />\n        </Row>\n\n        <Text style={rowTitle}>Flex End with Flex Grow</Text>\n        <Row gap={gap} style={RowStyles} onFocus={onFocus}>\n          <Block color={green} />\n          <Block flexGrow={1} color={red} />\n          <Block flexGrow={2} color={darkorange} />\n        </Row>\n\n        <Text style={rowTitle}>Space Between with Flex Grow</Text>\n        <Row gap={gap} justifyContent={\"spaceBetween\"} style={RowStyles} onFocus={onFocus}>\n          <Block flexGrow={1} color={red} />\n          <Block flexGrow={1} flexOrder={-1} color={darkorange} />\n          <Block flexGrow={2} color={green} />\n        </Row>\n      </Column>\n    </>\n  );\n};\n\nexport default FlexGrow;\n"],"names":["FlexGrow","RowStyles","display","justifyContent","width","height","color","rowTitle","fontSize","marginTop","marginBottom","skipFocus","red","darkorange","green","Block","props","styles","flexGrow","undefined","y","_$createComponent","View","_$mergeProps","style","columnY","setColumnY","createSignal","onFocus","children","selected","setFocus","onMount","setGlobalBackground","gap","Column","x","Text","Row","direction","autofocus","flexOrder"],"mappings":"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"}