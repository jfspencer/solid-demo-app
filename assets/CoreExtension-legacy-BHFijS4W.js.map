{"version":3,"file":"CoreExtension-legacy-BHFijS4W.js","sources":["../../../../../renderer/dist/src/utils.js","../../../../../renderer/dist/src/core/lib/utils.js","../../../../../renderer/dist/src/common/EventEmitter.js","../../../../../renderer/dist/src/core/renderers/webgl/internal/ShaderUtils.js","../../../../../renderer/dist/src/core/renderers/webgl/WebGlCoreShader.js","../../../../../renderer/dist/src/core/renderers/CoreShader.js","../../../../../renderer/dist/src/core/textures/Texture.js","../../../../../renderer/dist/src/core/text-rendering/font-face-types/TrFontFace.js","../../../../../renderer/dist/src/core/renderers/CoreContextTexture.js","../../../../../renderer/dist/src/core/renderers/CoreRenderer.js","../../../../../renderer/dist/src/core/renderers/webgl/WebGlCoreRenderOp.js","../../../../../renderer/dist/src/core/renderers/CoreRenderOp.js","../../../../../renderer/dist/src/core/renderers/webgl/internal/RendererUtils.js","../../../../../renderer/node_modules/.pnpm/memize@2.1.0/node_modules/memize/dist/index.js","../../../../../renderer/dist/src/core/utils.js","../../../../../renderer/dist/src/core/renderers/webgl/WebGlCoreCtxTexture.js","../../../../../renderer/dist/src/core/textures/ColorTexture.js","../../../../../renderer/dist/src/core/textures/SubTexture.js","../../../../../renderer/dist/src/core/renderers/webgl/WebGlCoreCtxSubTexture.js","../../../../../renderer/dist/src/core/renderers/webgl/internal/BufferCollection.js","../../../../../renderer/dist/src/core/lib/WebGlContextWrapper.js","../../../../../renderer/dist/src/core/renderers/webgl/internal/WebGlUtils.js","../../../../../renderer/dist/src/core/textures/RenderTexture.js","../../../../../renderer/dist/src/core/renderers/webgl/WebGlCoreCtxRenderTexture.js","../../../../../renderer/dist/src/core/renderers/webgl/WebGlCoreRenderer.js","../../../../../renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/SpecialCodepoints.js","../../../../../renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/SdfFontShaper.js","../../../../../renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/FontShaper.js","../../../../../renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/SdfTrFontFace.js","../../../../../renderer/dist/src/core/CoreExtension.js"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function createWebGLContext(canvas, contextSpy) {\n    const config = {\n        alpha: true,\n        antialias: false,\n        depth: false,\n        stencil: true,\n        desynchronized: false,\n        // Disabled because it prevents Visual Regression Tests from working\n        // failIfMajorPerformanceCaveat: true,\n        powerPreference: 'high-performance',\n        premultipliedAlpha: true,\n        preserveDrawingBuffer: false,\n    };\n    const gl = \n    // TODO: Remove this assertion once this issue is fixed in TypeScript\n    // https://github.com/microsoft/TypeScript/issues/53614\n    (canvas.getContext('webgl', config) ||\n        canvas.getContext('experimental-webgl', config));\n    if (!gl) {\n        throw new Error('Unable to create WebGL context');\n    }\n    if (contextSpy) {\n        // Proxy the GL context to log all GL calls\n        return new Proxy(gl, {\n            get(target, prop) {\n                const value = target[prop];\n                if (typeof value === 'function') {\n                    contextSpy.increment(String(prop));\n                    return value.bind(target);\n                }\n                return value;\n            },\n        });\n    }\n    return gl;\n}\n/**\n * Asserts a condition is truthy, otherwise throws an error\n *\n * @remarks\n * Useful at the top of functions to ensure certain conditions, arguments and\n * properties are set/met before continuing. When using this function,\n * TypeScript will narrow away falsy types from the condition.\n *\n * @param condition\n * @param message\n * @returns\n */\nexport function assertTruthy(condition, message) {\n    if (isProductionEnvironment())\n        return;\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n/**\n * Merges two colors based on a given progress value.\n *\n * This function takes two colors (c1 and c2) represented as 32-bit integers\n * in RGBA format and blends them based on the provided progress value (p).\n * The result is a new color that is a weighted combination of the input colors,\n * where the weight is determined by the progress value.\n *\n * @param {number} c1 - The first color in RGBA format (32-bit integer).\n * @param {number} c2 - The second color in RGBA format (32-bit integer).\n * @param {number} p - The progress value between 0 and 1.\n * @returns {number} The merged color as a 32-bit integer in RGBA format.\n */\nexport function mergeColorProgress(rgba1, rgba2, p) {\n    const r1 = Math.trunc(rgba1 >>> 24);\n    const g1 = Math.trunc((rgba1 >>> 16) & 0xff);\n    const b1 = Math.trunc((rgba1 >>> 8) & 0xff);\n    const a1 = Math.trunc(rgba1 & 0xff);\n    const r2 = Math.trunc(rgba2 >>> 24);\n    const g2 = Math.trunc((rgba2 >>> 16) & 0xff);\n    const b2 = Math.trunc((rgba2 >>> 8) & 0xff);\n    const a2 = Math.trunc(rgba2 & 0xff);\n    const r = Math.round(r2 * p + r1 * (1 - p));\n    const g = Math.round(g2 * p + g1 * (1 - p));\n    const b = Math.round(b2 * p + b1 * (1 - p));\n    const a = Math.round(a2 * p + a1 * (1 - p));\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter.\n *\n * @internalRemarks\n * This method does NOT premultiply the alpha into the color channels. If that\n * is required (for internal use only) use {@link mergeColorAlphaPremultiplied}\n * instead.\n *\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @returns\n */\nexport function mergeColorAlpha(rgba, alpha) {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = Math.trunc((rgba & 0xff) * alpha);\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter. Before returning, the\n * final alpha value is multiplied into the color channels.\n *\n * @remarks\n * If `flipEndianess` is set to true, the function will returned an ABGR encoded number\n * which is useful when the color value needs to be passed into a shader attribute.\n *\n * NOTE: This method returns a PREMULTIPLIED alpha color which is generally only useful\n * in the context of the internal rendering process. Use {@link mergeColorAlpha} if you\n * need to blend an alpha value into a color in the context of the Renderer's\n * main API.\n *\n * @internalRemarks\n * Do not expose this method in the main API because Renderer users should instead use\n * {@link mergeColorAlpha} to manipulate the alpha value of a color.\n *\n * @internal\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @param flipEndianess Flip the endianess. RGBA becomes encoded as ABGR (for inserting colors into shader attributes)\n * @returns\n */\nexport function mergeColorAlphaPremultiplied(rgba, alpha, flipEndianess = false) {\n    const newAlpha = ((rgba & 0xff) / 255) * alpha;\n    const r = Math.trunc((rgba >>> 24) * newAlpha);\n    const g = Math.trunc(((rgba >>> 16) & 0xff) * newAlpha);\n    const b = Math.trunc(((rgba >>> 8) & 0xff) * newAlpha);\n    const a = Math.trunc(newAlpha * 255);\n    if (flipEndianess) {\n        return ((a << 24) | (b << 16) | (g << 8) | r) >>> 0;\n    }\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Returns true if the given object has the given \"own\" property.\n *\n * @param obj\n * @param prop\n * @returns\n */\nexport function hasOwn(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n/**\n * Converts degrees to radians\n *\n * @param degrees\n * @returns\n */\nexport function deg2Rad(degrees) {\n    return (degrees * Math.PI) / 180;\n}\n/**\n * Returns image aspect ratio\n *\n * @param width\n * @param height\n * @returns\n */\nexport function getImageAspectRatio(width, height) {\n    return width / height;\n}\n/**\n * Checks import.meta if env is production\n *\n * @returns\n */\nexport function isProductionEnvironment() {\n    return import.meta.env && import.meta.env.PROD;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const getNormalizedRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r / 255, g / 255, b / 255, a / 255];\n};\nexport const getRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r, g, b, a];\n};\nexport const norm = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    const rgbaArr = [r / 255, g / 255, b / 255, a / 255];\n    rgbaArr[0] = Math.max(0, Math.min(255, rgbaArr[0]));\n    rgbaArr[1] = Math.max(0, Math.min(255, rgbaArr[1]));\n    rgbaArr[2] = Math.max(0, Math.min(255, rgbaArr[2]));\n    rgbaArr[3] = Math.max(0, Math.min(255, rgbaArr[3]));\n    let v = ((rgbaArr[3] | 0) << 24) +\n        ((rgbaArr[0] | 0) << 16) +\n        ((rgbaArr[1] | 0) << 8) +\n        (rgbaArr[2] | 0);\n    if (v < 0) {\n        v = 0xffffffff + v + 1;\n    }\n    return v;\n};\nexport function getNormalizedAlphaComponent(rgba) {\n    return (rgba & 0xff) / 255.0;\n}\n/**\n * Get a CSS color string from a RGBA color\n *\n * @param color\n * @returns\n */\nexport function getRgbaString(color) {\n    const r = Math.floor(color[0] * 255.0);\n    const g = Math.floor(color[1] * 255.0);\n    const b = Math.floor(color[2] * 255.0);\n    const a = Math.floor(color[3] * 255.0);\n    return `rgba(${r},${g},${b},${a.toFixed(4)})`;\n}\nexport function createBound(x1, y1, x2, y2, out) {\n    if (out) {\n        out.x1 = x1;\n        out.y1 = y1;\n        out.x2 = x2;\n        out.y2 = y2;\n        return out;\n    }\n    return {\n        x1,\n        y1,\n        x2,\n        y2,\n    };\n}\nexport function intersectBound(a, b, out) {\n    const intersection = createBound(Math.max(a.x1, b.x1), Math.max(a.y1, b.y1), Math.min(a.x2, b.x2), Math.min(a.y2, b.y2), out);\n    if (intersection.x1 < intersection.x2 && intersection.y1 < intersection.y2) {\n        return intersection;\n    }\n    return createBound(0, 0, 0, 0, intersection);\n}\nexport function boundsOverlap(a, b) {\n    return a.x1 < b.x2 && a.x2 > b.x1 && a.y1 < b.y2 && a.y2 > b.y1;\n}\nexport function convertBoundToRect(bound, out) {\n    if (out) {\n        out.x = bound.x1;\n        out.y = bound.y1;\n        out.width = bound.x2 - bound.x1;\n        out.height = bound.y2 - bound.y1;\n        return out;\n    }\n    return {\n        x: bound.x1,\n        y: bound.y1,\n        width: bound.x2 - bound.x1,\n        height: bound.y2 - bound.y1,\n    };\n}\nexport function intersectRect(a, b, out) {\n    const x = Math.max(a.x, b.x);\n    const y = Math.max(a.y, b.y);\n    const width = Math.min(a.x + a.width, b.x + b.width) - x;\n    const height = Math.min(a.y + a.height, b.y + b.height) - y;\n    if (width > 0 && height > 0) {\n        if (out) {\n            out.x = x;\n            out.y = y;\n            out.width = width;\n            out.height = height;\n            return out;\n        }\n        return {\n            x,\n            y,\n            width,\n            height,\n        };\n    }\n    if (out) {\n        out.x = 0;\n        out.y = 0;\n        out.width = 0;\n        out.height = 0;\n        return out;\n    }\n    return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n    };\n}\nexport function copyRect(a, out) {\n    if (out) {\n        out.x = a.x;\n        out.y = a.y;\n        out.width = a.width;\n        out.height = a.height;\n        return out;\n    }\n    return {\n        x: a.x,\n        y: a.y,\n        width: a.width,\n        height: a.height,\n    };\n}\nexport function compareRect(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a === null || b === null) {\n        return false;\n    }\n    return (a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height);\n}\nexport function boundInsideBound(bound1, bound2) {\n    return (bound1.x1 <= bound2.x2 &&\n        bound1.y1 <= bound2.y2 &&\n        bound1.x2 >= bound2.x1 &&\n        bound1.y2 >= bound2.y1);\n}\nexport function isBoundPositive(bound) {\n    return bound.x1 < bound.x2 && bound.y1 < bound.y2;\n}\nexport function isRectPositive(rect) {\n    return rect.width > 0 && rect.height > 0;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * EventEmitter base class\n */\nexport class EventEmitter {\n    eventListeners = {};\n    on(event, listener) {\n        let listeners = this.eventListeners[event];\n        if (!listeners) {\n            listeners = [];\n        }\n        listeners.push(listener);\n        this.eventListeners[event] = listeners;\n    }\n    off(event, listener) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        if (!listener) {\n            delete this.eventListeners[event];\n            return;\n        }\n        const index = listeners.indexOf(listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n    once(event, listener) {\n        const onceListener = (target, data) => {\n            this.off(event, onceListener);\n            listener(target, data);\n        };\n        this.on(event, onceListener);\n    }\n    emit(event, data) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        [...listeners].forEach((listener) => {\n            listener(this, data);\n        });\n    }\n    removeAllListeners() {\n        this.eventListeners = {};\n    }\n}\n//# sourceMappingURL=EventEmitter.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//#endregion Types\nexport function createShader(glw, type, source) {\n    const shader = glw.createShader(type);\n    if (!shader) {\n        throw new Error();\n    }\n    glw.shaderSource(shader, source);\n    glw.compileShader(shader);\n    const success = glw.getShaderParameter(shader, glw.COMPILE_STATUS);\n    if (success) {\n        return shader;\n    }\n    console.log(glw.getShaderInfoLog(shader));\n    glw.deleteShader(shader);\n}\nexport function createProgram(glw, vertexShader, fragmentShader) {\n    const program = glw.createProgram();\n    if (!program) {\n        throw new Error();\n    }\n    glw.attachShader(program, vertexShader);\n    glw.attachShader(program, fragmentShader);\n    glw.linkProgram(program);\n    const success = glw.getProgramParameter(program, glw.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n    console.log(glw.getProgramInfoLog(program));\n    glw.deleteProgram(program);\n    return undefined;\n}\n//# sourceMappingURL=ShaderUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, hasOwn } from '../../../utils.js';\nimport { CoreShader } from '../CoreShader.js';\nimport { createProgram, createShader, } from './internal/ShaderUtils.js';\nimport { isWebGl2 } from './internal/WebGlUtils.js';\nexport class WebGlCoreShader extends CoreShader {\n    boundBufferCollection = null;\n    buffersBound = false;\n    program;\n    /**\n     * Vertex Array Object\n     *\n     * @remarks\n     * Used by WebGL2 Only\n     */\n    vao;\n    renderer;\n    glw;\n    attributeBuffers;\n    attributeLocations;\n    attributeNames;\n    uniformLocations;\n    uniformTypes;\n    supportsIndexedTextures;\n    constructor(options) {\n        super();\n        const renderer = (this.renderer = options.renderer);\n        const glw = (this.glw = this.renderer.glw);\n        this.supportsIndexedTextures = options.supportsIndexedTextures || false;\n        // Check that extensions are supported\n        const webGl2 = glw.isWebGl2();\n        const requiredExtensions = (webGl2 && options.webgl2Extensions) ||\n            (!webGl2 && options.webgl1Extensions) ||\n            [];\n        const glVersion = webGl2 ? '2.0' : '1.0';\n        requiredExtensions.forEach((extensionName) => {\n            if (!glw.getExtension(extensionName)) {\n                throw new Error(`Shader \"${this.constructor.name}\" requires extension \"${extensionName}\" for WebGL ${glVersion} but wasn't found`);\n            }\n        });\n        // Gather shader sources\n        // - If WebGL 2 and special WebGL 2 sources are provided, we copy those sources and delete\n        // the extra copy of them to save memory.\n        // TODO: This could be further made optimal by just caching the compiled shaders and completely deleting\n        // the source code\n        const shaderSources = options.shaderSources ||\n            this.constructor.shaderSources;\n        if (!shaderSources) {\n            throw new Error(`Shader \"${this.constructor.name}\" is missing shaderSources.`);\n        }\n        else if (webGl2 && shaderSources?.webGl2) {\n            shaderSources.fragment = shaderSources.webGl2.fragment;\n            shaderSources.vertex = shaderSources.webGl2.vertex;\n            delete shaderSources.webGl2;\n        }\n        const textureUnits = renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        const vertexSource = shaderSources.vertex instanceof Function\n            ? shaderSources.vertex(textureUnits)\n            : shaderSources.vertex;\n        const fragmentSource = shaderSources.fragment instanceof Function\n            ? shaderSources.fragment(textureUnits)\n            : shaderSources.fragment;\n        const vertexShader = createShader(glw, glw.VERTEX_SHADER, vertexSource);\n        const fragmentShader = createShader(glw, glw.FRAGMENT_SHADER, fragmentSource);\n        if (!vertexShader || !fragmentShader) {\n            throw new Error();\n        }\n        const program = createProgram(glw, vertexShader, fragmentShader);\n        if (!program) {\n            throw new Error();\n        }\n        this.program = program;\n        if (webGl2) {\n            const vao = glw.createVertexArray();\n            if (!vao) {\n                throw new Error();\n            }\n            this.vao = vao;\n            glw.bindVertexArray(this.vao);\n        }\n        this.attributeLocations = {};\n        this.attributeBuffers = {};\n        this.attributeNames = [];\n        [...options.attributes].forEach((attributeName) => {\n            const location = glw.getAttribLocation(this.program, attributeName);\n            if (location < 0) {\n                throw new Error(`${this.constructor.name}: Vertex shader must have an attribute \"${attributeName}\"!`);\n            }\n            const buffer = glw.createBuffer();\n            if (!buffer) {\n                throw new Error(`${this.constructor.name}: Could not create buffer for attribute \"${attributeName}\"`);\n            }\n            this.attributeLocations[attributeName] = location;\n            this.attributeBuffers[attributeName] = buffer;\n            this.attributeNames.push(attributeName);\n        });\n        this.uniformLocations = {};\n        this.uniformTypes = {};\n        options.uniforms.forEach((uniform) => {\n            const location = glw.getUniformLocation(this.program, uniform.name);\n            this.uniformTypes[uniform.name] = uniform.uniform;\n            if (!location) {\n                console.warn(`Shader \"${this.constructor.name}\" could not get uniform location for \"${uniform.name}\"`);\n                return;\n            }\n            this.uniformLocations[uniform.name] = location;\n        });\n    }\n    bindBufferAttribute(location, buffer, attribute) {\n        const { glw } = this;\n        glw.enableVertexAttribArray(location);\n        glw.vertexAttribPointer(buffer, location, attribute.size, attribute.type, attribute.normalized, attribute.stride, attribute.offset);\n    }\n    disableAttribute(location) {\n        this.glw.disableVertexAttribArray(location);\n    }\n    disableAttributes() {\n        for (const loc in this.attributeLocations) {\n            this.disableAttribute(this.attributeLocations[loc]);\n        }\n        this.boundBufferCollection = null;\n    }\n    /**\n     * Given two sets of Shader props destined for this Shader, determine if they can be batched together\n     * to reduce the number of draw calls.\n     *\n     * @remarks\n     * This is used by the {@link WebGlCoreRenderer} to determine if it can batch multiple consecutive draw\n     * calls into a single draw call.\n     *\n     * By default, this returns false (meaning no batching is allowed), but can be\n     * overridden by child classes to provide more efficient batching.\n     *\n     * @param propsA\n     * @param propsB\n     * @returns\n     */\n    canBatchShaderProps(propsA, propsB) {\n        return false;\n    }\n    bindRenderOp(renderOp, props) {\n        this.bindBufferCollection(renderOp.buffers);\n        if (renderOp.textures.length > 0) {\n            this.bindTextures(renderOp.textures);\n        }\n        const { glw, parentHasRenderTexture, renderToTexture } = renderOp;\n        // Skip if the parent and current operation both have render textures\n        if (renderToTexture && parentHasRenderTexture) {\n            return;\n        }\n        // Bind render texture framebuffer dimensions as resolution\n        // if the parent has a render texture\n        if (parentHasRenderTexture) {\n            const { width, height } = renderOp.framebufferDimensions || {};\n            // Force pixel ratio to 1.0 for render textures since they are always 1:1\n            // the final render texture will be rendered to the screen with the correct pixel ratio\n            this.setUniform('u_pixelRatio', 1.0);\n            // Set resolution to the framebuffer dimensions\n            this.setUniform('u_resolution', new Float32Array([width ?? 0, height ?? 0]));\n        }\n        else {\n            this.setUniform('u_pixelRatio', renderOp.options.pixelRatio);\n            this.setUniform('u_resolution', new Float32Array([glw.canvas.width, glw.canvas.height]));\n        }\n        if (props) {\n            // Bind optional automatic uniforms\n            // These are only bound if their keys are present in the props.\n            if (hasOwn(props, '$dimensions')) {\n                let dimensions = props.$dimensions;\n                if (!dimensions) {\n                    dimensions = renderOp.dimensions;\n                }\n                this.setUniform('u_dimensions', [dimensions.width, dimensions.height]);\n            }\n            if (hasOwn(props, '$alpha')) {\n                let alpha = props.$alpha;\n                if (!alpha) {\n                    alpha = renderOp.alpha;\n                }\n                this.setUniform('u_alpha', alpha);\n            }\n            this.bindProps(props);\n        }\n    }\n    setUniform(name, ...value) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-unsafe-argument\n        this.glw.setUniform(this.uniformTypes[name], this.uniformLocations[name], ...value);\n    }\n    bindBufferCollection(buffer) {\n        if (this.boundBufferCollection === buffer) {\n            return;\n        }\n        for (const attributeName in this.attributeLocations) {\n            const resolvedBuffer = buffer.getBuffer(attributeName);\n            const resolvedInfo = buffer.getAttributeInfo(attributeName);\n            assertTruthy(resolvedBuffer, `Buffer for \"${attributeName}\" not found`);\n            assertTruthy(resolvedInfo);\n            this.bindBufferAttribute(this.attributeLocations[attributeName], resolvedBuffer, resolvedInfo);\n        }\n        this.boundBufferCollection = buffer;\n    }\n    bindProps(props) {\n        // Implement in child class\n    }\n    bindTextures(textures) {\n        // no defaults\n    }\n    attach() {\n        this.glw.useProgram(this.program);\n        this.glw.useProgram(this.program);\n        if (this.glw.isWebGl2() && this.vao) {\n            this.glw.bindVertexArray(this.vao);\n        }\n    }\n    detach() {\n        this.disableAttributes();\n    }\n    static shaderSources;\n}\n//# sourceMappingURL=WebGlCoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreShader {\n    // abstract draw(): void;\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n}\n//# sourceMappingURL=CoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../common/EventEmitter.js';\n/**\n * Represents a source of texture data for a CoreContextTexture.\n *\n * @remarks\n * Texture sources are used to populate a CoreContextTexture when that texture\n * is loaded. Texture data retrieved by the CoreContextTexture by the\n * `getTextureData` method. It's the responsibility of the concerete `Texture`\n * subclass to implement this method appropriately.\n */\nexport class Texture extends EventEmitter {\n    txManager;\n    /**\n     * The dimensions of the texture\n     *\n     * @remarks\n     * Until the texture data is loaded for the first time the value will be\n     * `null`.\n     */\n    dimensions = null;\n    error = null;\n    state = 'freed';\n    renderableOwners = new Set();\n    constructor(txManager) {\n        super();\n        this.txManager = txManager;\n    }\n    /**\n     * Add/remove an owner to/from the Texture based on its renderability.\n     *\n     * @remarks\n     * Any object can own a texture, be it a CoreNode or even the state object\n     * from a Text Renderer.\n     *\n     * When the reference to the texture that an owner object holds is replaced\n     * or cleared it must call this with `renderable=false` to release the owner\n     * association.\n     *\n     * @param owner\n     * @param renderable\n     */\n    setRenderableOwner(owner, renderable) {\n        if (renderable) {\n            this.renderableOwners.add(owner);\n        }\n        else {\n            this.renderableOwners.delete(owner);\n        }\n    }\n    /**\n     * Returns true if the texture is assigned to any Nodes that are renderable.\n     */\n    get renderable() {\n        return this.renderableOwners.size > 0;\n    }\n    /**\n     * Set the state of the texture\n     *\n     * @remark\n     * Intended for internal-use only but declared public so that it can be set\n     * by it's associated {@link CoreContextTexture}\n     *\n     * @param state\n     * @param args\n     */\n    setState(state, ...args) {\n        if (this.state !== state) {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.state = state;\n            if (state === 'loaded') {\n                const loadedArgs = args;\n                this.dimensions = loadedArgs[0];\n            }\n            else if (state === 'failed') {\n                const failedArgs = args;\n                this.error = failedArgs[0];\n            }\n            this.emit(state, ...args);\n        }\n    }\n    /**\n     * Make a cache key for this texture.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide an\n     * appropriate cache key for the texture type including the texture's\n     * properties that uniquely identify a copy of the texture. If the texture\n     * type does not support caching, then this method should return `false`.\n     *\n     * @param props\n     * @returns\n     * A cache key for this texture or `false` if the texture type does not\n     * support caching.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    /**\n     * Resolve the default values for the texture's properties.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide\n     * default values for the texture's optional properties.\n     *\n     * @param props\n     * @returns\n     * The default values for the texture's properties.\n     */\n    static resolveDefaults(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    props) {\n        return {};\n    }\n}\n//# sourceMappingURL=Texture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../../common/EventEmitter.js';\nexport class TrFontFace extends EventEmitter {\n    fontFamily;\n    descriptors;\n    loaded = false;\n    constructor(fontFamily, descriptors) {\n        super();\n        this.fontFamily = fontFamily;\n        this.descriptors = {\n            style: 'normal',\n            weight: 'normal',\n            stretch: 'normal',\n            ...descriptors,\n        };\n    }\n    /**\n     * Convert a TrFontFaceDescriptors to a FontFaceDescriptors which differ slightly\n     *\n     * @param descriptors\n     * @returns\n     */\n    static convertToCssFontFaceDescriptors(descriptors) {\n        return {\n            style: descriptors.style,\n            weight: typeof descriptors.weight === 'number'\n                ? `${descriptors.weight}`\n                : descriptors.weight,\n            stretch: descriptors.stretch,\n            unicodeRange: descriptors.unicodeRange,\n            variant: descriptors.variant,\n            featureSettings: descriptors.featureSettings,\n            display: descriptors.display,\n        };\n    }\n}\n//# sourceMappingURL=TrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreContextTexture {\n    memManager;\n    textureSource;\n    constructor(memManager, textureSource) {\n        this.memManager = memManager;\n        this.textureSource = textureSource;\n    }\n}\n//# sourceMappingURL=CoreContextTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreContextTexture } from './CoreContextTexture.js';\nexport class CoreRenderer {\n    stage;\n    constructor(stage) {\n        this.stage = stage;\n    }\n}\n//# sourceMappingURL=CoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreRenderOp } from '../CoreRenderOp.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nconst MAX_TEXTURES = 8; // TODO: get from gl\n/**\n * Can render multiple quads with multiple textures (up to vertex shader texture limit)\n *\n */\nexport class WebGlCoreRenderOp extends CoreRenderOp {\n    glw;\n    options;\n    buffers;\n    shader;\n    shaderProps;\n    alpha;\n    clippingRect;\n    dimensions;\n    bufferIdx;\n    zIndex;\n    renderToTexture;\n    parentHasRenderTexture;\n    framebufferDimensions;\n    length = 0;\n    numQuads = 0;\n    textures = [];\n    maxTextures;\n    constructor(glw, options, buffers, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, zIndex, renderToTexture, parentHasRenderTexture, framebufferDimensions) {\n        super();\n        this.glw = glw;\n        this.options = options;\n        this.buffers = buffers;\n        this.shader = shader;\n        this.shaderProps = shaderProps;\n        this.alpha = alpha;\n        this.clippingRect = clippingRect;\n        this.dimensions = dimensions;\n        this.bufferIdx = bufferIdx;\n        this.zIndex = zIndex;\n        this.renderToTexture = renderToTexture;\n        this.parentHasRenderTexture = parentHasRenderTexture;\n        this.framebufferDimensions = framebufferDimensions;\n        this.maxTextures = shader.supportsIndexedTextures\n            ? glw.getParameter(glw.MAX_VERTEX_TEXTURE_IMAGE_UNITS)\n            : 1;\n    }\n    addTexture(texture) {\n        const { textures, maxTextures } = this;\n        const existingIdx = textures.findIndex((t) => t === texture);\n        if (existingIdx !== -1) {\n            return existingIdx;\n        }\n        const newIdx = textures.length;\n        if (newIdx >= maxTextures) {\n            return 0xffffffff;\n        }\n        this.textures.push(texture);\n        return newIdx;\n    }\n    draw() {\n        const { glw, shader, shaderProps, options } = this;\n        const { shManager } = options;\n        shManager.useShader(shader);\n        shader.bindRenderOp(this, shaderProps);\n        // TODO: Reduce calculations required\n        const quadIdx = (this.bufferIdx / 24) * 6 * 2;\n        // Clipping\n        if (this.clippingRect.valid) {\n            const { x, y, width, height } = this.clippingRect;\n            const pixelRatio = options.pixelRatio;\n            const canvasHeight = options.canvas.height;\n            const clipX = Math.round(x * pixelRatio);\n            const clipWidth = Math.round(width * pixelRatio);\n            const clipHeight = Math.round(height * pixelRatio);\n            const clipY = Math.round(canvasHeight - clipHeight - y * pixelRatio);\n            glw.setScissorTest(true);\n            glw.scissor(clipX, clipY, clipWidth, clipHeight);\n        }\n        else {\n            glw.setScissorTest(false);\n        }\n        glw.drawElements(glw.TRIANGLES, 6 * this.numQuads, glw.UNSIGNED_SHORT, quadIdx);\n    }\n}\n//# sourceMappingURL=WebGlCoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreRenderOp {\n}\n//# sourceMappingURL=CoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Get device specific webgl parameters\n * @param glw\n */\nexport function getWebGlParameters(glw) {\n    const params = {\n        MAX_RENDERBUFFER_SIZE: 0,\n        MAX_TEXTURE_SIZE: 0,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n        MAX_VIEWPORT_DIMS: 0,\n        MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0,\n        MAX_VERTEX_ATTRIBS: 0,\n        MAX_VARYING_VECTORS: 0,\n        MAX_VERTEX_UNIFORM_VECTORS: 0,\n        MAX_FRAGMENT_UNIFORM_VECTORS: 0,\n    };\n    // Map over all parameters and get them\n    const keys = Object.keys(params);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        params[key] = glw.getParameter(glw[key]);\n    });\n    return params;\n}\n/**\n * Get device webgl extensions\n * @param glw\n */\nexport function getWebGlExtensions(glw) {\n    const extensions = {\n        ANGLE_instanced_arrays: null,\n        WEBGL_compressed_texture_s3tc: null,\n        WEBGL_compressed_texture_astc: null,\n        WEBGL_compressed_texture_etc: null,\n        WEBGL_compressed_texture_etc1: null,\n        WEBGL_compressed_texture_pvrtc: null,\n        WEBKIT_WEBGL_compressed_texture_pvrtc: null,\n        WEBGL_compressed_texture_s3tc_srgb: null,\n        OES_vertex_array_object: null,\n    };\n    // Map over all extensions and get them\n    const keys = Object.keys(extensions);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        extensions[key] = glw.getExtension(key);\n    });\n    return extensions;\n}\n/**\n * Allocate big memory chunk that we\n * can re-use to draw quads\n *\n * @param glw\n * @param size\n */\nexport function createIndexBuffer(glw, size) {\n    const maxQuads = ~~(size / 80);\n    const indices = new Uint16Array(maxQuads * 6);\n    for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n        indices[i] = j;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 2;\n        indices[i + 4] = j + 1;\n        indices[i + 5] = j + 3;\n    }\n    const buffer = glw.createBuffer();\n    glw.elementArrayBufferData(buffer, indices, glw.STATIC_DRAW);\n}\n/**\n * Checks if an object is of type HTMLImageElement.\n * This is used because we cant check for HTMLImageElement directly when the\n * renderer is running in a seperate web worker context.\n *\n * @param obj\n * @returns\n */\nexport function isHTMLImageElement(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        obj.constructor &&\n        obj.constructor.name === 'HTMLImageElement');\n}\n//# sourceMappingURL=RendererUtils.js.map","/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {(...args: any[]) => any} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {((...args: Parameters<F>) => ReturnType<F>) & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize(fn, options) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized(/* ...args */) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs,\n\t\t\ti;\n\n\t\tsearchCache: while (node) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif (node.args.length !== arguments.length) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (node.args[i] !== arguments[i]) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== head) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif (node === tail) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ (head).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply(null, args),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (head) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif (size === /** @type {MemizeOptions} */ (options).maxSize) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ (tail).prev;\n\t\t\t/** @type {MemizeCacheNode} */ (tail).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function () {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nexport { memize as default };\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Core Utility Functions\n *\n * @module\n */\nimport memo from 'memize';\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport const RANDOM = Math.random;\nexport const ANGLE_ORDER = 'zyx';\nconst degree = Math.PI / 180;\nexport const setMatrixArrayType = (type) => {\n    ARRAY_TYPE = type;\n};\nexport const toRadian = (a) => {\n    return a * degree;\n};\nexport const equals = (a, b) => {\n    return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n};\nexport const rand = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\nexport const isPowerOfTwo = (value) => {\n    return value && !(value & (value - 1));\n};\nconst getTimingBezier = (a, b, c, d) => {\n    const xc = 3.0 * a;\n    const xb = 3.0 * (c - a) - xc;\n    const xa = 1.0 - xc - xb;\n    const yc = 3.0 * b;\n    const yb = 3.0 * (d - b) - yc;\n    const ya = 1.0 - yc - yb;\n    return function (time) {\n        if (time >= 1.0) {\n            return 1;\n        }\n        if (time <= 0) {\n            return 0;\n        }\n        let t = 0.5, cbx, cbxd, dx;\n        for (let it = 0; it < 20; it++) {\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                return t * (t * (t * ya + yb) + yc);\n            }\n            // Cubic bezier derivative.\n            cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n            t += dx / cbxd;\n        }\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc);\n            }\n            if (dx < 0) {\n                maxT = t;\n            }\n            else {\n                minT = t;\n            }\n        }\n    };\n};\nexport const getTimingFunction = memo((str) => {\n    switch (str) {\n        case 'linear':\n            return function (time) {\n                return time;\n            };\n        case 'ease':\n            return getTimingBezier(0.25, 0.1, 0.25, 1.0);\n        case 'ease-in':\n            return getTimingBezier(0.42, 0, 1.0, 1.0);\n        case 'ease-out':\n            return getTimingBezier(0, 0, 0.58, 1.0);\n        case 'ease-in-out':\n            return getTimingBezier(0.42, 0, 0.58, 1.0);\n        case 'ease-in-sine':\n            return getTimingBezier(0.12, 0, 0.39, 0);\n        case 'ease-out-sine':\n            return getTimingBezier(0.12, 0, 0.39, 0);\n        case 'ease-in-out-sine':\n            return getTimingBezier(0.37, 0, 0.63, 1);\n        case 'ease-in-cubic':\n            return getTimingBezier(0.32, 0, 0.67, 0);\n        case 'ease-out-cubic':\n            return getTimingBezier(0.33, 1, 0.68, 1);\n        case 'ease-in-out-cubic':\n            return getTimingBezier(0.65, 0, 0.35, 1);\n        case 'ease-in-circ':\n            return getTimingBezier(0.55, 0, 1, 0.45);\n        case 'ease-out-circ':\n            return getTimingBezier(0, 0.55, 0.45, 1);\n        case 'ease-in-out-circ':\n            return getTimingBezier(0.85, 0, 0.15, 1);\n        case 'ease-in-back':\n            return getTimingBezier(0.36, 0, 0.66, -0.56);\n        case 'ease-out-back':\n            return getTimingBezier(0.34, 1.56, 0.64, 1);\n        case 'ease-in-out-back':\n            return getTimingBezier(0.68, -0.6, 0.32, 1.6);\n        case 'step-start':\n            return function () {\n                return 1;\n            };\n        case 'step-end':\n            return function (time) {\n                return time === 1 ? 1 : 0;\n            };\n        default:\n            // eslint-disable-next-line no-case-declarations\n            const s = 'cubic-bezier(';\n            if (str && str.indexOf(s) === 0) {\n                const parts = str\n                    .substr(s.length, str.length - s.length - 1)\n                    .split(',');\n                if (parts.length !== 4) {\n                    console.warn('Unknown timing function: ' + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time;\n                    };\n                }\n                const a = parseFloat(parts[0] || '0.42');\n                const b = parseFloat(parts[1] || '0');\n                const c = parseFloat(parts[2] || '1');\n                const d = parseFloat(parts[3] || '1');\n                if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                    console.warn(' Unknown timing function: ' + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time;\n                    };\n                }\n                return getTimingBezier(a, b, c, d);\n            }\n            else {\n                console.warn('Unknown timing function: ' + str);\n                // Fallback: use linear.\n                return function (time) {\n                    return time;\n                };\n            }\n    }\n});\nif (!Math.hypot)\n    Math.hypot = (...args) => {\n        let y = 0, i = args.length;\n        while (i--) {\n            y += args[i] * args[i];\n        }\n        return Math.sqrt(y);\n    };\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { isPowerOfTwo } from '../../utils.js';\nimport { CoreContextTexture } from '../CoreContextTexture.js';\nimport { isHTMLImageElement } from './internal/RendererUtils.js';\nconst TRANSPARENT_TEXTURE_DATA = new Uint8Array([0, 0, 0, 0]);\n/**\n * A wrapper around a WebGLTexture that handles loading the texture data\n * from a Texture source and uploading it to the GPU as well as freeing\n * the uploaded texture.\n *\n * @remarks\n * When accessing the ctxTexture property, the texture will be loaded if\n * it hasn't been already. ctxTexture will always return a valid WebGLTexture\n * and trigger the loading/uploading of the texture's data if it hasn't been\n * loaded yet.\n */\nexport class WebGlCoreCtxTexture extends CoreContextTexture {\n    glw;\n    _nativeCtxTexture = null;\n    _state = 'freed';\n    _w = 0;\n    _h = 0;\n    constructor(glw, memManager, textureSource) {\n        super(memManager, textureSource);\n        this.glw = glw;\n    }\n    get ctxTexture() {\n        if (this._state === 'freed') {\n            this.load();\n        }\n        assertTruthy(this._nativeCtxTexture);\n        return this._nativeCtxTexture;\n    }\n    get renderable() {\n        return this.textureSource.renderable;\n    }\n    get w() {\n        return this._w;\n    }\n    get h() {\n        return this._h;\n    }\n    /**\n     * Load the texture data from the Texture source and upload it to the GPU\n     *\n     * @remarks\n     * This method is called automatically when accessing the ctxTexture property\n     * if the texture hasn't been loaded yet. But it can also be called manually\n     * to force the texture to be pre-loaded prior to accessing the ctxTexture\n     * property.\n     */\n    load() {\n        // If the texture is already loading or loaded, don't load it again.\n        if (this._state === 'loading' || this._state === 'loaded') {\n            return;\n        }\n        this._state = 'loading';\n        this.textureSource.setState('loading');\n        this._nativeCtxTexture = this.createNativeCtxTexture();\n        this.onLoadRequest()\n            .then(({ width, height }) => {\n            if (this._state === 'freed') {\n                return;\n            }\n            this._state = 'loaded';\n            this._w = width;\n            this._h = height;\n            // Update the texture source's width and height so that it can be used\n            // for rendering.\n            this.textureSource.setState('loaded', { width, height });\n        })\n            .catch((err) => {\n            this._state = 'failed';\n            this.textureSource.setState('failed', err);\n            console.error(err);\n        });\n    }\n    /**\n     * Called when the texture data needs to be loaded and uploaded to a texture\n     */\n    async onLoadRequest() {\n        const { glw, memManager } = this;\n        // Set to a 1x1 transparent texture\n        glw.texImage2D(0, glw.RGBA, 1, 1, 0, glw.RGBA, glw.UNSIGNED_BYTE, null);\n        memManager.setTextureMemUse(this, TRANSPARENT_TEXTURE_DATA.byteLength);\n        const textureData = await this.textureSource?.getTextureData();\n        // If the texture has been freed while loading, return early.\n        if (!this._nativeCtxTexture) {\n            assertTruthy(this._state === 'freed');\n            return { width: 0, height: 0 };\n        }\n        let width = 0;\n        let height = 0;\n        assertTruthy(this._nativeCtxTexture);\n        glw.activeTexture(0);\n        // If textureData is null, the texture is empty (0, 0) and we don't need to\n        // upload any data to the GPU.\n        if (textureData.data instanceof ImageBitmap ||\n            textureData.data instanceof ImageData ||\n            // not using typeof HTMLImageElement due to web worker\n            isHTMLImageElement(textureData.data)) {\n            const data = textureData.data;\n            width = data.width;\n            height = data.height;\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.pixelStorei(glw.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !!textureData.premultiplyAlpha);\n            glw.texImage2D(0, glw.RGBA, glw.RGBA, glw.UNSIGNED_BYTE, data);\n            memManager.setTextureMemUse(this, width * height * 4);\n            // generate mipmaps for power-of-2 textures or in WebGL2RenderingContext\n            if (glw.isWebGl2() || (isPowerOfTwo(width) && isPowerOfTwo(height))) {\n                glw.generateMipmap();\n            }\n        }\n        else if (textureData.data === null) {\n            width = 0;\n            height = 0;\n            // Reset to a 1x1 transparent texture\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.texImage2D(0, glw.RGBA, 1, 1, 0, glw.RGBA, glw.UNSIGNED_BYTE, TRANSPARENT_TEXTURE_DATA);\n            memManager.setTextureMemUse(this, TRANSPARENT_TEXTURE_DATA.byteLength);\n        }\n        else if ('mipmaps' in textureData.data && textureData.data.mipmaps) {\n            const { mipmaps, width = 0, height = 0, type, glInternalFormat, } = textureData.data;\n            const view = type === 'ktx'\n                ? new DataView(mipmaps[0] ?? new ArrayBuffer(0))\n                : mipmaps[0];\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.compressedTexImage2D(0, glInternalFormat, width, height, 0, view);\n            glw.texParameteri(glw.TEXTURE_WRAP_S, glw.CLAMP_TO_EDGE);\n            glw.texParameteri(glw.TEXTURE_WRAP_T, glw.CLAMP_TO_EDGE);\n            glw.texParameteri(glw.TEXTURE_MAG_FILTER, glw.LINEAR);\n            glw.texParameteri(glw.TEXTURE_MIN_FILTER, glw.LINEAR);\n            memManager.setTextureMemUse(this, view.byteLength);\n        }\n        else {\n            console.error(`WebGlCoreCtxTexture.onLoadRequest: Unexpected textureData returned`, textureData);\n        }\n        return {\n            width,\n            height,\n        };\n    }\n    /**\n     * Free the WebGLTexture from the GPU\n     *\n     * @returns\n     */\n    free() {\n        if (this._state === 'freed') {\n            return;\n        }\n        this._state = 'freed';\n        this.textureSource.setState('freed');\n        this._w = 0;\n        this._h = 0;\n        if (!this._nativeCtxTexture) {\n            return;\n        }\n        const { glw, memManager } = this;\n        glw.deleteTexture(this._nativeCtxTexture);\n        memManager.setTextureMemUse(this, 0);\n        this._nativeCtxTexture = null;\n    }\n    /**\n     * Create native context texture\n     *\n     * @remarks\n     * When this method returns the returned texture will be bound to the GL context state.\n     *\n     * @param width\n     * @param height\n     * @returns\n     */\n    createNativeCtxTexture() {\n        const { glw } = this;\n        const nativeTexture = glw.createTexture();\n        if (!nativeTexture) {\n            throw new Error('Could not create WebGL Texture');\n        }\n        // On initial load request, create a 1x1 transparent texture to use until\n        // the texture data is finally loaded.\n        glw.activeTexture(0);\n        glw.bindTexture(nativeTexture);\n        // linear texture filtering\n        glw.texParameteri(glw.TEXTURE_MAG_FILTER, glw.LINEAR);\n        glw.texParameteri(glw.TEXTURE_MIN_FILTER, glw.LINEAR);\n        // texture wrapping method\n        glw.texParameteri(glw.TEXTURE_WRAP_S, glw.CLAMP_TO_EDGE);\n        glw.texParameteri(glw.TEXTURE_WRAP_T, glw.CLAMP_TO_EDGE);\n        return nativeTexture;\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of only a 1x1 color pixel\n *\n * @remarks\n * The pixel color is set with the {@link ColorTextureProps.color} prop.\n *\n * This is the default texture used for a Node if it's\n * {@link INodeWritableProps.texture} prop is set to `null` (the default)\n *\n * Generally the 1x1 color pixel is stretched to whatever the set dimensions of\n * a Node are.\n */\nexport class ColorTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ColorTexture.resolveDefaults(props || {});\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(color) {\n        this.props.color = color;\n    }\n    async getTextureData() {\n        const pixelData32 = new Uint32Array([this.color]);\n        const pixelData8 = new Uint8ClampedArray(pixelData32.buffer);\n        return {\n            data: new ImageData(pixelData8, 1, 1),\n            premultiplyAlpha: true,\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = ColorTexture.resolveDefaults(props);\n        return `ColorTexture,${resolvedProps.color}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            color: props.color || 0xffffffff,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ColorTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture, } from './Texture.js';\n/**\n * A Texture that is a sub-region of another Texture.\n *\n * @remarks\n * The parent texture can be a Sprite Sheet/Texture Atlas and set using the\n * {@link SubTextureProps.texture} prop. The sub-region relative to the parent\n * texture is defined with the {@link SubTextureProps.x},\n * {@link SubTextureProps.y}, {@link SubTextureProps.width}, and\n * {@link SubTextureProps.height} pixel values.\n */\nexport class SubTexture extends Texture {\n    props;\n    parentTexture;\n    constructor(txManager, props) {\n        super(txManager);\n        this.parentTexture = this.txManager.loadTexture(props.texture.txType, props.texture.props, props.texture.options);\n        this.props = SubTexture.resolveDefaults(props || {});\n        // If parent texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            const parentTx = this.parentTexture;\n            if (parentTx.state === 'loaded') {\n                this.onParentTxLoaded(parentTx, parentTx.dimensions);\n            }\n            else if (parentTx.state === 'failed') {\n                this.onParentTxFailed(parentTx, parentTx.error);\n            }\n            parentTx.on('loaded', this.onParentTxLoaded);\n            parentTx.on('failed', this.onParentTxFailed);\n        });\n    }\n    onParentTxLoaded = () => {\n        // We ignore the parent's passed dimensions, and simply use the SubTexture's\n        // configured dimensions (because that's all that matters here)\n        this.setState('loaded', {\n            width: this.props.width,\n            height: this.props.height,\n        });\n    };\n    onParentTxFailed = (target, error) => {\n        this.setState('failed', error);\n    };\n    async getTextureData() {\n        return {\n            data: this.props,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {\n            texture: props.texture,\n            x: props.x || 0,\n            y: props.y || 0,\n            width: props.width || 0,\n            height: props.height || 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=SubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nexport class WebGlCoreCtxSubTexture extends WebGlCoreCtxTexture {\n    constructor(glw, memManager, textureSource) {\n        super(glw, memManager, textureSource);\n    }\n    async onLoadRequest() {\n        const props = await this.textureSource.getTextureData();\n        return {\n            width: props.data?.width || 0,\n            height: props.data?.height || 0,\n        };\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxSubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a collection of WebGL Buffers along with their associated\n * vertex attribute formats.\n */\nexport class BufferCollection {\n    config;\n    constructor(config) {\n        this.config = config;\n    }\n    /**\n     * Get the WebGLBuffer associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getBuffer(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])?.buffer;\n    }\n    /**\n     * Get the AttributeInfo associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getAttributeInfo(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])\n            ?.attributes[attributeName];\n    }\n}\n//# sourceMappingURL=BufferCollection.js.map","/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport { assertTruthy } from '../../utils.js';\nimport { isWebGl2 } from '../renderers/webgl/internal/WebGlUtils.js';\n/**\n * Optimized WebGL Context Wrapper\n *\n * @remarks\n * This class contains the subset of the WebGLRenderingContext & WebGL2RenderingContext\n * API that is used by the renderer. Select high volume WebGL methods include\n * caching optimizations to avoid making WebGL calls if the state is already set\n * to the desired value.\n *\n * While most methods contained are direct passthroughs to the WebGL context,\n * some methods combine multiple WebGL calls into one for convenience, modify\n * arguments to be more convenient, or are replaced by more specific methods.\n *\n * Not all methods are optimized. Only methods that are called frequently\n * and/or have a high cost are optimized.\n *\n * A subset of GLenum constants are also exposed as properties on this class\n * for convenience.\n */\nexport class WebGlContextWrapper {\n    gl;\n    //#region Cached WebGL State\n    activeTextureUnit = 0;\n    texture2dUnits;\n    texture2dParams = new WeakMap();\n    scissorEnabled;\n    scissorX;\n    scissorY;\n    scissorWidth;\n    scissorHeight;\n    blendEnabled;\n    blendSrcRgb;\n    blendDstRgb;\n    blendSrcAlpha;\n    blendDstAlpha;\n    boundArrayBuffer;\n    boundElementArrayBuffer;\n    curProgram;\n    programUniforms = new WeakMap();\n    //#endregion Cached WebGL State\n    //#region Canvas\n    canvas;\n    //#endregion Canvas\n    //#region WebGL Enums\n    MAX_RENDERBUFFER_SIZE;\n    MAX_TEXTURE_SIZE;\n    MAX_VIEWPORT_DIMS;\n    MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n    MAX_TEXTURE_IMAGE_UNITS;\n    MAX_COMBINED_TEXTURE_IMAGE_UNITS;\n    MAX_VERTEX_ATTRIBS;\n    MAX_VARYING_VECTORS;\n    MAX_VERTEX_UNIFORM_VECTORS;\n    MAX_FRAGMENT_UNIFORM_VECTORS;\n    TEXTURE_MAG_FILTER;\n    TEXTURE_MIN_FILTER;\n    TEXTURE_WRAP_S;\n    TEXTURE_WRAP_T;\n    LINEAR;\n    CLAMP_TO_EDGE;\n    RGBA;\n    UNSIGNED_BYTE;\n    UNPACK_PREMULTIPLY_ALPHA_WEBGL;\n    UNPACK_FLIP_Y_WEBGL;\n    FLOAT;\n    TRIANGLES;\n    UNSIGNED_SHORT;\n    ONE;\n    ONE_MINUS_SRC_ALPHA;\n    VERTEX_SHADER;\n    FRAGMENT_SHADER;\n    STATIC_DRAW;\n    COMPILE_STATUS;\n    LINK_STATUS;\n    DYNAMIC_DRAW;\n    COLOR_ATTACHMENT0;\n    //#endregion WebGL Enums\n    constructor(gl) {\n        this.gl = gl;\n        // The following code extracts the current state of the WebGL context\n        // to our local JavaScript cached version of it. This is so we can\n        // avoid making WebGL calls if we don't need to.\n        // We could assume that the WebGL context is in a default state, but\n        // in the future we may want to support restoring a broken WebGL context\n        // and this will help with that.\n        this.activeTextureUnit =\n            gl.getParameter(gl.ACTIVE_TEXTURE) - gl.TEXTURE0;\n        const maxTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n        // save current texture units\n        this.texture2dUnits = new Array(maxTextureUnits)\n            .fill(undefined)\n            .map((_, i) => {\n            this.activeTexture(i);\n            return gl.getParameter(gl.TEXTURE_BINDING_2D);\n        });\n        // restore active texture unit\n        this.activeTexture(this.activeTextureUnit);\n        this.scissorEnabled = gl.isEnabled(gl.SCISSOR_TEST);\n        const scissorBox = gl.getParameter(gl.SCISSOR_BOX);\n        this.scissorX = scissorBox[0];\n        this.scissorY = scissorBox[1];\n        this.scissorWidth = scissorBox[2];\n        this.scissorHeight = scissorBox[3];\n        this.blendEnabled = gl.isEnabled(gl.BLEND);\n        this.blendSrcRgb = gl.getParameter(gl.BLEND_SRC_RGB);\n        this.blendDstRgb = gl.getParameter(gl.BLEND_DST_RGB);\n        this.blendSrcAlpha = gl.getParameter(gl.BLEND_SRC_ALPHA);\n        this.blendDstAlpha = gl.getParameter(gl.BLEND_DST_ALPHA);\n        this.boundArrayBuffer = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\n        this.boundElementArrayBuffer = gl.getParameter(gl.ELEMENT_ARRAY_BUFFER_BINDING);\n        this.curProgram = gl.getParameter(gl.CURRENT_PROGRAM);\n        this.canvas = gl.canvas;\n        // Extract GLenums\n        this.MAX_RENDERBUFFER_SIZE = gl.MAX_RENDERBUFFER_SIZE;\n        this.MAX_TEXTURE_SIZE = gl.MAX_TEXTURE_SIZE;\n        this.MAX_VIEWPORT_DIMS = gl.MAX_VIEWPORT_DIMS;\n        this.MAX_VERTEX_TEXTURE_IMAGE_UNITS = gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        this.MAX_TEXTURE_IMAGE_UNITS = gl.MAX_TEXTURE_IMAGE_UNITS;\n        this.MAX_COMBINED_TEXTURE_IMAGE_UNITS = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS;\n        this.MAX_VERTEX_ATTRIBS = gl.MAX_VERTEX_ATTRIBS;\n        this.MAX_VARYING_VECTORS = gl.MAX_VARYING_VECTORS;\n        this.MAX_VERTEX_UNIFORM_VECTORS = gl.MAX_VERTEX_UNIFORM_VECTORS;\n        this.MAX_FRAGMENT_UNIFORM_VECTORS = gl.MAX_FRAGMENT_UNIFORM_VECTORS;\n        this.TEXTURE_MAG_FILTER = gl.TEXTURE_MAG_FILTER;\n        this.TEXTURE_MIN_FILTER = gl.TEXTURE_MIN_FILTER;\n        this.TEXTURE_WRAP_S = gl.TEXTURE_WRAP_S;\n        this.TEXTURE_WRAP_T = gl.TEXTURE_WRAP_T;\n        this.LINEAR = gl.LINEAR;\n        this.CLAMP_TO_EDGE = gl.CLAMP_TO_EDGE;\n        this.RGBA = gl.RGBA;\n        this.UNSIGNED_BYTE = gl.UNSIGNED_BYTE;\n        this.UNPACK_PREMULTIPLY_ALPHA_WEBGL = gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL;\n        this.UNPACK_FLIP_Y_WEBGL = gl.UNPACK_FLIP_Y_WEBGL;\n        this.FLOAT = gl.FLOAT;\n        this.TRIANGLES = gl.TRIANGLES;\n        this.UNSIGNED_SHORT = gl.UNSIGNED_SHORT;\n        this.ONE = gl.ONE;\n        this.ONE_MINUS_SRC_ALPHA = gl.ONE_MINUS_SRC_ALPHA;\n        this.MAX_VERTEX_TEXTURE_IMAGE_UNITS = gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        this.TRIANGLES = gl.TRIANGLES;\n        this.UNSIGNED_SHORT = gl.UNSIGNED_SHORT;\n        this.VERTEX_SHADER = gl.VERTEX_SHADER;\n        this.FRAGMENT_SHADER = gl.FRAGMENT_SHADER;\n        this.STATIC_DRAW = gl.STATIC_DRAW;\n        this.COMPILE_STATUS = gl.COMPILE_STATUS;\n        this.LINK_STATUS = gl.LINK_STATUS;\n        this.DYNAMIC_DRAW = gl.DYNAMIC_DRAW;\n        this.COLOR_ATTACHMENT0 = gl.COLOR_ATTACHMENT0;\n    }\n    /**\n     * Returns true if the WebGL context is WebGL2\n     *\n     * @returns\n     */\n    isWebGl2() {\n        return isWebGl2(this.gl);\n    }\n    /**\n     * ```\n     * gl.activeTexture(textureUnit + gl.TEXTURE0);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: `textureUnit` is based from 0, not `gl.TEXTURE0`.\n     *\n     * @param textureUnit\n     */\n    activeTexture(textureUnit) {\n        const { gl } = this;\n        if (this.activeTextureUnit !== textureUnit) {\n            gl.activeTexture(textureUnit + gl.TEXTURE0);\n            this.activeTextureUnit = textureUnit;\n        }\n    }\n    /**\n     * ```\n     * gl.bindTexture(gl.TEXTURE_2D, texture);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     *\n     * @param texture\n     */\n    bindTexture(texture) {\n        const { gl, activeTextureUnit, texture2dUnits } = this;\n        if (texture2dUnits[activeTextureUnit] === texture) {\n            return;\n        }\n        texture2dUnits[activeTextureUnit] = texture;\n        gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    }\n    _getActiveTexture() {\n        const { activeTextureUnit, texture2dUnits } = this;\n        return texture2dUnits[activeTextureUnit];\n    }\n    /**\n     * ```\n     * gl.texParameteri(gl.TEXTURE_2D, pname, param);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     *\n     * @param pname\n     * @param param\n     * @returns\n     */\n    texParameteri(pname, param) {\n        const { gl, texture2dParams } = this;\n        const activeTexture = this._getActiveTexture();\n        if (!activeTexture) {\n            throw new Error('No active texture');\n        }\n        let textureParams = texture2dParams.get(activeTexture);\n        if (!textureParams) {\n            textureParams = {};\n            texture2dParams.set(activeTexture, textureParams);\n        }\n        if (textureParams[pname] === param) {\n            return;\n        }\n        textureParams[pname] = param;\n        gl.texParameteri(gl.TEXTURE_2D, pname, param);\n    }\n    texImage2D(level, internalFormat, widthOrFormat, heightOrType, borderOrSource, format, type, pixels) {\n        const { gl } = this;\n        if (format) {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, widthOrFormat, heightOrType, borderOrSource, format, type, pixels);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, widthOrFormat, heightOrType, borderOrSource);\n        }\n    }\n    /**\n     * ```\n     * gl.compressedTexImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, data);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     */\n    compressedTexImage2D(level, internalformat, width, height, border, data) {\n        const { gl } = this;\n        gl.compressedTexImage2D(gl.TEXTURE_2D, level, internalformat, width, height, border, data);\n    }\n    /**\n     * ```\n     * gl.pixelStorei(pname, param);\n     * ```\n     *\n     * @param pname\n     * @param param\n     */\n    pixelStorei(pname, param) {\n        const { gl } = this;\n        gl.pixelStorei(pname, param);\n    }\n    /**\n     * ```\n     * gl.generateMipmap(gl.TEXTURE_2D);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     */\n    generateMipmap() {\n        const { gl } = this;\n        gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    /**\n     * ```\n     * gl.createTexture();\n     * ```\n     *\n     * @returns\n     */\n    createTexture() {\n        const { gl } = this;\n        return gl.createTexture();\n    }\n    /**\n     * ```\n     * gl.deleteTexture(texture);\n     * ```\n     *\n     * @param texture\n     */\n    deleteTexture(texture) {\n        const { gl } = this;\n        if (texture) {\n            this.texture2dParams.delete(texture);\n        }\n        gl.deleteTexture(texture);\n    }\n    /**\n     * ```\n     * gl.viewport(x, y, width, height);\n     * ```\n     */\n    viewport(x, y, width, height) {\n        const { gl } = this;\n        gl.viewport(x, y, width, height);\n    }\n    /**\n     * ```\n     * gl.clearColor(red, green, blue, alpha);\n     * ```\n     *\n     * @param red\n     * @param green\n     * @param blue\n     * @param alpha\n     */\n    clearColor(red, green, blue, alpha) {\n        const { gl } = this;\n        gl.clearColor(red, green, blue, alpha);\n    }\n    /**\n     * ```\n     * gl[\"enable\"|\"disable\"](gl.SCISSOR_TEST);\n     * ```\n     * @param enable\n     */\n    setScissorTest(enable) {\n        const { gl, scissorEnabled } = this;\n        if (enable === scissorEnabled) {\n            return;\n        }\n        if (enable) {\n            gl.enable(gl.SCISSOR_TEST);\n        }\n        else {\n            gl.disable(gl.SCISSOR_TEST);\n        }\n        this.scissorEnabled = enable;\n    }\n    /**\n     * ```\n     * gl.scissor(x, y, width, height);\n     * ```\n     *\n     * @param x\n     * @param y\n     * @param width\n     * @param height\n     */\n    scissor(x, y, width, height) {\n        const { gl, scissorX, scissorY, scissorWidth, scissorHeight } = this;\n        if (x !== scissorX ||\n            y !== scissorY ||\n            width !== scissorWidth ||\n            height !== scissorHeight) {\n            gl.scissor(x, y, width, height);\n            this.scissorX = x;\n            this.scissorY = y;\n            this.scissorWidth = width;\n            this.scissorHeight = height;\n        }\n    }\n    /**\n     * ```\n     * gl[\"enable\"|\"disable\"](gl.BLEND);\n     * ```\n     *\n     * @param blend\n     * @returns\n     */\n    setBlend(blend) {\n        const { gl, blendEnabled } = this;\n        if (blend === blendEnabled) {\n            return;\n        }\n        if (blend) {\n            gl.enable(gl.BLEND);\n        }\n        else {\n            gl.disable(gl.BLEND);\n        }\n        this.blendEnabled = blend;\n    }\n    /**\n     * ```\n     * gl.blendFunc(src, dst);\n     * ```\n     *\n     * @param src\n     * @param dst\n     */\n    blendFunc(src, dst) {\n        const { gl, blendSrcRgb, blendDstRgb, blendSrcAlpha, blendDstAlpha } = this;\n        if (src !== blendSrcRgb ||\n            dst !== blendDstRgb ||\n            src !== blendSrcAlpha ||\n            dst !== blendDstAlpha) {\n            gl.blendFunc(src, dst);\n            this.blendSrcRgb = src;\n            this.blendDstRgb = dst;\n            this.blendSrcAlpha = src;\n            this.blendDstAlpha = dst;\n        }\n    }\n    /**\n     * ```\n     * gl.createBuffer();\n     * ```\n     *\n     * @returns\n     */\n    createBuffer() {\n        const { gl } = this;\n        return gl.createBuffer();\n    }\n    /**\n     * ```\n     * gl.createFramebuffer();\n     * ```\n     * @returns\n     */\n    createFramebuffer() {\n        const { gl } = this;\n        return gl.createFramebuffer();\n    }\n    /**\n     * ```\n     * gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n     * ```\n     *\n     * @param framebuffer\n     */\n    bindFramebuffer(framebuffer) {\n        const { gl } = this;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    }\n    /**\n     * ```\n     * gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.FRAMEBUFFER` and textarget is always `gl.TEXTURE_2D`\n     */\n    framebufferTexture2D(attachment, texture, level) {\n        const { gl } = this;\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture, level);\n    }\n    /**\n     * ```\n     * gl.clear(gl.COLOR_BUFFER_BIT);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Clear mask is always `gl.COLOR_BUFFER_BIT`\n     */\n    clear() {\n        const { gl } = this;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n     * gl.bufferData(gl.ARRAY_BUFFER, data, usage);\n     * ```\n     *\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.bufferData` are combined into one function.\n     *\n     * @param buffer\n     * @param data\n     * @param usage\n     */\n    arrayBufferData(buffer, data, usage) {\n        const { gl, boundArrayBuffer } = this;\n        if (boundArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            this.boundArrayBuffer = buffer;\n        }\n        gl.bufferData(gl.ARRAY_BUFFER, data, usage);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n     * gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, usage);\n     * ```\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.bufferData` are combined into one function.\n     *\n     * @param buffer\n     * @param data\n     * @param usage\n     */\n    elementArrayBufferData(buffer, data, usage) {\n        const { gl, boundElementArrayBuffer } = this;\n        if (boundElementArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n            this.boundElementArrayBuffer = buffer;\n        }\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, usage);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n     * gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n     * ```\n     *\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.vertexAttribPointer` are combined into one function.\n     *\n     * @param buffer\n     * @param index\n     * @param size\n     * @param type\n     * @param normalized\n     * @param stride\n     * @param offset\n     */\n    vertexAttribPointer(buffer, index, size, type, normalized, stride, offset) {\n        const { gl, boundArrayBuffer } = this;\n        if (boundArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            this.boundArrayBuffer = buffer;\n        }\n        gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n    /**\n     * ```\n     * gl.useProgram(program);\n     * ```\n     *\n     * @param program\n     * @returns\n     */\n    useProgram(program) {\n        const { gl, curProgram } = this;\n        if (curProgram === program) {\n            return;\n        }\n        gl.useProgram(program);\n        this.curProgram = program;\n    }\n    setUniform(type, location, ...args) {\n        const { gl, programUniforms } = this;\n        let uniforms = programUniforms.get(this.curProgram);\n        if (!uniforms) {\n            uniforms = new Map();\n            programUniforms.set(this.curProgram, uniforms);\n        }\n        const uniformArgs = uniforms.get(location);\n        if (!uniformArgs || !compareArrays(uniformArgs, args)) {\n            uniforms.set(location, args);\n            gl[type](location, ...args);\n        }\n    }\n    /**\n     * ```\n     * gl.getParameter(pname);\n     * ```\n     *\n     * @param pname\n     * @returns\n     */\n    getParameter(pname) {\n        const { gl } = this;\n        return gl.getParameter(pname);\n    }\n    /**\n     * ```\n     * gl.drawElements(mode, count, type, offset);\n     * ```\n     *\n     * @param mode\n     * @param count\n     * @param type\n     * @param offset\n     */\n    drawElements(mode, count, type, offset) {\n        const { gl } = this;\n        gl.drawElements(mode, count, type, offset);\n    }\n    /**\n     * ```\n     * gl.drawArrays(mode, first, count);\n     * ```\n     *\n     * @param name\n     * @returns\n     */\n    getExtension(name) {\n        const { gl } = this;\n        return gl.getExtension(name);\n    }\n    /**\n     * ```\n     * gl.createVertexArray();\n     * ```\n     *\n     * @returns\n     */\n    createVertexArray() {\n        const { gl } = this;\n        assertTruthy(gl instanceof WebGL2RenderingContext);\n        return gl.createVertexArray();\n    }\n    /**\n     * ```\n     * gl.bindVertexArray(vertexArray);\n     * ```\n     *\n     * @param vertexArray\n     */\n    bindVertexArray(vertexArray) {\n        const { gl } = this;\n        assertTruthy(gl instanceof WebGL2RenderingContext);\n        gl.bindVertexArray(vertexArray);\n    }\n    /**\n     * ```\n     * gl.getAttribLocation(program, name);\n     * ```\n     *\n     * @param program\n     * @param name\n     * @returns\n     */\n    getAttribLocation(program, name) {\n        const { gl } = this;\n        return gl.getAttribLocation(program, name);\n    }\n    /**\n     * ```\n     * gl.getUniformLocation(program, name);\n     * ```\n     *\n     * @param program\n     * @param name\n     * @returns\n     */\n    getUniformLocation(program, name) {\n        const { gl } = this;\n        return gl.getUniformLocation(program, name);\n    }\n    /**\n     * ```\n     * gl.enableVertexAttribArray(index);\n     * ```\n     *\n     * @param index\n     */\n    enableVertexAttribArray(index) {\n        const { gl } = this;\n        gl.enableVertexAttribArray(index);\n    }\n    /**\n     * ```\n     * gl.disableVertexAttribArray(index);\n     * ```\n     *\n     * @param index\n     */\n    disableVertexAttribArray(index) {\n        const { gl } = this;\n        gl.disableVertexAttribArray(index);\n    }\n    /**\n     * ```\n     * gl.createShader(type);\n     * ```\n     *\n     * @param type\n     * @returns\n     */\n    createShader(type) {\n        const { gl } = this;\n        return gl.createShader(type);\n    }\n    /**\n     * ```\n     * gl.compileShader(shader);\n     * ```\n     *\n     * @param shader\n     * @returns\n     */\n    compileShader(shader) {\n        const { gl } = this;\n        gl.compileShader(shader);\n    }\n    /**\n     * ```\n     * gl.attachShader(program, shader);\n     * ```\n     *\n     * @param program\n     * @param shader\n     */\n    attachShader(program, shader) {\n        const { gl } = this;\n        gl.attachShader(program, shader);\n    }\n    /**\n     * ```\n     * gl.linkProgram(program);\n     * ```\n     *\n     * @param program\n     */\n    linkProgram(program) {\n        const { gl } = this;\n        gl.linkProgram(program);\n    }\n    /**\n     * ```\n     * gl.deleteProgram(shader);\n     * ```\n     *\n     * @param shader\n     */\n    deleteProgram(shader) {\n        const { gl } = this;\n        gl.deleteProgram(shader);\n    }\n    /**\n     * ```\n     * gl.getShaderParameter(shader, pname);\n     * ```\n     *\n     * @param shader\n     * @param pname\n     */\n    getShaderParameter(shader, pname) {\n        const { gl } = this;\n        return gl.getShaderParameter(shader, pname);\n    }\n    /**\n     * ```\n     * gl.getShaderInfoLog(shader);\n     * ```\n     *\n     * @param shader\n     */\n    getShaderInfoLog(shader) {\n        const { gl } = this;\n        return gl.getShaderInfoLog(shader);\n    }\n    /**\n     * ```\n     * gl.createProgram();\n     * ```\n     *\n     * @returns\n     */\n    createProgram() {\n        const { gl } = this;\n        return gl.createProgram();\n    }\n    /**\n     * ```\n     * gl.getProgramParameter(program, pname);\n     * ```\n     *\n     * @param program\n     * @param pname\n     * @returns\n     */\n    getProgramParameter(program, pname) {\n        const { gl } = this;\n        return gl.getProgramParameter(program, pname);\n    }\n    /**\n     * ```\n     * gl.getProgramInfoLog(program);\n     * ```\n     *\n     * @param program\n     * @returns\n     */\n    getProgramInfoLog(program) {\n        const { gl } = this;\n        return gl.getProgramInfoLog(program);\n    }\n    /**\n     * ```\n     * gl.shaderSource(shader, source);\n     * ```\n     *\n     * @param shader\n     * @param source\n     */\n    shaderSource(shader, source) {\n        const { gl } = this;\n        gl.shaderSource(shader, source);\n    }\n    /**\n     * ```\n     * gl.deleteShader(shader);\n     * ```\n     *\n     * @param shader\n     */\n    deleteShader(shader) {\n        const { gl } = this;\n        gl.deleteShader(shader);\n    }\n}\n/**\n * Compare two arrays for equality.\n *\n * @remarks\n * This function will not try to compare nested arrays or Float32Arrays and\n * instead will always return false when they are encountered.\n *\n * @param a\n * @param b\n * @returns\n */\nexport function compareArrays(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    return a.every((v, i) => {\n        // Don't bother to compare nested arrays or Float32Arrays\n        if (Array.isArray(v) || v instanceof Float32Array) {\n            return false;\n        }\n        else {\n            return v === b[i];\n        }\n    });\n}\n//# sourceMappingURL=WebGlContextWrapper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generic WebGL Utility Functions\n *\n * @remarks\n * Nothing here should be coupled to Renderer logic / types.\n *\n * @param gl\n * @returns\n */\nexport function isWebGl2(gl) {\n    return (self.WebGL2RenderingContext && gl instanceof self.WebGL2RenderingContext);\n}\n//# sourceMappingURL=WebGlUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\nexport class RenderTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = RenderTexture.resolveDefaults(props || {});\n    }\n    get width() {\n        return this.props.width;\n    }\n    set width(value) {\n        this.props.width = value;\n    }\n    get height() {\n        return this.props.height;\n    }\n    set height(value) {\n        this.props.height = value;\n    }\n    async getTextureData() {\n        return {\n            data: null,\n            premultiplyAlpha: null,\n        };\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width || 256,\n            height: props.height || 256,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=RenderTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2024 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nexport class WebGlCoreCtxRenderTexture extends WebGlCoreCtxTexture {\n    framebuffer;\n    constructor(glw, memManager, textureSource) {\n        super(glw, memManager, textureSource);\n        // Create Framebuffer object\n        const framebuffer = glw.createFramebuffer();\n        assertTruthy(framebuffer, 'Unable to create framebuffer');\n        this.framebuffer = framebuffer;\n    }\n    async onLoadRequest() {\n        const { glw, memManager } = this;\n        const nativeTexture = (this._nativeCtxTexture =\n            this.createNativeCtxTexture());\n        const { width, height } = this.textureSource;\n        // Set the dimensions of the render texture\n        glw.texImage2D(0, glw.RGBA, width, height, 0, glw.RGBA, glw.UNSIGNED_BYTE, null);\n        // Update the texture memory manager\n        memManager.setTextureMemUse(this, width * height * 4);\n        // Bind the framebuffer\n        glw.bindFramebuffer(this.framebuffer);\n        // Attach the texture to the framebuffer\n        glw.framebufferTexture2D(glw.COLOR_ATTACHMENT0, nativeTexture, 0);\n        // Unbind the framebuffer\n        glw.bindFramebuffer(null);\n        return {\n            width,\n            height,\n        };\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxRenderTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, createWebGLContext, hasOwn, mergeColorAlphaPremultiplied, } from '../../../utils.js';\nimport { CoreRenderer } from '../CoreRenderer.js';\nimport { WebGlCoreRenderOp } from './WebGlCoreRenderOp.js';\nimport { createIndexBuffer, getWebGlParameters, getWebGlExtensions, } from './internal/RendererUtils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { ColorTexture } from '../../textures/ColorTexture.js';\nimport { SubTexture } from '../../textures/SubTexture.js';\nimport { WebGlCoreCtxSubTexture } from './WebGlCoreCtxSubTexture.js';\nimport { CoreShaderManager } from '../../CoreShaderManager.js';\nimport { BufferCollection } from './internal/BufferCollection.js';\nimport { compareRect, getNormalizedRgbaComponents, } from '../../lib/utils.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nimport { RoundedRectangle } from './shaders/RoundedRectangle.js';\nimport { ContextSpy } from '../../lib/ContextSpy.js';\nimport { WebGlContextWrapper } from '../../lib/WebGlContextWrapper.js';\nimport { RenderTexture } from '../../textures/RenderTexture.js';\nimport { WebGlCoreCtxRenderTexture } from './WebGlCoreCtxRenderTexture.js';\nconst WORDS_PER_QUAD = 24;\nconst BYTES_PER_QUAD = WORDS_PER_QUAD * 4;\nexport class WebGlCoreRenderer extends CoreRenderer {\n    //// WebGL Native Context and Data\n    glw;\n    system;\n    //// Core Managers\n    txManager;\n    txMemManager;\n    shManager;\n    //// Options\n    options;\n    //// Persistent data\n    quadBuffer = new ArrayBuffer(1024 * 1024 * 4);\n    fQuadBuffer = new Float32Array(this.quadBuffer);\n    uiQuadBuffer = new Uint32Array(this.quadBuffer);\n    renderOps = [];\n    //// Render Op / Buffer Filling State\n    curBufferIdx = 0;\n    curRenderOp = null;\n    rttNodes = [];\n    activeRttNode = null;\n    //// Default Shader\n    defaultShader;\n    quadBufferCollection;\n    /**\n     * White pixel texture used by default when no texture is specified.\n     */\n    defaultTexture;\n    /**\n     * Whether the renderer is currently rendering to a texture.\n     */\n    renderToTextureActive = false;\n    constructor(options) {\n        super(options.stage);\n        const { canvas, clearColor, bufferMemory } = options;\n        this.options = options;\n        this.txManager = options.txManager;\n        this.txMemManager = options.txMemManager;\n        this.shManager = options.shManager;\n        this.defaultTexture = new ColorTexture(this.txManager);\n        // When the default texture is loaded, request a render in case the\n        // RAF is paused. Fixes: https://github.com/lightning-js/renderer/issues/123\n        this.defaultTexture.once('loaded', () => {\n            this.stage.requestRender();\n        });\n        const gl = createWebGLContext(canvas, options.contextSpy);\n        const glw = (this.glw = new WebGlContextWrapper(gl));\n        const color = getNormalizedRgbaComponents(clearColor);\n        glw.viewport(0, 0, canvas.width, canvas.height);\n        glw.clearColor(color[0], color[1], color[2], color[3]);\n        glw.setBlend(true);\n        glw.blendFunc(glw.ONE, glw.ONE_MINUS_SRC_ALPHA);\n        createIndexBuffer(glw, bufferMemory);\n        this.system = {\n            parameters: getWebGlParameters(this.glw),\n            extensions: getWebGlExtensions(this.glw),\n        };\n        this.shManager.renderer = this;\n        this.defaultShader = this.shManager.loadShader('DefaultShader').shader;\n        const quadBuffer = glw.createBuffer();\n        assertTruthy(quadBuffer);\n        const stride = 6 * Float32Array.BYTES_PER_ELEMENT;\n        this.quadBufferCollection = new BufferCollection([\n            {\n                buffer: quadBuffer,\n                attributes: {\n                    a_position: {\n                        name: 'a_position',\n                        size: 2,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 0, // start at the beginning of the buffer\n                    },\n                    a_textureCoordinate: {\n                        name: 'a_textureCoordinate',\n                        size: 2,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 2 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_color: {\n                        name: 'a_color',\n                        size: 4,\n                        type: glw.UNSIGNED_BYTE,\n                        normalized: true,\n                        stride,\n                        offset: 4 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_textureIndex: {\n                        name: 'a_textureIndex',\n                        size: 1,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 5 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                },\n            },\n        ]);\n    }\n    reset() {\n        const { glw } = this;\n        this.curBufferIdx = 0;\n        this.curRenderOp = null;\n        this.renderOps.length = 0;\n        glw.setScissorTest(false);\n        glw.clear();\n    }\n    getShaderManager() {\n        return this.shManager;\n    }\n    createCtxTexture(textureSource) {\n        if (textureSource instanceof SubTexture) {\n            return new WebGlCoreCtxSubTexture(this.glw, this.txMemManager, textureSource);\n        }\n        else if (textureSource instanceof RenderTexture) {\n            return new WebGlCoreCtxRenderTexture(this.glw, this.txMemManager, textureSource);\n        }\n        return new WebGlCoreCtxTexture(this.glw, this.txMemManager, textureSource);\n    }\n    /**\n     * This function adds a quad (a rectangle composed of two triangles) to the WebGL rendering pipeline.\n     *\n     * It takes a set of options that define the quad's properties, such as its dimensions, colors, texture, shader, and transformation matrix.\n     * The function first updates the shader properties with the current dimensions if necessary, then sets the default texture if none is provided.\n     * It then checks if a new render operation is needed, based on the current shader and clipping rectangle.\n     * If a new render operation is needed, it creates one and updates the current render operation.\n     * The function then adjusts the texture coordinates based on the texture options and adds the texture to the texture manager.\n     *\n     * Finally, it calculates the vertices for the quad, taking into account any transformations, and adds them to the quad buffer.\n     * The function updates the length and number of quads in the current render operation, and updates the current buffer index.\n     */\n    addQuad(params) {\n        const { fQuadBuffer, uiQuadBuffer } = this;\n        const { width, height, colorTl, colorTr, colorBl, colorBr, textureOptions, shader, shaderProps, alpha, clippingRect, tx, ty, ta, tb, tc, td, rtt: renderToTexture, parentHasRenderTexture, framebufferDimensions, } = params;\n        let { texture } = params;\n        /**\n         * If the shader props contain any automatic properties, update it with the\n         * current dimensions that will be used to render the quad.\n         */\n        if (shaderProps && hasOwn(shaderProps, '$dimensions')) {\n            const dimensions = shaderProps.$dimensions;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            dimensions.width = width;\n            dimensions.height = height;\n        }\n        texture = texture ?? this.defaultTexture;\n        assertTruthy(texture instanceof Texture, 'Invalid texture type');\n        let { curBufferIdx: bufferIdx, curRenderOp } = this;\n        const targetDims = {\n            width,\n            height,\n        };\n        const targetShader = shader || this.defaultShader;\n        assertTruthy(targetShader instanceof WebGlCoreShader);\n        if (!this.reuseRenderOp(params)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.newRenderOp(targetShader, shaderProps, alpha, targetDims, clippingRect, bufferIdx, renderToTexture, parentHasRenderTexture, framebufferDimensions);\n            curRenderOp = this.curRenderOp;\n            assertTruthy(curRenderOp);\n        }\n        const flipX = textureOptions?.flipX ?? false;\n        const flipY = textureOptions?.flipY ?? false;\n        let texCoordX1 = 0;\n        let texCoordY1 = 0;\n        let texCoordX2 = 1;\n        let texCoordY2 = 1;\n        if (texture instanceof SubTexture) {\n            const { x: tx, y: ty, width: tw, height: th } = texture.props;\n            const { width: parentW = 0, height: parentH = 0 } = texture.parentTexture\n                .dimensions || { width: 0, height: 0 };\n            texCoordX1 = tx / parentW;\n            texCoordX2 = texCoordX1 + tw / parentW;\n            texCoordY1 = ty / parentH;\n            texCoordY2 = texCoordY1 + th / parentH;\n            texture = texture.parentTexture;\n        }\n        // Flip texture coordinates if dictated by texture options\n        if (flipX) {\n            [texCoordX1, texCoordX2] = [texCoordX2, texCoordX1];\n        }\n        if (flipY) {\n            [texCoordY1, texCoordY2] = [texCoordY2, texCoordY1];\n        }\n        const { txManager } = this.stage;\n        const ctxTexture = txManager.getCtxTexture(texture);\n        assertTruthy(ctxTexture instanceof WebGlCoreCtxTexture);\n        const textureIdx = this.addTexture(ctxTexture, bufferIdx);\n        curRenderOp = this.curRenderOp;\n        assertTruthy(curRenderOp);\n        // render quad advanced\n        if (tb !== 0 || tc !== 0) {\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta;\n            fQuadBuffer[bufferIdx++] = ty + width * tc;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + width * tc + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        else {\n            // Calculate the right corner of the quad\n            // multiplied by the scale\n            const rightCornerX = tx + width * ta;\n            const rightCornerY = ty + height * td;\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = ty;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        // Update the length of the current render op\n        curRenderOp.length += WORDS_PER_QUAD;\n        curRenderOp.numQuads++;\n        this.curBufferIdx = bufferIdx;\n    }\n    /**\n     * Replace the existing RenderOp with a new one that uses the specified Shader\n     * and starts at the specified buffer index.\n     *\n     * @param shader\n     * @param bufferIdx\n     */\n    newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx, renderToTexture, parentHasRenderTexture, framebufferDimensions) {\n        const curRenderOp = new WebGlCoreRenderOp(this.glw, this.options, this.quadBufferCollection, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, 0, // Z-Index is only used for explictly added Render Ops\n        renderToTexture, parentHasRenderTexture, framebufferDimensions);\n        this.curRenderOp = curRenderOp;\n        this.renderOps.push(curRenderOp);\n    }\n    /**\n     * Add a texture to the current RenderOp. If the texture cannot be added to the\n     * current RenderOp, a new RenderOp will be created and the texture will be added\n     * to that one.\n     *\n     * If the texture cannot be added to the new RenderOp, an error will be thrown.\n     *\n     * @param texture\n     * @param bufferIdx\n     * @param recursive\n     * @returns Assigned Texture Index of the texture in the render op\n     */\n    addTexture(texture, bufferIdx, recursive) {\n        const { curRenderOp } = this;\n        assertTruthy(curRenderOp);\n        const textureIdx = curRenderOp.addTexture(texture);\n        // TODO: Refactor to be more DRY\n        if (textureIdx === 0xffffffff) {\n            if (recursive) {\n                throw new Error('Unable to add texture to render op');\n            }\n            const { shader, shaderProps, dimensions, clippingRect, alpha } = curRenderOp;\n            this.newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx);\n            return this.addTexture(texture, bufferIdx, true);\n        }\n        return textureIdx;\n    }\n    /**\n     * Test if the current Render operation can be reused for the specified parameters.\n     * @param params\n     * @returns\n     */\n    reuseRenderOp(params) {\n        const { shader, shaderProps, parentHasRenderTexture, rtt, clippingRect } = params;\n        const targetShader = shader || this.defaultShader;\n        // Switching shader program will require a new render operation\n        if (this.curRenderOp?.shader !== targetShader) {\n            return false;\n        }\n        // Switching clipping rect will require a new render operation\n        if (!compareRect(this.curRenderOp.clippingRect, clippingRect)) {\n            return false;\n        }\n        // Force new render operation if rendering to texture\n        // @todo: This needs to be improved, render operations could also be reused\n        // for rendering to texture\n        if (parentHasRenderTexture || rtt) {\n            return false;\n        }\n        // Check if the shader can batch the shader properties\n        if (this.curRenderOp.shader !== this.defaultShader &&\n            (!shaderProps ||\n                !this.curRenderOp.shader.canBatchShaderProps(this.curRenderOp.shaderProps, shaderProps))) {\n            return false;\n        }\n        // Render operation can be reused\n        return true;\n    }\n    /**\n     * add RenderOp to the render pipeline\n     */\n    addRenderOp(renderable) {\n        this.renderOps.push(renderable);\n        this.curRenderOp = null;\n    }\n    /**\n     * Render the current set of RenderOps to render to the specified surface.\n     *\n     * TODO: 'screen' is the only supported surface at the moment.\n     *\n     * @param surface\n     */\n    render(surface = 'screen') {\n        const { glw, quadBuffer } = this;\n        const arr = new Float32Array(quadBuffer, 0, this.curBufferIdx);\n        const buffer = this.quadBufferCollection.getBuffer('a_position') ?? null;\n        glw.arrayBufferData(buffer, arr, glw.STATIC_DRAW);\n        const doLog = false; // idx++ % 100 === 0;\n        if (doLog) {\n            console.log('renderOps', this.renderOps.length);\n        }\n        this.renderOps.forEach((renderOp, i) => {\n            if (doLog) {\n                console.log('Quads per operation', renderOp.numQuads);\n            }\n            renderOp.draw();\n        });\n    }\n    renderToTexture(node) {\n        for (let i = 0; i < this.rttNodes.length; i++) {\n            if (this.rttNodes[i] === node) {\n                return;\n            }\n        }\n        // @todo: Better bottom up rendering order\n        this.rttNodes.unshift(node);\n    }\n    renderRTTNodes() {\n        const { glw } = this;\n        const { txManager } = this.stage;\n        // Render all associated RTT nodes to their textures\n        for (let i = 0; i < this.rttNodes.length; i++) {\n            const node = this.rttNodes[i];\n            // Skip nodes that don't have RTT updates\n            if (!node || !node.hasRTTupdates) {\n                continue;\n            }\n            // Set the active RTT node to the current node\n            // So we can prevent rendering children of nested RTT nodes\n            this.activeRttNode = node;\n            assertTruthy(node.texture, 'RTT node missing texture');\n            const ctxTexture = txManager.getCtxTexture(node.texture);\n            assertTruthy(ctxTexture instanceof WebGlCoreCtxRenderTexture);\n            this.renderToTextureActive = true;\n            // Bind the the texture's framebuffer\n            glw.bindFramebuffer(ctxTexture.framebuffer);\n            glw.viewport(0, 0, ctxTexture.w, ctxTexture.h);\n            glw.clear();\n            // Render all associated quads to the texture\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                if (!child) {\n                    continue;\n                }\n                child.update(this.stage.deltaTime, {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                    valid: false,\n                });\n                this.stage.addQuads(child);\n                child.hasRTTupdates = false;\n            }\n            // Render all associated quads to the texture\n            this.render();\n            // Reset render operations\n            this.renderOps.length = 0;\n            node.hasRTTupdates = false;\n        }\n        // Bind the default framebuffer\n        glw.bindFramebuffer(null);\n        glw.viewport(0, 0, this.glw.canvas.width, this.glw.canvas.height);\n        this.renderToTextureActive = false;\n    }\n}\n//# sourceMappingURL=WebGlCoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const SpecialCodepoints = {\n    LINE_FEED: 0x0a,\n    CARRIAGE_RETURN: 0x0d,\n    SPACE: 0x20,\n    TAB: 0x09,\n    ZERO_WIDTH_SPACE: 0x200b,\n    ZERO_WIDTH_NON_JOINER: 0x200c,\n    ZERO_WIDTH_JOINER: 0x200d,\n    LEFT_TO_RIGHT_MARK: 0x200e,\n    RIGHT_TO_LEFT_MARK: 0x200f,\n    LEFT_TO_RIGHT_EMBEDDING: 0x202a,\n    RIGHT_TO_LEFT_EMBEDDING: 0x202b,\n    POP_DIRECTIONAL_FORMATTING: 0x202c,\n    LEFT_TO_RIGHT_OVERRIDE: 0x202d,\n    RIGHT_TO_LEFT_OVERRIDE: 0x202e,\n    LINE_SEPARATOR: 0x2028,\n    PARAGRAPH_SEPARATOR: 0x2029,\n    OBJECT_REPLACEMENT_CHARACTER: 0xfffc,\n    REPLACEMENT_CHARACTER: 0xfffd,\n    ZERO_WIDTH_NO_BREAK_SPACE: 0xfeff,\n    LEFT_TO_RIGHT_ISOLATE: 0x2066,\n    RIGHT_TO_LEFT_ISOLATE: 0x2067,\n    FIRST_STRONG_ISOLATE: 0x2068,\n    POP_DIRECTIONAL_ISOLATE: 0x2069,\n    INHIBIT_SYMMETRIC_SWAPPING: 0x206a,\n    ACTIVATE_SYMMETRIC_SWAPPING: 0x206b,\n    INHIBIT_ARABIC_FORM_SHAPING: 0x206c,\n    ACTIVATE_ARABIC_FORM_SHAPING: 0x206d,\n    NATIONAL_DIGIT_SHAPES: 0x206e,\n    NOMINAL_DIGIT_SHAPES: 0x206f,\n    LEFT_TO_RIGHT_BOUNDARY: 0x200e,\n    RIGHT_TO_LEFT_BOUNDARY: 0x200f,\n};\n//# sourceMappingURL=SpecialCodepoints.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SpecialCodepoints } from '../../../renderers/SdfTextRenderer/internal/SpecialCodepoints.js';\nimport { FontShaper, } from './FontShaper.js';\nexport class SdfFontShaper extends FontShaper {\n    data;\n    glyphMap;\n    kernings;\n    constructor(data, glyphMap) {\n        super();\n        this.data = data;\n        this.glyphMap = glyphMap;\n        const kernings = (this.kernings = {});\n        data.kernings.forEach((kerning) => {\n            const second = kerning.second;\n            const firsts = (kernings[second] = kernings[second] || {});\n            firsts[kerning.first] = kerning.amount;\n        });\n        this.kernings = kernings;\n    }\n    *shapeText(props, codepoints) {\n        let codepointResult;\n        let lastGlyphId = undefined;\n        while ((codepointResult = codepoints.peek()) && !codepointResult.done) {\n            const codepoint = codepointResult.value;\n            const glyph = this.glyphMap.get(codepoint);\n            codepoints.next();\n            if (glyph !== undefined) {\n                // We found a glyph for this codepoint\n                // Yield the mapped glyph info\n                /**\n                 * Kerning includes any possible additional letter spacing\n                 */\n                const kerning = lastGlyphId !== undefined\n                    ? (this.kernings[glyph.id]?.[lastGlyphId] || 0) +\n                        props.letterSpacing\n                    : 0;\n                lastGlyphId = glyph.id;\n                yield {\n                    mapped: true,\n                    glyphId: glyph.id,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                    xAdvance: glyph.xadvance + kerning,\n                    yAdvance: 0,\n                    xOffset: glyph.xoffset + kerning,\n                    yOffset: glyph.yoffset,\n                    xBearing: 0,\n                    yBearing: 0,\n                    width: glyph.width,\n                    height: glyph.height,\n                };\n            }\n            else {\n                // We didn't find a glyph for this codepoint\n                // Yield the unmapped codepoint info\n                // If this codepoint is a linebreak, we should reset the last glyph id\n                // so that the next glyph will not be kerned with the last glyph of the\n                // previous line.\n                if (codepoint === SpecialCodepoints.LINE_FEED) {\n                    lastGlyphId = undefined;\n                }\n                yield {\n                    mapped: false,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                };\n            }\n        }\n    }\n}\n//# sourceMappingURL=SdfFontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class FontShaper {\n}\n//# sourceMappingURL=FontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// import type { Renderer } from '../../../Renderer';\nimport { assertTruthy } from '../../../../utils.js';\nimport { WebGlCoreRenderer } from '../../../renderers/webgl/WebGlCoreRenderer.js';\nimport { ImageTexture } from '../../../textures/ImageTexture.js';\nimport { TrFontFace } from '../TrFontFace.js';\nimport { SdfFontShaper } from './internal/SdfFontShaper.js';\nexport class SdfTrFontFace extends TrFontFace {\n    type;\n    texture;\n    /**\n     * Height of the tallest character in the font including the whitespace above it\n     */\n    maxCharHeight = 0;\n    data;\n    shaper;\n    glyphMap = new Map();\n    constructor(fontFamily, descriptors, type, stage, atlasUrl, atlasDataUrl) {\n        super(fontFamily, descriptors);\n        this.type = type;\n        const renderer = stage.renderer;\n        assertTruthy(renderer instanceof WebGlCoreRenderer, 'SDF Font Faces can only be used with the WebGL Renderer');\n        this.texture = stage.txManager.loadTexture('ImageTexture', {\n            src: atlasUrl,\n            // IMPORTANT: The SDF shader requires the alpha channel to NOT be\n            // premultiplied on the atlas texture. If it is premultiplied, the\n            // rendering of SDF glyphs (especially single-channel SDF fonts) will\n            // be very jagged.\n            premultiplyAlpha: false,\n        }, {\n            preload: true,\n        });\n        this.texture.on('loaded', () => {\n            this.checkLoaded();\n        });\n        // Set this.data to the fetched data from dataUrl\n        fetch(atlasDataUrl)\n            .then(async (response) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            this.data = await response.json();\n            // Add all the glyphs to the glyph map\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            let maxCharHeight = 0;\n            this.data.chars.forEach((glyph) => {\n                this.glyphMap.set(glyph.id, glyph);\n                const charHeight = glyph.yoffset + glyph.height;\n                if (charHeight > maxCharHeight) {\n                    maxCharHeight = charHeight;\n                }\n            });\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.maxCharHeight = maxCharHeight;\n            // We know `data` is defined here, because we just set it\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.shaper = new SdfFontShaper(this.data, this.glyphMap);\n            this.checkLoaded();\n        })\n            .catch(console.error);\n    }\n    getAtlasEntry(glyphId) {\n        const glyph = this.glyphMap.get(glyphId);\n        if (glyph === undefined) {\n            throw new Error(`Glyph ${glyphId} not found in font ${this.fontFamily}`);\n        }\n        return {\n            x: glyph.x,\n            y: glyph.y,\n            width: glyph.width,\n            height: glyph.height,\n        };\n    }\n    checkLoaded() {\n        if (this.loaded)\n            return;\n        if (this.texture.state === 'loaded' && this.data) {\n            this.loaded = true;\n            this.emit('loaded');\n        }\n    }\n}\n//# sourceMappingURL=SdfTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Base class for Core extensions.\n *\n * @remarks\n * Core extensions are used to extend the Core Renderer with custom code such as\n * custom fonts, custom shaders, custom textures, custom animation functions,\n * and more.\n */\nexport class CoreExtension {\n}\n//# sourceMappingURL=CoreExtension.js.map"],"names":["assertTruthy","condition","message","hasOwn","obj","prop","Object","prototype","hasOwnProperty","call","isProductionEnvironment","BASE_URL","MODE","DEV","PROD","SSR","LEGACY","a","b","out","intersection","createBound","Math","max","x1","y1","min","x2","y2","x","y","width","height","rgba","color","r","floor","g","toFixed","bound","alpha","flipEndianess","arguments","length","undefined","newAlpha","trunc","rgba1","rgba2","p","r1","g1","b1","a1","r2","g2","b2","a2","round","bound1","bound2","EventEmitter","_createClass","_classCallCheck","this","_defineProperty","key","value","event","listener","listeners","eventListeners","push","index","indexOf","splice","_this","on","onceListener","target","data","off","_this2","_toConsumableArray","forEach","exports","createShader","glw","type","source","shader","Error","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","deleteShader","WebGlCoreShader","_CoreShader","options","_this3","_callSuper","renderer","supportsIndexedTextures","webGl2","isWebGl2","requiredExtensions","webgl2Extensions","webgl1Extensions","glVersion","extensionName","getExtension","constructor","name","shaderSources","fragment","vertex","textureUnits","system","parameters","MAX_VERTEX_TEXTURE_IMAGE_UNITS","vertexSource","Function","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","vao","createVertexArray","bindVertexArray","attributeLocations","attributeBuffers","attributeNames","attributes","attributeName","location","getAttribLocation","buffer","createBuffer","uniformLocations","uniformTypes","uniforms","uniform","getUniformLocation","warn","_inherits","attribute","enableVertexAttribArray","vertexAttribPointer","size","normalized","stride","offset","disableVertexAttribArray","loc","disableAttribute","boundBufferCollection","propsA","propsB","renderOp","props","bindBufferCollection","buffers","textures","bindTextures","parentHasRenderTexture","renderToTexture","_ref","framebufferDimensions","setUniform","Float32Array","pixelRatio","canvas","dimensions","$dimensions","$alpha","bindProps","_this$glw","_len","Array","_key","apply","concat","resolvedBuffer","getBuffer","resolvedInfo","getAttributeInfo","bindBufferAttribute","useProgram","disableAttributes","CoreShader","Texture","_EventEmitter2","txManager","_this4","Set","owner","renderable","renderableOwners","add","delete","get","state","_len2","args","_key2","loadedArgs","failedArgs","error","emit","getNormalizedRgbaComponents","TrFontFace","_EventEmitter3","fontFamily","descriptors","_this5","_objectSpread","style","weight","stretch","unicodeRange","variant","featureSettings","display","CoreContextTexture","memManager","textureSource","CoreRenderer","stage","WebGlCoreRenderOp","_CoreRenderOp","shaderProps","clippingRect","bufferIdx","zIndex","_this6","maxTextures","getParameter","texture","existingIdx","findIndex","t","newIdx","shManager","useShader","bindRenderOp","quadIdx","valid","_this$clippingRect","canvasHeight","clipX","clipWidth","clipHeight","clipY","setScissorTest","scissor","drawElements","TRIANGLES","numQuads","UNSIGNED_SHORT","CoreRenderOp","getWebGlParameters","params","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_SIZE","MAX_VIEWPORT_DIMS","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_ATTRIBS","MAX_VARYING_VECTORS","MAX_VERTEX_UNIFORM_VECTORS","MAX_FRAGMENT_UNIFORM_VECTORS","keys","getWebGlExtensions","extensions","ANGLE_instanced_arrays","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_astc","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_etc1","WEBGL_compressed_texture_pvrtc","WEBKIT_WEBGL_compressed_texture_pvrtc","WEBGL_compressed_texture_s3tc_srgb","OES_vertex_array_object","memize","fn","head","tail","memoized","i","node","len","searchCache","next","prev","val","maxSize","clear","isPowerOfTwo","getTimingBezier","c","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","it","minT","maxT","memo","str","s","parts","substr","split","parseFloat","isNaN","hypot","_len3","_key3","sqrt","TRANSPARENT_TEXTURE_DATA","Uint8Array","WebGlCoreCtxTexture","_CoreContextTexture2","_this7","_state","load","_nativeCtxTexture","_w","_h","_this8","setState","createNativeCtxTexture","onLoadRequest","then","_ref2","catch","err","_onLoadRequest","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$textureSource","textureData","_mipmaps$","_textureData$data","mipmaps","_textureData$data$wid","_width","_textureData$data$hei","_height","glInternalFormat","view","wrap","_callee$","_context","texImage2D","RGBA","UNSIGNED_BYTE","setTextureMemUse","byteLength","getTextureData","sent","abrupt","activeTexture","ImageBitmap","ImageData","bindTexture","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","generateMipmap","DataView","ArrayBuffer","compressedTexImage2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","stop","deleteTexture","nativeTexture","createTexture","ColorTexture","_Texture2","_this9","resolveDefaults","set","_getTextureData","_callee2","pixelData32","pixelData8","_context2","Uint32Array","Uint8ClampedArray","SubTexture","_Texture3","_this10","parentTexture","loadTexture","txType","queueMicrotask","parentTx","onParentTxLoaded","onParentTxFailed","_getTextureData2","_callee3","_context3","WebGlCoreCtxSubTexture","_WebGlCoreCtxTexture2","_onLoadRequest2","_callee4","_props$data","_props$data2","_callee4$","_context4","BufferCollection","config","_this$config$find","find","item","_this$config$find2","WebGlContextWrapper","gl","_this11","WeakMap","activeTextureUnit","ACTIVE_TEXTURE","TEXTURE0","maxTextureUnits","texture2dUnits","fill","map","_","TEXTURE_BINDING_2D","scissorEnabled","isEnabled","SCISSOR_TEST","scissorBox","SCISSOR_BOX","scissorX","scissorY","scissorWidth","scissorHeight","blendEnabled","BLEND","blendSrcRgb","BLEND_SRC_RGB","blendDstRgb","BLEND_DST_RGB","blendSrcAlpha","BLEND_SRC_ALPHA","blendDstAlpha","BLEND_DST_ALPHA","boundArrayBuffer","ARRAY_BUFFER_BINDING","boundElementArrayBuffer","ELEMENT_ARRAY_BUFFER_BINDING","curProgram","CURRENT_PROGRAM","UNPACK_FLIP_Y_WEBGL","FLOAT","ONE","ONE_MINUS_SRC_ALPHA","STATIC_DRAW","DYNAMIC_DRAW","COLOR_ATTACHMENT0","self","WebGL2RenderingContext","textureUnit","TEXTURE_2D","pname","param","texture2dParams","_getActiveTexture","textureParams","level","internalFormat","widthOrFormat","heightOrType","borderOrSource","format","pixels","internalformat","border","viewport","red","green","blue","clearColor","enable","disable","blend","src","dst","blendFunc","createFramebuffer","framebuffer","bindFramebuffer","FRAMEBUFFER","attachment","framebufferTexture2D","COLOR_BUFFER_BIT","usage","bindBuffer","ARRAY_BUFFER","bufferData","ELEMENT_ARRAY_BUFFER","programUniforms","Map","uniformArgs","_len4","_key4","every","v","isArray","compareArrays","mode","count","vertexArray","RenderTexture","_Texture4","_this12","_getTextureData3","_callee5","_callee5$","_context5","WebGlCoreCtxRenderTexture","_WebGlCoreCtxTexture3","_this13","_onLoadRequest3","_callee6","_this$textureSource2","_context6","WebGlCoreRenderer","_CoreRenderer2","_this14","quadBuffer","bufferMemory","txMemManager","defaultTexture","once","requestRender","contextSpy","antialias","depth","stencil","desynchronized","powerPreference","premultipliedAlpha","preserveDrawingBuffer","getContext","Proxy","increment","String","bind","createWebGLContext","setBlend","maxQuads","indices","Uint16Array","j","elementArrayBufferData","createIndexBuffer","defaultShader","loadShader","BYTES_PER_ELEMENT","quadBufferCollection","a_position","a_textureCoordinate","a_color","a_textureIndex","curBufferIdx","curRenderOp","renderOps","_texture","_textureOptions$flipX","_textureOptions$flipY","fQuadBuffer","uiQuadBuffer","colorTl","colorTr","colorBl","colorBr","textureOptions","tx","ty","ta","tb","tc","td","rtt","targetDims","targetShader","reuseRenderOp","newRenderOp","flipX","flipY","texCoordX1","texCoordY1","texCoordX2","texCoordY2","_texture$props","tw","th","_ref3","_ref3$width","parentW","_ref3$height","parentH","_ref4","_ref5","ctxTexture","getCtxTexture","textureIdx","addTexture","rightCornerX","rightCornerY","recursive","_this$curRenderOp","canBatchShaderProps","_this$quadBufferColle","arr","arrayBufferData","draw","rttNodes","unshift","hasRTTupdates","activeRttNode","renderToTextureActive","w","h","children","child","update","deltaTime","addQuads","render","SpecialCodepoints","SdfFontShaper","_FontShaper","glyphMap","_this15","kernings","kerning","second","first","amount","shapeText","codepoints","codepointResult","lastGlyphId","codepoint","glyph","_this$kernings$glyph$","shapeText$","_context7","peek","done","id","letterSpacing","mapped","glyphId","cluster","lastIndex","xAdvance","xadvance","yAdvance","xOffset","xoffset","yOffset","yoffset","xBearing","yBearing","FontShaper","SdfTrFontFace","_TrFontFace2","atlasUrl","atlasDataUrl","_this16","preload","checkLoaded","fetch","_ref6","_callee7","response","maxCharHeight","_context8","json","chars","charHeight","shaper","_x","loaded","CoreExtension"],"mappings":"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","x_google_ignoreList":[13]}