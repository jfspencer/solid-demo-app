var E=Object.defineProperty;var _=(o,s,e)=>s in o?E(o,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[s]=e;var a=(o,s,e)=>(_(o,typeof s!="symbol"?s+"":s,e),e);class x{constructor(){a(this,"eventListeners",{})}on(s,e){let t=this.eventListeners[s];t||(t=[]),t.push(e),this.eventListeners[s]=t}off(s,e){const t=this.eventListeners[s];if(!t)return;if(!e){delete this.eventListeners[s];return}const n=t.indexOf(e);n>=0&&t.splice(n,1)}once(s,e){const t=(n,r)=>{this.off(s,t),e(n,r)};this.on(s,t)}emit(s,e){const t=this.eventListeners[s];t&&[...t].forEach(n=>{n(this,e)})}removeAllListeners(){this.eventListeners={}}}class f extends x{constructor(e,t){super();a(this,"fontFamily");a(this,"descriptors");a(this,"loaded",!1);this.fontFamily=e,this.descriptors={style:"normal",weight:"normal",stretch:"normal",...t}}static convertToCssFontFaceDescriptors(e){return{style:e.style,weight:typeof e.weight=="number"?"".concat(e.weight):e.weight,stretch:e.stretch,unicodeRange:e.unicodeRange,variant:e.variant,featureSettings:e.featureSettings,display:e.display}}}const I={LINE_FEED:10,CARRIAGE_RETURN:13,SPACE:32,TAB:9,ZERO_WIDTH_SPACE:8203,ZERO_WIDTH_NON_JOINER:8204,ZERO_WIDTH_JOINER:8205,LEFT_TO_RIGHT_MARK:8206,RIGHT_TO_LEFT_MARK:8207,LEFT_TO_RIGHT_EMBEDDING:8234,RIGHT_TO_LEFT_EMBEDDING:8235,POP_DIRECTIONAL_FORMATTING:8236,LEFT_TO_RIGHT_OVERRIDE:8237,RIGHT_TO_LEFT_OVERRIDE:8238,LINE_SEPARATOR:8232,PARAGRAPH_SEPARATOR:8233,OBJECT_REPLACEMENT_CHARACTER:65532,REPLACEMENT_CHARACTER:65533,ZERO_WIDTH_NO_BREAK_SPACE:65279,LEFT_TO_RIGHT_ISOLATE:8294,RIGHT_TO_LEFT_ISOLATE:8295,FIRST_STRONG_ISOLATE:8296,POP_DIRECTIONAL_ISOLATE:8297,INHIBIT_SYMMETRIC_SWAPPING:8298,ACTIVATE_SYMMETRIC_SWAPPING:8299,INHIBIT_ARABIC_FORM_SHAPING:8300,ACTIVATE_ARABIC_FORM_SHAPING:8301,NATIONAL_DIGIT_SHAPES:8302,NOMINAL_DIGIT_SHAPES:8303,LEFT_TO_RIGHT_BOUNDARY:8206,RIGHT_TO_LEFT_BOUNDARY:8207};class R{}class A extends R{constructor(e,t){super();a(this,"data");a(this,"glyphMap");a(this,"kernings");this.data=e,this.glyphMap=t;const n=this.kernings={};e.kernings.forEach(r=>{const i=r.second,c=n[i]=n[i]||{};c[r.first]=r.amount}),this.kernings=n}*shapeText(e,t){var i;let n,r;for(;(n=t.peek())&&!n.done;){const c=n.value,h=this.glyphMap.get(c);if(t.next(),h!==void 0){const d=r!==void 0?(((i=this.kernings[h.id])==null?void 0:i[r])||0)+e.letterSpacing:0;r=h.id,yield{mapped:!0,glyphId:h.id,codepoint:c,cluster:t.lastIndex,xAdvance:h.xadvance+d,yAdvance:0,xOffset:h.xoffset+d,yOffset:h.yoffset,xBearing:0,yBearing:0,width:h.width,height:h.height}}else c===I.LINE_FEED&&(r=void 0),yield{mapped:!1,codepoint:c,cluster:t.lastIndex}}}}class p extends f{constructor(e,t,n,r,i,c){super(e,t);a(this,"type");a(this,"texture");a(this,"maxCharHeight",0);a(this,"data");a(this,"shaper");a(this,"glyphMap",new Map);this.type=n,r.renderer,this.texture=r.txManager.loadTexture("ImageTexture",{src:i,premultiplyAlpha:!1},{preload:!0}),this.texture.on("loaded",()=>{this.checkLoaded()}),fetch(c).then(async h=>{this.data=await h.json();let d=0;this.data.chars.forEach(l=>{this.glyphMap.set(l.id,l);const T=l.yoffset+l.height;T>d&&(d=T)}),this.maxCharHeight=d,this.shaper=new A(this.data,this.glyphMap),this.checkLoaded()}).catch(console.error)}getAtlasEntry(e){const t=this.glyphMap.get(e);if(t===void 0)throw new Error("Glyph ".concat(e," not found in font ").concat(this.fontFamily));return{x:t.x,y:t.y,width:t.width,height:t.height}}checkLoaded(){this.loaded||this.texture.state==="loaded"&&this.data&&(this.loaded=!0,this.emit("loaded"))}}class g extends f{constructor(e,t,n){super(e,t);a(this,"fontFace");a(this,"fontUrl");const r=n.replace(/\(|\)/g,""),i=this.descriptors,c={style:i.style,weight:typeof i.weight=="number"?"".concat(i.weight):i.weight,stretch:i.stretch,unicodeRange:i.unicodeRange,variant:i.variant,featureSettings:i.featureSettings,display:i.display},h=new FontFace(e,"url(".concat(r,")"),c);h.load().then(()=>{this.loaded=!0,this.emit("loaded")}).catch(console.error),this.fontFace=h,this.fontUrl=n}}class O{}export{O as C,x as E,p as S,g as W};
//# sourceMappingURL=CoreExtension-DvJNZNlg.js.map
