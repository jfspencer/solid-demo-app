{"version":3,"file":"CoreExtension-legacy-BFR7w_7i.js","sources":["../../node_modules/.pnpm/@lightningjs+renderer@0.7.4/node_modules/@lightningjs/renderer/dist/src/common/EventEmitter.js","../../node_modules/.pnpm/@lightningjs+renderer@0.7.4/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/TrFontFace.js","../../node_modules/.pnpm/@lightningjs+renderer@0.7.4/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/SpecialCodepoints.js","../../node_modules/.pnpm/@lightningjs+renderer@0.7.4/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/SdfFontShaper.js","../../node_modules/.pnpm/@lightningjs+renderer@0.7.4/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/FontShaper.js","../../node_modules/.pnpm/@lightningjs+renderer@0.7.4/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/SdfTrFontFace.js","../../node_modules/.pnpm/@lightningjs+renderer@0.7.4/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/WebTrFontFace.js","../../node_modules/.pnpm/@lightningjs+renderer@0.7.4/node_modules/@lightningjs/renderer/dist/src/core/CoreExtension.js"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * EventEmitter base class\n */\nexport class EventEmitter {\n    eventListeners = {};\n    on(event, listener) {\n        let listeners = this.eventListeners[event];\n        if (!listeners) {\n            listeners = [];\n        }\n        listeners.push(listener);\n        this.eventListeners[event] = listeners;\n    }\n    off(event, listener) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        if (!listener) {\n            delete this.eventListeners[event];\n            return;\n        }\n        const index = listeners.indexOf(listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n    once(event, listener) {\n        const onceListener = (target, data) => {\n            this.off(event, onceListener);\n            listener(target, data);\n        };\n        this.on(event, onceListener);\n    }\n    emit(event, data) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        [...listeners].forEach((listener) => {\n            listener(this, data);\n        });\n    }\n    removeAllListeners() {\n        this.eventListeners = {};\n    }\n}\n//# sourceMappingURL=EventEmitter.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../../common/EventEmitter.js';\nexport class TrFontFace extends EventEmitter {\n    fontFamily;\n    descriptors;\n    loaded = false;\n    constructor(fontFamily, descriptors) {\n        super();\n        this.fontFamily = fontFamily;\n        this.descriptors = {\n            style: 'normal',\n            weight: 'normal',\n            stretch: 'normal',\n            ...descriptors,\n        };\n    }\n    /**\n     * Convert a TrFontFaceDescriptors to a FontFaceDescriptors which differ slightly\n     *\n     * @param descriptors\n     * @returns\n     */\n    static convertToCssFontFaceDescriptors(descriptors) {\n        return {\n            style: descriptors.style,\n            weight: typeof descriptors.weight === 'number'\n                ? `${descriptors.weight}`\n                : descriptors.weight,\n            stretch: descriptors.stretch,\n            unicodeRange: descriptors.unicodeRange,\n            variant: descriptors.variant,\n            featureSettings: descriptors.featureSettings,\n            display: descriptors.display,\n        };\n    }\n}\n//# sourceMappingURL=TrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const SpecialCodepoints = {\n    LINE_FEED: 0x0a,\n    CARRIAGE_RETURN: 0x0d,\n    SPACE: 0x20,\n    TAB: 0x09,\n    ZERO_WIDTH_SPACE: 0x200b,\n    ZERO_WIDTH_NON_JOINER: 0x200c,\n    ZERO_WIDTH_JOINER: 0x200d,\n    LEFT_TO_RIGHT_MARK: 0x200e,\n    RIGHT_TO_LEFT_MARK: 0x200f,\n    LEFT_TO_RIGHT_EMBEDDING: 0x202a,\n    RIGHT_TO_LEFT_EMBEDDING: 0x202b,\n    POP_DIRECTIONAL_FORMATTING: 0x202c,\n    LEFT_TO_RIGHT_OVERRIDE: 0x202d,\n    RIGHT_TO_LEFT_OVERRIDE: 0x202e,\n    LINE_SEPARATOR: 0x2028,\n    PARAGRAPH_SEPARATOR: 0x2029,\n    OBJECT_REPLACEMENT_CHARACTER: 0xfffc,\n    REPLACEMENT_CHARACTER: 0xfffd,\n    ZERO_WIDTH_NO_BREAK_SPACE: 0xfeff,\n    LEFT_TO_RIGHT_ISOLATE: 0x2066,\n    RIGHT_TO_LEFT_ISOLATE: 0x2067,\n    FIRST_STRONG_ISOLATE: 0x2068,\n    POP_DIRECTIONAL_ISOLATE: 0x2069,\n    INHIBIT_SYMMETRIC_SWAPPING: 0x206a,\n    ACTIVATE_SYMMETRIC_SWAPPING: 0x206b,\n    INHIBIT_ARABIC_FORM_SHAPING: 0x206c,\n    ACTIVATE_ARABIC_FORM_SHAPING: 0x206d,\n    NATIONAL_DIGIT_SHAPES: 0x206e,\n    NOMINAL_DIGIT_SHAPES: 0x206f,\n    LEFT_TO_RIGHT_BOUNDARY: 0x200e,\n    RIGHT_TO_LEFT_BOUNDARY: 0x200f,\n};\n//# sourceMappingURL=SpecialCodepoints.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SpecialCodepoints } from '../../../renderers/SdfTextRenderer/internal/SpecialCodepoints.js';\nimport { FontShaper, } from './FontShaper.js';\nexport class SdfFontShaper extends FontShaper {\n    data;\n    glyphMap;\n    kernings;\n    constructor(data, glyphMap) {\n        super();\n        this.data = data;\n        this.glyphMap = glyphMap;\n        const kernings = (this.kernings = {});\n        data.kernings.forEach((kerning) => {\n            const second = kerning.second;\n            const firsts = (kernings[second] = kernings[second] || {});\n            firsts[kerning.first] = kerning.amount;\n        });\n        this.kernings = kernings;\n    }\n    *shapeText(props, codepoints) {\n        let codepointResult;\n        let lastGlyphId = undefined;\n        while ((codepointResult = codepoints.peek()) && !codepointResult.done) {\n            const codepoint = codepointResult.value;\n            const glyph = this.glyphMap.get(codepoint);\n            codepoints.next();\n            if (glyph !== undefined) {\n                // We found a glyph for this codepoint\n                // Yield the mapped glyph info\n                /**\n                 * Kerning includes any possible additional letter spacing\n                 */\n                const kerning = lastGlyphId !== undefined\n                    ? (this.kernings[glyph.id]?.[lastGlyphId] || 0) +\n                        props.letterSpacing\n                    : 0;\n                lastGlyphId = glyph.id;\n                yield {\n                    mapped: true,\n                    glyphId: glyph.id,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                    xAdvance: glyph.xadvance + kerning,\n                    yAdvance: 0,\n                    xOffset: glyph.xoffset + kerning,\n                    yOffset: glyph.yoffset,\n                    xBearing: 0,\n                    yBearing: 0,\n                    width: glyph.width,\n                    height: glyph.height,\n                };\n            }\n            else {\n                // We didn't find a glyph for this codepoint\n                // Yield the unmapped codepoint info\n                // If this codepoint is a linebreak, we should reset the last glyph id\n                // so that the next glyph will not be kerned with the last glyph of the\n                // previous line.\n                if (codepoint === SpecialCodepoints.LINE_FEED) {\n                    lastGlyphId = undefined;\n                }\n                yield {\n                    mapped: false,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                };\n            }\n        }\n    }\n}\n//# sourceMappingURL=SdfFontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class FontShaper {\n}\n//# sourceMappingURL=FontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// import type { Renderer } from '../../../Renderer';\nimport { assertTruthy } from '../../../../utils.js';\nimport { WebGlCoreRenderer } from '../../../renderers/webgl/WebGlCoreRenderer.js';\nimport { ImageTexture } from '../../../textures/ImageTexture.js';\nimport { TrFontFace } from '../TrFontFace.js';\nimport { SdfFontShaper } from './internal/SdfFontShaper.js';\nexport class SdfTrFontFace extends TrFontFace {\n    type;\n    texture;\n    /**\n     * Height of the tallest character in the font including the whitespace above it\n     */\n    maxCharHeight = 0;\n    data;\n    shaper;\n    glyphMap = new Map();\n    constructor(fontFamily, descriptors, type, stage, atlasUrl, atlasDataUrl) {\n        super(fontFamily, descriptors);\n        this.type = type;\n        const renderer = stage.renderer;\n        assertTruthy(renderer instanceof WebGlCoreRenderer, 'SDF Font Faces can only be used with the WebGL Renderer');\n        this.texture = stage.txManager.loadTexture('ImageTexture', {\n            src: atlasUrl,\n            // IMPORTANT: The SDF shader requires the alpha channel to NOT be\n            // premultiplied on the atlas texture. If it is premultiplied, the\n            // rendering of SDF glyphs (especially single-channel SDF fonts) will\n            // be very jagged.\n            premultiplyAlpha: false,\n        }, {\n            preload: true,\n        });\n        this.texture.on('loaded', () => {\n            this.checkLoaded();\n        });\n        // Set this.data to the fetched data from dataUrl\n        fetch(atlasDataUrl)\n            .then(async (response) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            this.data = await response.json();\n            // Add all the glyphs to the glyph map\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            let maxCharHeight = 0;\n            this.data.chars.forEach((glyph) => {\n                this.glyphMap.set(glyph.id, glyph);\n                const charHeight = glyph.yoffset + glyph.height;\n                if (charHeight > maxCharHeight) {\n                    maxCharHeight = charHeight;\n                }\n            });\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.maxCharHeight = maxCharHeight;\n            // We know `data` is defined here, because we just set it\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.shaper = new SdfFontShaper(this.data, this.glyphMap);\n            this.checkLoaded();\n        })\n            .catch(console.error);\n    }\n    getAtlasEntry(glyphId) {\n        const glyph = this.glyphMap.get(glyphId);\n        if (glyph === undefined) {\n            throw new Error(`Glyph ${glyphId} not found in font ${this.fontFamily}`);\n        }\n        return {\n            x: glyph.x,\n            y: glyph.y,\n            width: glyph.width,\n            height: glyph.height,\n        };\n    }\n    checkLoaded() {\n        if (this.loaded)\n            return;\n        if (this.texture.state === 'loaded' && this.data) {\n            this.loaded = true;\n            this.emit('loaded');\n        }\n    }\n}\n//# sourceMappingURL=SdfTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TrFontFace } from './TrFontFace.js';\nexport class WebTrFontFace extends TrFontFace {\n    fontFace;\n    fontUrl;\n    constructor(fontFamily, descriptors, fontUrl) {\n        super(fontFamily, descriptors);\n        // Filter out parentheses from fontUrl\n        const fontUrlWithoutParentheses = fontUrl.replace(/\\(|\\)/g, '');\n        // Defaults for descriptors resolved in the super constructor\n        const determinedDescriptors = this.descriptors;\n        // Convert TrFontFaceDescriptors to CSS FontFaceDescriptors\n        const cssDescriptors = {\n            style: determinedDescriptors.style,\n            weight: typeof determinedDescriptors.weight === 'number'\n                ? `${determinedDescriptors.weight}`\n                : determinedDescriptors.weight,\n            stretch: determinedDescriptors.stretch,\n            unicodeRange: determinedDescriptors.unicodeRange,\n            variant: determinedDescriptors.variant,\n            featureSettings: determinedDescriptors.featureSettings,\n            display: determinedDescriptors.display,\n        };\n        const fontFace = new FontFace(fontFamily, `url(${fontUrlWithoutParentheses})`, cssDescriptors);\n        fontFace\n            .load()\n            .then(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.loaded = true;\n            this.emit('loaded');\n        })\n            .catch(console.error);\n        this.fontFace = fontFace;\n        this.fontUrl = fontUrl;\n    }\n}\n//# sourceMappingURL=WebTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Base class for Core extensions.\n *\n * @remarks\n * Core extensions are used to extend the Core Renderer with custom code such as\n * custom fonts, custom shaders, custom textures, custom animation functions,\n * and more.\n */\nexport class CoreExtension {\n}\n//# sourceMappingURL=CoreExtension.js.map"],"names":["EventEmitter","_classCallCheck","this","_defineProperty","_createClass","key","value","event","listener","listeners","eventListeners","push","index","indexOf","splice","_this","on","onceListener","target","data","off","_this2","_toConsumableArray","forEach","exports","TrFontFace","_EventEmitter2","fontFamily","descriptors","_this3","_assertThisInitialized","_callSuper","_objectSpread","style","weight","stretch","_inherits","concat","unicodeRange","variant","featureSettings","display","SpecialCodepoints","SdfFontShaper","_FontShaper","glyphMap","_this4","kernings","kerning","second","first","amount","_regeneratorRuntime","mark","shapeText","props","codepoints","codepointResult","lastGlyphId","codepoint","glyph","_this$kernings$glyph$","wrap","shapeText$","_context","prev","next","undefined","peek","done","get","id","letterSpacing","mapped","glyphId","cluster","lastIndex","xAdvance","xadvance","yAdvance","xOffset","xoffset","yOffset","yoffset","xBearing","yBearing","width","height","stop","FontShaper","SdfTrFontFace","_TrFontFace2","type","stage","atlasUrl","atlasDataUrl","_this5","Map","renderer","texture","txManager","loadTexture","src","premultiplyAlpha","preload","checkLoaded","fetch","then","_ref","_callee","response","maxCharHeight","_context2","json","sent","chars","set","charHeight","shaper","_x","apply","arguments","catch","console","error","Error","x","y","loaded","state","emit","_TrFontFace3","WebTrFontFace","fontUrl","_this6","fontUrlWithoutParentheses","replace","determinedDescriptors","cssDescriptors","fontFace","FontFace","load","CoreExtension"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}