{"version":3,"file":"People-legacy-T-mqAYt8.js","sources":["../../src/api/providers/people.js","../../src/pages/People.tsx"],"sourcesContent":["import api, { getImageUrl } from \"..\";\nimport { convertItemsToTiles } from \"../formatters/ItemFormatter\";\n\nexport function minutesToHMM(minutes) {\n  const hours = Math.floor(minutes / 60);\n  const remainingMinutes = minutes % 60;\n  return (\n    hours + \"h \" + (remainingMinutes < 10 ? \"0\" : \"\") + remainingMinutes + \"m\"\n  );\n}\n\nfunction justYear(dateString) {\n  const parts = dateString.split(\"-\");\n  return parts[0];\n}\n\nexport function getCredits({ id }) {\n  return api\n    .get(`/person/${id}/combined_credits`)\n    .then(({ cast }) => convertItemsToTiles(cast.slice(0, 7)));\n}\n\nexport function getInfo({ id }) {\n  return api.get(`/person/${id}`).then((data) => ({\n    backgroundImage: getImageUrl(data.profile_path, \"original\"),\n    heroContent: {\n      title: data.title || data.name,\n      description: data.biography,\n    },\n    ...data,\n  }));\n}\n","import {\n  ElementNode,\n  Text,\n  View,\n  Show,\n  assertTruthy,\n} from \"@lightningtv/solid\";\nimport { Column } from \"@lightningtv/solid/primitives\";\nimport { useParams } from \"@solidjs/router\";\nimport { createResource, onMount } from \"solid-js\";\nimport { TileRow } from \"../components\";\nimport { setGlobalBackground } from \"../state\";\nimport { useNavigate } from \"@solidjs/router\";\nimport theme from \"theme\";\nimport styles from \"../styles\";\nimport * as provider from \"../api/providers/people\";\nimport { Tile } from \"../api/formatters/ItemFormatter\";\n\nconst People = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const [data] = createResource(() => ({ ...params }), provider.getInfo);\n  const [credits] = createResource<any, Tile[]>(\n    () => ({ ...params }),\n    provider.getCredits\n  );\n\n  const Backdrop = {\n    color: \"#000000\",\n    alpha: 0.8,\n    width: 800,\n    height: 440,\n    x: 130,\n    y: 180,\n    borderRadius: 30,\n  };\n\n  function onEnter(this: ElementNode) {\n    let entity = this.children[this.selected || 0];\n    assertTruthy(entity && entity.href);\n    navigate(entity.href);\n  }\n\n  onMount(() => {\n    setGlobalBackground(\"#333333\");\n  });\n\n  return (\n    <Show when={data()} keyed>\n      <View\n        src={data().backgroundImage}\n        width={400}\n        autosize\n        y={0}\n        x={1800}\n        mountX={1}\n      />\n      <View\n        x={150}\n        y={200}\n        width={800}\n        gap={24}\n        style={styles.Column}\n        zIndex={3}\n      >\n        <Text\n          contain=\"width\"\n          fontFamily={\"Roboto\"}\n          style={theme.typography.display2}\n        >\n          {data().name}\n        </Text>\n        <Text contain=\"both\" style={styles.peopleBio}>\n          {data().biography}\n        </Text>\n      </View>\n      <View style={Backdrop} />\n      <Column y={670} x={140} style={styles.Column} scroll=\"none\">\n        <Show when={credits()}>\n          <Text skipFocus style={styles.RowTitle}>\n            Credits\n          </Text>\n          <TileRow autofocus onEnter={onEnter} items={credits()} />\n        </Show>\n      </Column>\n    </Show>\n  );\n};\n\nexport default People;\n"],"names":["getCredits","_ref","id","api","get","concat","then","_ref2","cast","convertItemsToTiles","slice","getInfo","_ref3","data","_objectSpread","backgroundImage","getImageUrl","profile_path","heroContent","title","name","description","biography","People","params","useParams","navigate","useNavigate","_createResource","createResource","provider","_createResource2","_slicedToArray","_createResource3","_createResource4","credits","Backdrop","color","alpha","width","height","x","y","borderRadius","onEnter","entity","children","selected","href","onMount","setGlobalBackground","_$createComponent","Show","when","keyed","View","src","autosize","mountX","gap","style","styles","Column","zIndex","Text","contain","fontFamily","theme","typography","display2","peopleBio","scroll","skipFocus","RowTitle","TileRow","autofocus","items"],"mappings":"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"}