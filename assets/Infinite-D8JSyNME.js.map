{"version":3,"file":"Infinite-D8JSyNME.js","sources":["../../src/pages/Infinite.tsx"],"sourcesContent":["import { createEffect, createSignal, Show } from \"solid-js\";\nimport { ElementNode, View, Text } from \"@lightningtv/solid\";\nimport { Poster } from \"../components\";\nimport { setGlobalBackground } from \"../state\";\nimport { List } from \"@solid-primitives/list\";\n\nconst Loops = (props) => {\n  const [allItems, setAllItems] = createSignal<any[]>([]);\n  const [displayedItems, setDisplayedItems] = createSignal<any[]>([]);\n  const [resetCounter, setResetCounter] = createSignal(1);\n  const displaySize = 5;\n  const bufferSize = 2; // Number of items to load ahead\n  let currentIndex = 0, solidLogo;\n\n  createEffect(() => {\n    // Flatten all rows into a single array, add empty item for initial offscreen item\n    const all = [{}, ...props.data.rows.map((row) => row.items()).flat()];\n    setAllItems(all);\n    setDisplayedItems(all.slice(0, displaySize + bufferSize));\n  });\n\n  function updateDisplayedItems() {\n    const items = allItems();\n    const start = Math.max(currentIndex, 0);\n    const end = Math.min(currentIndex + displaySize + bufferSize, items.length);\n    setDisplayedItems(items.slice(start, end));\n  }\n\n  function reset(_e, elm) {\n    currentIndex = 0;\n    setResetCounter(r => r + 1);\n    updateDisplayedItems();\n    elm.children[1].setFocus();\n    return true;\n  }\n\n  function shiftLeft(_e, elm) {\n    if (currentIndex > 0) {\n      currentIndex = Math.max(0, currentIndex - 1);\n      elm.children[0].setFocus();\n      updateDisplayedItems();\n    }\n    return true;\n  }\n\n  function shiftRight(_e, elm) {\n    if (currentIndex < allItems().length - 1) {\n      currentIndex = Math.min(allItems().length - 1, currentIndex + 1);\n      elm.children[2].setFocus();\n      updateDisplayedItems();\n    }\n    return true;\n  }\n\n  function animateOut(node) {\n    return node\n      .animate({ y: 200, alpha: 0 }, { duration: 500, easing: \"ease-in-out\" })\n      .start()\n      .waitUntilStopped();\n  }\n\n  function animateIn(node) {\n    node.alpha = 0;\n    node.y = -100;\n    return node\n      .animate({ y: 55, alpha: 1 }, { duration: 500, easing: \"ease-in-out\" })\n      .start()\n      .waitUntilStopped();\n  }\n\n  setGlobalBackground(\"#000000\");\n\n  const titleRowStyles = {\n    fontFamily: \"Raleway\",\n    fontSize: 24,\n    height: 32,\n    lineHeight: 32,\n  };\n\n  const withTransition = { x: { duration: 250 }, alpha: { duration: 250 } };\n\n  return (\n    <>\n      <View ref={solidLogo} width={300} height={150} x={162} y={80} zIndex={105}>\n        <Text x={80} fontSize={28} color={0xf6f6f699}>\n          Built With:\n        </Text>\n        <View y={32} src=\"./assets/solidWord.png\" width={280} height={52} />\n        <View x={0} y={110} src=\"./assets/tmdb.png\" width={80} height={41} />\n        <Text x={90} y={110} contain=\"width\" width={160} fontSize={12} color={0xf6f6f699}>\n          This product uses the TMDB API but is not endorsed or certified by TMDB.\n        </Text>\n      </View>\n      \n      <View x={160} y={300} height={300}>\n        <Text style={titleRowStyles}>Infinite Item List</Text>\n        <Show when={resetCounter()} keyed>\n        <View autofocus={allItems()} onDestroy={animateOut}\n          onCreate={animateIn} \n          onFocus={(elm) => elm.children[1]?.setFocus()} \n          onLeft={shiftLeft} onRight={shiftRight} onUp={reset} onDown={reset} y={55}>\n          <List each={displayedItems()}>\n            {(item, index) => {\n              const isEdgeItem = () => index() === 0 || index() === displayedItems().length - 1;\n              return (\n                <Poster\n                  {...item()}\n                  x={index() * 210 - 210}\n                  alpha={isEdgeItem() ? 0 : 1}\n                  transition={withTransition}\n                />\n              );\n            }}\n          </List>\n        </View>\n        </Show>\n      </View>\n    </>\n  );\n};\n\nexport default Loops;\n"],"names":["Loops","props","allItems","setAllItems","createSignal","displayedItems","setDisplayedItems","resetCounter","setResetCounter","displaySize","bufferSize","currentIndex","solidLogo","createEffect","all","data","rows","map","row","items","flat","slice","updateDisplayedItems","start","Math","max","end","min","length","reset","_e","elm","r","children","setFocus","shiftLeft","shiftRight","animateOut","node","animate","y","alpha","duration","easing","waitUntilStopped","animateIn","setGlobalBackground","titleRowStyles","fontFamily","fontSize","height","lineHeight","withTransition","x","_$createComponent","View","ref","r$","_ref$","width","zIndex","Text","color","src","contain","style","Show","when","keyed","autofocus","onDestroy","onCreate","onFocus","onLeft","onRight","onUp","onDown","List","each","item","index","isEdgeItem","Poster","_$mergeProps","transition"],"mappings":"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"}