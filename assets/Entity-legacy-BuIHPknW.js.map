{"version":3,"file":"Entity-legacy-BuIHPknW.js","sources":["../../src/api/providers/entity.js","../../src/pages/Entity.tsx"],"sourcesContent":["import api, { getImageUrl } from \"..\";\nimport { convertItemsToTiles } from \"../formatters/ItemFormatter\";\n\nexport function minutesToHMM(minutes) {\n  const hours = Math.floor(minutes / 60);\n  const remainingMinutes = minutes % 60;\n  return (\n    hours + \"h \" + (remainingMinutes < 10 ? \"0\" : \"\") + remainingMinutes + \"min\"\n  );\n}\n\nfunction formatDate(dateString) {\n  const parts = dateString.split(\"-\");\n  return parts[1] + \"/\" + parts[2] + \"/\" + parts[0];\n}\n\nfunction justYear(dateString) {\n  const parts = dateString.split(\"-\");\n  return parts[0];\n}\n\nexport function getRecommendations({ type, id }) {\n  return api.get(`/${type}/${id}/recommendations`).then(({ results }) => {\n    if (results.length) {\n      return convertItemsToTiles(results.slice(0, 7));\n    }\n    return api\n      .get(`/trending/${type}/week?page=1`)\n      .then(({ results }) => convertItemsToTiles(results.slice(0, 7)));\n  });\n}\n\nexport function getCredits({ type, id }) {\n  return api\n    .get(`/${type}/${id}/credits`)\n    .then(({ cast }) => convertItemsToTiles(cast.slice(0, 7)));\n}\n\nexport function getInfo({ type, id }) {\n  let rt =\n    type === \"movie\"\n      ? {\n          rtCrit: 86,\n          rtFan: 92,\n        }\n      : {};\n\n  return api.get(`/${type}/${id}`).then((data) => ({\n    backgroundImage: getImageUrl(data.backdrop_path, \"w1280\"),\n    heroContent: {\n      title: data.title || data.name,\n      description: data.overview,\n      badges: [\"HD\", \"CC\"],\n      voteAverage: data.vote_average,\n      voteCount: data.vote_count,\n      metaText:\n        type === \"movie\"\n          ? minutesToHMM(data.runtime) + \"   \" + formatDate(data.release_date)\n          : `${justYear(data.first_air_date)} - ${justYear(data.last_air_date)}`,\n      reviews: rt,\n    },\n    ...data,\n  }));\n}\n","import {\n  ElementNode,\n  Text,\n  View,\n  Show,\n  assertTruthy,\n  setActiveElement,\n} from \"@lightningtv/solid\";\nimport { Column, Button, Row } from \"@lightningtv/solid-ui\";\nimport { useParams } from \"@solidjs/router\";\nimport { createEffect, createResource, on, createSignal } from \"solid-js\";\nimport { TileRow } from \"../components\";\nimport { setGlobalBackground } from \"../state\";\nimport ContentBlock from \"../components/ContentBlock\";\nimport { useNavigate } from \"@solidjs/router\";\nimport styles from \"../styles\";\nimport * as provider from \"../api/providers/entity\";\nimport type { Tile } from \"../api/formatters/ItemFormatter\";\n// import { playVideo, closeVideo } from \"../video\";\n\nconst Entity = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const [data] = createResource(() => ({ ...params }), provider.getInfo);\n  const [credits] = createResource<any, Tile[]>(\n    () => ({ ...params }),\n    provider.getCredits\n  );\n  const [recommendations] = createResource<any, Tile[]>(\n    () => ({ ...params }),\n    provider.getRecommendations\n  );\n  const [backdropAlpha, setBackdropAlpha] = createSignal(0);\n\n  createEffect(\n    on(\n      data,\n      (data) => {\n        setGlobalBackground(data.backgroundImage);\n      },\n      { defer: true }\n    )\n  );\n\n  const columnY = 640;\n\n  const Backdrop = {\n    color: \"#000000\",\n    alpha: 0,\n    width: 1900,\n    height: 890,\n    x: -160,\n    y: columnY,\n    borderRadius: 30,\n  };\n\n  function onRowFocus(this: ElementNode) {\n    this.children[this.selected || 0].setFocus();\n    columnRef.y = columnY;\n    backdropRef.y = columnY;\n    backdropRef.alpha = 0;\n  }\n\n  function onRowFocusAnimate(this: ElementNode) {\n    this.children[this.selected || 0].setFocus();\n    columnRef.y = 200;\n    backdropRef.y = 160;\n    backdropRef.alpha = 0.9;\n  }\n\n  function onEnter(this: ElementNode) {\n    let entity = this.children.find((c) => c.states!.has(\"focus\"));\n    assertTruthy(entity && entity.href);\n    navigate(entity.href);\n  }\n\n  function onEscape() {\n    return;\n    closeVideo();\n    // Set focus back to lightning app\n    document.getElementsByTagName(\"canvas\")[0].focus();\n    entityActions.setFocus();\n    setBackdropAlpha(0);\n  }\n\n  function onEnterTrailer() {\n    return;\n    const video = playVideo();\n    setActiveElement(video);\n    setBackdropAlpha(0.9);\n  }\n\n  let columnRef, backdropRef, entityActions;\n\n  /**\n   * I used to have keyed on Show - This would cause the entire tree to be destroyed and recreated. Without keyed, the data is diffed and the nodes are reused and passed in new props.\n   * Only one element gets deleted and recreated - a text node for reviews.\n   *\n   * However this causes problems with elements which have internal state like Row & Column because the selected does not get reset.\n   */\n  return (\n    <Show when={data()}>\n      <View x={170} onUp={() => entityActions.setFocus()} onEscape={onEscape}>\n        <ContentBlock y={260} content={data().heroContent}></ContentBlock>\n        <Row\n          ref={entityActions}\n          y={500}\n          scroll=\"none\"\n          height={90}\n          width={640}\n          gap={40}\n          onDown={() => columnRef.setFocus()}\n          onEnter={onEnterTrailer}\n        >\n          <Button width={300} autofocus={data()}>\n            Play\n          </Button>\n          <Button width={300}>Resume</Button>\n        </Row>\n\n        <Column\n          ref={columnRef}\n          x={0}\n          y={columnY}\n          style={styles.Column}\n          height={880}\n          scroll=\"none\"\n          zIndex={5}\n        >\n          <Show when={recommendations() && credits()}>\n            <Text skipFocus style={styles.RowTitle}>\n              Recommendations\n            </Text>\n            <TileRow\n              onFocus={onRowFocus}\n              onEnter={onEnter}\n              items={recommendations()}\n              width={1620}\n            />\n            <Text skipFocus style={styles.RowTitle}>\n              Cast and Crew\n            </Text>\n            <TileRow\n              onFocus={onRowFocusAnimate}\n              onEnter={onEnter}\n              items={credits()}\n              width={1620}\n            />\n          </Show>\n        </Column>\n        <View\n          ref={backdropRef}\n          style={Backdrop}\n          transition={{ alpha: true, y: true }}\n        />\n      </View>\n      <View\n        alpha={backdropAlpha()}\n        color={\"#000000\"}\n        skipFocus\n        zIndex={200}\n        transition={{ alpha: true }}\n      />\n    </Show>\n  );\n};\n\nexport default Entity;\n"],"names":["minutesToHMM","minutes","hours","Math","floor","remainingMinutes","formatDate","dateString","parts","split","justYear","getRecommendations","_ref","type","id","api","get","concat","then","_ref2","results","length","convertItemsToTiles","slice","_ref3","getCredits","_ref4","_ref5","cast","getInfo","_ref6","rt","rtCrit","rtFan","data","_objectSpread","backgroundImage","getImageUrl","backdrop_path","heroContent","title","name","description","overview","badges","voteAverage","vote_average","voteCount","vote_count","metaText","runtime","release_date","first_air_date","last_air_date","reviews","Entity","params","useParams","navigate","useNavigate","_createResource","createResource","provider","_createResource2","_slicedToArray","_createResource3","_createResource4","credits","_createResource5","_createResource6","recommendations","_createSignal","createSignal","_createSignal2","backdropAlpha","setBackdropAlpha","on","setGlobalBackground","defer","columnY","Backdrop","color","alpha","width","height","x","y","borderRadius","onRowFocus","children","selected","setFocus","columnRef","backdropRef","onRowFocusAnimate","onEnter","entity","find","c","states","has","href","onEscape","onEnterTrailer","entityActions","_$createComponent","Show","when","View","onUp","ContentBlock","content","Row","ref","r$","_ref$","scroll","gap","onDown","Button","autofocus","Column","_ref$2","style","styles","zIndex","_$memo","Text","skipFocus","RowTitle","TileRow","onFocus","items","_ref$3","transition"],"mappings":"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"}