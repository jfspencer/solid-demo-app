{"version":3,"file":"Entity-Dc3fE06P.js","sources":["../../src/api/providers/entity.js","../../src/pages/Entity.tsx"],"sourcesContent":["import api, { getImageUrl } from \"..\";\nimport { convertItemsToTiles } from \"../formatters/ItemFormatter\";\n\nexport function minutesToHMM(minutes) {\n  const hours = Math.floor(minutes / 60);\n  const remainingMinutes = minutes % 60;\n  return (\n    hours + \"h \" + (remainingMinutes < 10 ? \"0\" : \"\") + remainingMinutes + \"min\"\n  );\n}\n\nfunction formatDate(dateString) {\n  const parts = dateString.split(\"-\");\n  return parts[1] + \"/\" + parts[2] + \"/\" + parts[0];\n}\n\nfunction justYear(dateString) {\n  const parts = dateString.split(\"-\");\n  return parts[0];\n}\n\nexport function getRecommendations({ type, id }) {\n  return api.get(`/${type}/${id}/recommendations`).then(({ results }) => {\n    if (results.length) {\n      return convertItemsToTiles(results.slice(0, 7));\n    }\n    return api\n      .get(`/trending/${type}/week?page=1`)\n      .then(({ results }) => convertItemsToTiles(results.slice(0, 7)));\n  });\n}\n\nexport function getCredits({ type, id }) {\n  return api\n    .get(`/${type}/${id}/credits`)\n    .then(({ cast }) => convertItemsToTiles(cast.slice(0, 7)));\n}\n\nexport function getInfo({ type, id }) {\n  let rt =\n    type === \"movie\"\n      ? {\n          rtCrit: 86,\n          rtFan: 92,\n        }\n      : {};\n\n  return api.get(`/${type}/${id}`).then((data) => ({\n    backgroundImage: getImageUrl(data.backdrop_path, \"w1280\"),\n    heroContent: {\n      title: data.title || data.name,\n      description: data.overview,\n      badges: [\"HD\", \"CC\"],\n      voteAverage: data.vote_average,\n      voteCount: data.vote_count,\n      metaText:\n        type === \"movie\"\n          ? minutesToHMM(data.runtime) + \"   \" + formatDate(data.release_date)\n          : `${justYear(data.first_air_date)} - ${justYear(data.last_air_date)}`,\n      reviews: rt,\n    },\n    ...data,\n  }));\n}\n","import {\n  ElementNode,\n  Text,\n  View,\n  Show,\n  assertTruthy,\n  setActiveElement,\n} from \"@lightningtv/solid\";\nimport { Column, Button, Row } from \"@lightningtv/solid-ui\";\nimport { useParams } from \"@solidjs/router\";\nimport { createEffect, createResource, on, createSignal } from \"solid-js\";\nimport { TileRow } from \"../components\";\nimport { setGlobalBackground } from \"../state\";\nimport ContentBlock from \"../components/ContentBlock\";\nimport { useNavigate } from \"@solidjs/router\";\nimport styles from \"../styles\";\nimport * as provider from \"../api/providers/entity\";\nimport type { Tile } from \"../api/formatters/ItemFormatter\";\nimport { playVideo, closeVideo } from \"../video\";\n\nconst Entity = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const [data] = createResource(() => ({ ...params }), provider.getInfo);\n  const [credits] = createResource<any, Tile[]>(\n    () => ({ ...params }),\n    provider.getCredits\n  );\n  const [recommendations] = createResource<any, Tile[]>(\n    () => ({ ...params }),\n    provider.getRecommendations\n  );\n  const [backdropAlpha, setBackdropAlpha] = createSignal(0);\n\n  createEffect(\n    on(\n      data,\n      (data) => {\n        setGlobalBackground(data.backgroundImage);\n      },\n      { defer: true }\n    )\n  );\n\n  const columnY = 640;\n\n  const Backdrop = {\n    color: \"#000000\",\n    alpha: 0,\n    width: 1900,\n    height: 890,\n    x: -160,\n    y: columnY,\n    borderRadius: 30,\n  };\n\n  function onRowFocus(this: ElementNode) {\n    this.children[this.selected || 0].setFocus();\n    columnRef.y = columnY;\n    backdropRef.y = columnY;\n    backdropRef.alpha = 0;\n  }\n\n  function onRowFocusAnimate(this: ElementNode) {\n    this.children[this.selected || 0].setFocus();\n    columnRef.y = 200;\n    backdropRef.y = 160;\n    backdropRef.alpha = 0.9;\n  }\n\n  function onEnter(this: ElementNode) {\n    let entity = this.children.find((c) => c.states!.has(\"focus\"));\n    assertTruthy(entity && entity.href);\n    navigate(entity.href);\n  }\n\n  function onEscape() {\n    closeVideo();\n    // Set focus back to lightning app\n    document.getElementsByTagName(\"canvas\")[0].focus();\n    entityActions.setFocus();\n    setBackdropAlpha(0);\n  }\n\n  function onEnterTrailer() {\n    const video = playVideo();\n    setActiveElement(video);\n    setBackdropAlpha(0.9);\n  }\n\n  let columnRef, backdropRef, entityActions;\n\n  /**\n   * I used to have keyed on Show - This would cause the entire tree to be destroyed and recreated. Without keyed, the data is diffed and the nodes are reused and passed in new props.\n   * Only one element gets deleted and recreated - a text node for reviews.\n   *\n   * However this causes problems with elements which have internal state like Row & Column because the selected does not get reset.\n   */\n  return (\n    <Show when={data()}>\n      <View x={170} onUp={() => entityActions.setFocus()} onEscape={onEscape}>\n        <ContentBlock y={260} content={data().heroContent}></ContentBlock>\n        <Row\n          ref={entityActions}\n          y={500}\n          scroll=\"none\"\n          height={90}\n          width={640}\n          gap={40}\n          onDown={() => columnRef.setFocus()}\n          onEnter={onEnterTrailer}\n        >\n          <Button width={300} autofocus={data()}>\n            Play\n          </Button>\n          <Button width={300}>Resume</Button>\n        </Row>\n\n        <Column\n          ref={columnRef}\n          x={0}\n          y={columnY}\n          style={styles.Column}\n          height={880}\n          scroll=\"none\"\n          zIndex={5}\n        >\n          <Show when={recommendations() && credits()}>\n            <Text skipFocus style={styles.RowTitle}>\n              Recommendations\n            </Text>\n            <TileRow\n              onFocus={onRowFocus}\n              onEnter={onEnter}\n              items={recommendations()}\n              width={1620}\n            />\n            <Text skipFocus style={styles.RowTitle}>\n              Cast and Crew\n            </Text>\n            <TileRow\n              onFocus={onRowFocusAnimate}\n              onEnter={onEnter}\n              items={credits()}\n              width={1620}\n            />\n          </Show>\n        </Column>\n        <View\n          ref={backdropRef}\n          style={Backdrop}\n          transition={{ alpha: true, y: true }}\n        />\n      </View>\n      <View\n        alpha={backdropAlpha()}\n        color={\"#000000\"}\n        skipFocus\n        zIndex={200}\n        transition={{ alpha: true }}\n      />\n    </Show>\n  );\n};\n\nexport default Entity;\n"],"names":["minutesToHMM","minutes","hours","remainingMinutes","formatDate","dateString","parts","justYear","getRecommendations","type","id","api","results","convertItemsToTiles","getCredits","cast","getInfo","rt","data","getImageUrl","Entity","params","useParams","navigate","useNavigate","createResource","provider","credits","recommendations","backdropAlpha","setBackdropAlpha","createSignal","on","setGlobalBackground","backgroundImage","defer","columnY","Backdrop","color","alpha","width","height","x","y","borderRadius","onRowFocus","children","selected","setFocus","columnRef","backdropRef","onRowFocusAnimate","onEnter","entity","find","c","states","has","href","onEscape","closeVideo","document","getElementsByTagName","focus","entityActions","onEnterTrailer","video","playVideo","setActiveElement","_$createComponent","Show","when","View","onUp","ContentBlock","content","heroContent","Row","ref","r$","_ref$","scroll","gap","onDown","Button","autofocus","Column","_ref$2","style","styles","zIndex","_$memo","Text","skipFocus","RowTitle","TileRow","onFocus","items","_ref$3","transition"],"mappings":"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"}