{"version":3,"file":"Loops-CGGfz5Zc.js","sources":["../../node_modules/.pnpm/@lightningtv+solid@2.7.8_@lightningjs+renderer@2.13.0_@solidjs+router@0.15.3_patch_hash=hnhvc_j2dbu7s43oiapm3sbrx6morz7u/node_modules/@lightningtv/solid/src/primitives/LazyUp.tsx","../../src/pages/Loops.tsx"],"sourcesContent":["import {\n  Index,\n  createEffect,\n  createMemo,\n  createSignal,\n  splitProps,\n  Show,\n  type JSX,\n  type ValidComponent,\n} from 'solid-js';\nimport { Dynamic, type ElementNode } from '@lightningtv/solid';\n\nexport function LazyUp<T extends readonly any[], U extends JSX.Element>(\n  props: T &\n    ElementNode & {\n      each: T | undefined | null | false;\n      fallback?: JSX.Element;\n      container?: JSX.Element;\n      component?: ValidComponent;\n      direction?: 'row' | 'column';\n      upCount: number;\n      children: (item: T[number], index: number) => U;\n    },\n) {\n  const [p, others] = splitProps(props, [\n    'component',\n    'each',\n    'fallback',\n    'children',\n  ]);\n\n  const [offset, setOffset] = createSignal(0);\n\n  createEffect(() => {\n    setOffset(props.selected || 0);\n  });\n\n  const items = createMemo(() => {\n    if (p.each) {\n      return p.each.slice(0, props.upCount + offset());\n    }\n  });\n\n  console.log('LazyUp is deprecated. Please use LazyRow or LazyColumn instead.');\n\n  const isRow = createMemo(() => {\n    return (\n      others.direction !== undefined && others.direction === 'row' ||\n      others.style?.flexDirection === 'row' ||\n      others.flexDirection === 'row'\n    );\n  });\n\n  const keyHandlers = createMemo(() => {\n    const updateOffset = () => {\n      setOffset(\n        (prev) => p.each && Math.min(prev + 1, p.each.length - props.upCount),\n      );\n    };\n\n    return isRow() ? { onRight: updateOffset } : { onDown: updateOffset };\n  });\n\n  return (\n    <Show when={items()}>\n      <Dynamic component={p.component} {...others} {...keyHandlers()}>\n        <Index each={items()} fallback={p.fallback} children={p.children} />\n      </Dynamic>\n    </Show>\n  );\n}\n","import { createEffect, on, createSignal, For, Index } from \"solid-js\";\nimport { ElementNode, View, Text } from \"@lightningtv/solid\";\nimport { LazyUp, Column, Row } from \"@lightningtv/solid/primitives\";\nimport { List } from \"@solid-primitives/list\";\nimport { Poster } from \"../components\";\nimport { setGlobalBackground } from \"../state\";\n\nconst Loops = (props) => {\n  const [activeRow, setActiveRow] = createSignal(props.data.rows[0]);\n\n  let contentBlock, currentIndex = 0,\n    solidLogo;\n\n    setGlobalBackground(\"#000000\");\n\n  const titleRowStyles = {\n    fontFamily: \"Raleway\",\n    fontSize: 24,\n    height: 32,\n    lineHeight: 32,\n  };\n\n  function switchRow(e) {\n    if (e.key === \"[\") {\n      currentIndex = Math.max(0, currentIndex - 1);\n    }\n    if (e.key === \"]\") {\n      currentIndex = Math.min(props.data.rows.length - 1, currentIndex + 1);\n    }\n\n    if (e.key === \"\\\\\") {\n      const row = props.data.rows[0];\n      const items = row.items().slice().reverse();\n      row.setItems(items);\n      return;\n    }\n\n    setActiveRow(props.data.rows[currentIndex]);\n  }\n\n  return (\n    <>\n      <View\n        ref={solidLogo}\n        width={300}\n        height={150}\n        x={162}\n        y={80}\n        zIndex={105}\n      >\n        <Text x={80} fontSize={28} color={0xf6f6f699}>\n          Built With:\n        </Text>\n        <View y={32} src=\"./assets/solidWord.png\" width={280} height={52} />\n\n        <View x={0} y={110} src=\"./assets/tmdb.png\" width={80} height={41} />\n        <Text\n          x={90}\n          y={110}\n          contain=\"width\"\n          width={160}\n          fontSize={12}\n          color={0xf6f6f699}\n        >\n          This product uses the TMDB API but is not endorsed or certified by\n          TMDB.\n        </Text>\n      </View>\n      <Column autofocus={activeRow()?.items()} y={240} onKeyPress={switchRow}>\n        <View x={160} height={300} forwardFocus={1} marginTop={30}>\n          <Text skipFocus style={titleRowStyles}>\n            For Loop\n          </Text>\n          <Row gap={20} y={40} display=\"block\">\n            <For each={activeRow()?.items()}>\n            {(item, index) => (\n              <Poster x={index() * 210} {...item} />\n            )}\n            </For>\n          </Row>\n        </View>\n\n        <View x={160} height={300} forwardFocus={1} marginTop={30}>\n          <Text skipFocus style={titleRowStyles}>\n            Map Loop\n          </Text>\n          <Row gap={20} y={40} display=\"block\">\n            {activeRow()?.items()?.map((item, index) => (\n              <Poster x={index * 210} {...item} />\n            ))}\n          </Row>\n        </View>\n        \n\n        <View x={160} height={300} forwardFocus={1} marginTop={30}>\n          <Text skipFocus style={titleRowStyles}>\n            Index Loop\n          </Text>\n          <Row gap={20} y={40} display=\"block\">\n            <Index each={activeRow()?.items()}>\n            {(item, index) => (\n              <Poster x={index * 210} {...item()} />\n            )}\n            </Index>\n          </Row>\n        </View>\n\n        <View x={160} height={300} forwardFocus={1} marginTop={30}>\n          <Text skipFocus style={titleRowStyles}>\n            LazyUp Loop\n          </Text>\n          <LazyUp\n            component={Row}\n            direction=\"row\"\n            display=\"block\"\n            gap={20}\n            upCount={5}\n            each={activeRow()?.items()}\n            y={50}\n          >\n            {(item, index) => (\n              <Poster x={index * 210} {...item()} />\n            )}\n          </LazyUp>\n        </View>\n\n        <View x={160} height={300} forwardFocus={1} marginTop={30}>\n          <Text skipFocus style={titleRowStyles}>\n            List Loop\n          </Text>\n          <Row gap={20} y={40} display=\"block\">\n            <List each={activeRow()?.items()}>\n            {(item, index) => (\n              <Poster x={index() * 210} {...item()} transition={{ x: { duration: 5550 } }} />\n            )}\n            </List>\n          </Row>\n        </View>\n      </Column>\n    </>\n  );\n};\n\nexport default Loops;\n"],"names":["LazyUp","props","p","others","splitProps","offset","setOffset","createSignal","createEffect","selected","items","createMemo","each","slice","upCount","console","log","isRow","direction","undefined","style","flexDirection","keyHandlers","updateOffset","prev","Math","min","length","onRight","onDown","_$createComponent","Show","when","children","Dynamic","_$mergeProps","component","Index","fallback","Loops","activeRow","setActiveRow","data","rows","contentBlock","currentIndex","solidLogo","setGlobalBackground","titleRowStyles","fontFamily","fontSize","height","lineHeight","switchRow","e","key","max","row","reverse","setItems","View","ref","r$","_ref$","width","x","y","zIndex","Text","color","src","contain","Column","autofocus","onKeyPress","forwardFocus","marginTop","skipFocus","Row","gap","display","For","item","index","Poster","map","List","transition","duration"],"mappings":"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","x_google_ignoreList":[0]}