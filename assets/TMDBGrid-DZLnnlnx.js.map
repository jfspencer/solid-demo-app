{"version":3,"file":"TMDBGrid-DZLnnlnx.js","sources":["../../node_modules/.pnpm/@lightningtv+solid@2.7.8_@lightningjs+renderer@2.13.0_@solidjs+router@0.15.3_patch_hash=hnhvc_j2dbu7s43oiapm3sbrx6morz7u/node_modules/@lightningtv/solid/src/primitives/Grid.tsx","../../src/pages/TMDBGrid.tsx"],"sourcesContent":["import { ValidComponent, For, createSignal, createMemo } from \"solid-js\";\nimport { View, Dynamic, type NodeProps, type ElementNode, isFunction } from \"@lightningtv/solid\";\n\nexport const Grid = <T,>(props: {\n  item: ValidComponent;\n  itemHeight?: number;\n  itemWidth?: number;\n  itemOffset?: number;\n  items: T[];\n  columns?: number;\n  looping?: boolean;\n  scroll?: \"auto\" | \"none\";\n  onSelectedChanged?: (index: number, grid: ElementNode, elm?: ElementNode) => void;\n} & NodeProps) => {\n  const [focusedIndex, setFocusedIndex] = createSignal(0);\n  const baseColumns = 4;\n\n  const columns = createMemo(() => props.columns || baseColumns);\n  const totalWidth = createMemo(() => (props.itemWidth ?? 300) + (props.itemOffset ?? 0));\n  const totalHeight = createMemo(() => (props.itemHeight ?? 300) + (props.itemOffset ?? 0));\n\n  const moveFocus = (delta: number, elm: ElementNode) => {\n    if (!props.items || props.items.length === 0) return false;\n    const newIndex = focusedIndex() + delta;\n\n    if (newIndex >= 0 && newIndex < props.items.length) {\n      setFocusedIndex(newIndex);\n    } else if (props.looping) {\n      const totalItems = props.items.length;\n      if (delta < 0) {\n        const lastRowStart = totalItems - (totalItems % columns()) || totalItems - columns();\n        const target = lastRowStart + (focusedIndex() % columns());\n        setFocusedIndex(target < totalItems ? target : target - columns());\n      } else {\n        setFocusedIndex(focusedIndex() % columns());\n      }\n    } else {\n      return false;\n    }\n    const focusedElm = elm.children[focusedIndex()] as ElementNode;\n    focusedElm.setFocus();\n    isFunction(props.onSelectedChanged) && props.onSelectedChanged.call(elm, focusedIndex(), elm, focusedElm);\n    return true;\n  };\n\n  const handleHorizontalFocus = (delta: number, elm: ElementNode) => {\n    if (!props.items || props.items.length === 0) return false;\n    const newIndex = focusedIndex() + delta;\n    const isWithinRow = Math.floor(newIndex / columns()) === Math.floor(focusedIndex() / columns());\n\n    if (newIndex >= 0 && newIndex < props.items.length && isWithinRow) {\n      setFocusedIndex(newIndex);\n    } else if (props.looping) {\n      const rowStart = Math.floor(focusedIndex() / columns()) * columns();\n      const rowEnd = Math.min(rowStart + columns() - 1, props.items.length - 1);\n      setFocusedIndex(delta > 0 ? (newIndex > rowEnd ? rowStart : newIndex) : newIndex < rowStart ? rowEnd : newIndex);\n    } else {\n      return false;\n    }\n    const focusedElm = elm.children[focusedIndex()] as ElementNode;\n    focusedElm.setFocus();\n    isFunction(props.onSelectedChanged) && props.onSelectedChanged.call(elm, focusedIndex(), elm, focusedElm);\n    return true;\n  };\n\n  function onFocus(this: ElementNode) {\n    handleHorizontalFocus(0, this);\n  }\n\n  const scrollY = createMemo(() =>\n    props.scroll === \"none\" ? props.y ?? 0 : -Math.floor(focusedIndex() / columns()) * totalHeight() + (props.y || 0)\n  );\n\n  return (\n    <View\n      transition={{ y: true }}\n      {...props}\n      onUp={(_e, elm) => moveFocus(-columns(), elm)}\n      onDown={(_e, elm) => moveFocus(columns(), elm)}\n      onLeft={(_e, elm) => handleHorizontalFocus(-1, elm)}\n      onRight={(_e, elm) => handleHorizontalFocus(1, elm)}\n      onFocus={onFocus}\n      strictBounds={false}\n      y={scrollY()}\n    >\n      <For each={props.items}>\n        {(item, index) => (\n          <Dynamic\n            {...item}\n            component={props.item}\n            width={props.itemWidth}\n            height={props.itemHeight}\n            x={(index() % columns()) * totalWidth()}\n            y={Math.floor(index() / columns()) * totalHeight()}\n          />\n        )}\n      </For>\n    </View>\n  );\n};\n\n","import { createEffect, on, createSignal, createMemo } from \"solid-js\";\nimport { ElementNode, activeElement, View, Text, NodeProps } from \"@lightningtv/solid\";\nimport { Grid } from \"@lightningtv/solid/primitives\";\nimport { setGlobalBackground } from \"../state\";\nimport ContentBlock from \"../components/ContentBlock\";\nimport { debounce } from \"@solid-primitives/scheduled\";\nimport { Poster } from \"../components\";\n\nconst TMDB = (props) => {\n  const [heroContent, setHeroContent] = createSignal({});\n  let contentBlock,\n    solidLogo,\n    firstRun = true;\n\n  const delayedBackgrounds = debounce(setGlobalBackground, 800);\n  const delayedHero = debounce(\n    (content: {}) => setHeroContent(content || {}),\n    600\n  );\n\n  createEffect(\n    on(\n      activeElement,\n      (elm) => {\n        if (!elm) return;\n\n        if (firstRun) {\n          elm.backdrop && setGlobalBackground(elm.backdrop);\n          elm.heroContent && setHeroContent(elm.heroContent);\n          firstRun = false;\n        } else {\n          elm.backdrop && delayedBackgrounds(elm.backdrop);\n          elm.heroContent && delayedHero(elm.heroContent);\n        }\n      },\n      { defer: true }\n    )\n  );\n\n  function onSelectedChanged(this: ElementNode, selectedIndex, column, row) {\n    const values =\n      selectedIndex === 0 ? { y: 300, alpha: 1 } : { y: 200, alpha: 0 };\n    contentBlock\n      .animate(values, { duration: 300, easing: \"ease-in-out\" })\n      .start();\n\n    const values2 =\n      selectedIndex === 0 ? { y: 80, alpha: 1 } : { y: 0, alpha: 0 };\n    solidLogo\n      .animate(values2, { duration: 300, easing: \"ease-in-out\" })\n      .start();\n  }\n\n  const items = createMemo(() => {\n    return props.data.rows.map((row) => row.items()).flat();\n  });\n\n  return (\n    <>\n      <View\n        ref={solidLogo}\n        width={300}\n        height={150}\n        x={162}\n        y={80}\n        zIndex={105}\n      >\n        <Text x={80} fontSize={28} color={0xf6f6f699}>\n          Built with\n        </Text>\n        <View y={32} src=\"./assets/solidWord.png\" width={280} height={52} />\n\n        <View x={0} y={110} src=\"./assets/tmdb.png\" width={80} height={41} />\n        <Text\n          x={90}\n          y={110}\n          contain=\"width\"\n          width={160}\n          fontSize={12}\n          color={0xf6f6f699}\n        >\n          This product uses the TMDB API but is not endorsed or certified by\n          TMDB.\n        </Text>\n      </View>\n\n      <ContentBlock\n        ref={contentBlock}\n        y={300}\n        x={162}\n        content={heroContent()}\n      />\n      <View x={165} y={540} clipping>\n        <Grid\n          x={12}\n          y={12}\n          autofocus={items()}\n          item={Poster}\n          itemWidth={200}\n          items={items()}\n          columns={6}\n          itemOffset={36}\n        />\n      </View>\n    </>\n  );\n};\n\nexport default TMDB;\n"],"names":["Grid","props","focusedIndex","setFocusedIndex","createSignal","baseColumns","columns","createMemo","totalWidth","itemWidth","itemOffset","totalHeight","itemHeight","moveFocus","delta","elm","items","length","newIndex","looping","totalItems","lastRowStart","target","focusedElm","children","setFocus","onSelectedChanged","call","handleHorizontalFocus","isWithinRow","Math","floor","rowStart","rowEnd","min","onFocus","scrollY","scroll","y","_$createComponent","View","_$mergeProps","transition","onUp","_e","onDown","onLeft","onRight","strictBounds","For","each","item","index","Dynamic","component","width","height","x","TMDB","heroContent","setHeroContent","contentBlock","solidLogo","firstRun","delayedBackgrounds","debounce","setGlobalBackground","delayedHero","content","on","activeElement","backdrop","defer","data","rows","map","row","flat","ref","r$","_ref$","zIndex","Text","fontSize","color","src","contain","ContentBlock","_ref$2","clipping","autofocus","Poster"],"mappings":"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","x_google_ignoreList":[0]}