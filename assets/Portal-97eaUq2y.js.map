{"version":3,"file":"Portal-97eaUq2y.js","sources":["../../src/pages/Portal.tsx"],"sourcesContent":["import { createSignal, createSelector, For } from \"solid-js\";\nimport { ElementNode, View, Text, assertTruthy } from \"@lightningtv/solid\";\nimport { Column, Row } from \"@lightningtv/solid-ui\";\nimport { useNavigate } from \"@solidjs/router\";\nimport styles from \"../styles\";\n\nconst Portal = () => {\n  const navigate = useNavigate();\n  const isFirst = createSelector(() => {\n    return 0;\n  });\n\n  function onEnter(this: ElementNode) {\n    let entity = this.children[this.selected || 0];\n    assertTruthy(entity && entity.id);\n    navigate(\"/\" + entity.id);\n  }\n\n  const flexDemos = [\n    {\n      title: \"Flex Row\",\n      id: \"flex\",\n      description: \"Flex Row Implementation\",\n    },\n    {\n      title: \"Flex Column\",\n      id: \"flexcolumn\",\n      description: \"Flex Column Implementation\",\n    },\n    {\n      title: \"Flex Row Vertical Align\",\n      id: \"flexsize\",\n      description: \"Flex Row Vertical Align Implementation\",\n    },\n    {\n      title: \"Flex Column Vertical Align\",\n      id: \"flexcolumnsize\",\n      description: \"Flex Column Vertical Align Implementation\",\n    },\n    {\n      title: \"Flex Layout Tests\",\n      id: \"superflex\",\n      description: \"Complicated flex layouts\",\n    },\n  ];\n\n  const demos = [\n    {\n      title: \"Grid\",\n      id: \"grid\",\n      description: \"Infinite Scroll Grid\",\n    },\n    {\n      title: \"Buttons\",\n      id: \"buttons\",\n      description: \"Demo a few buttons\",\n    },\n    {\n      title: \"Login\",\n      id: \"login\",\n      description: \"Login example\",\n    },\n    {\n      title: \"Text\",\n      id: \"text\",\n      description: \"Text layout with flexbox\",\n    },\n    {\n      title: \"Create Elements\",\n      id: \"create\",\n      description: \"Testing Show + children + inserting text\",\n    },\n    {\n      title: \"Viewport\",\n      id: \"viewport\",\n      description: \"Events going in and out of viewport\",\n    },\n  ];\n\n  function DemoTile(props) {\n    const Container = {\n      width: 370,\n      height: 320,\n      borderRadius: 6,\n      scale: 1,\n      color: \"#182b44\",\n      transition: { color: true, scale: true },\n      focus: {\n        scale: 1.1,\n        color: 0xffffffff,\n      },\n    };\n    const [color, setColor] = createSignal(0xffffffff);\n\n    return (\n      <View\n        {...props}\n        onFocus={() => setColor(0x000000ff)}\n        onBlur={() => setColor(0xffffffff)}\n        style={Container}\n      >\n        <View x={30}>\n          <Text y={30} fontSize={84} color={color()}>\n            {props.index}\n          </Text>\n          <Text\n            y={140}\n            fontSize={42}\n            width={340}\n            height={42}\n            contain=\"both\"\n            color={color()}\n          >\n            {props.title}\n          </Text>\n          <Text\n            y={200}\n            fontSize={28}\n            width={330}\n            contain=\"width\"\n            color={color()}\n          >\n            {props.description}\n          </Text>\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View colorTop={0x446b9eff} colorBottom={0x2c4f7cff}>\n      <View x={120}>\n        <View src=\"./assets/solidjs.png\" width={101} height={90} y={40} />\n        <Text fontSize={90} x={110} y={40}>\n          Examples\n        </Text>\n        <View y={140} height={1} width={1800} color={0xe8d7f9ff} />\n      </View>\n      <Column scroll=\"none\" y={200} x={170} gap={80}>\n        <Row\n          onEnter={onEnter}\n          style={styles.Row}\n          justifyContent={\"flexStart\"}\n          gap={40}\n        >\n          <For each={demos}>\n            {(demo, i) => (\n              <DemoTile autofocus={isFirst(i())} index={i()} {...demo} />\n            )}\n          </For>\n        </Row>\n\n        <Row\n          onEnter={onEnter}\n          style={styles.Row}\n          justifyContent={\"flexStart\"}\n          gap={40}\n        >\n          <For each={flexDemos}>\n            {(demo, i) => <DemoTile index={i()} {...demo} />}\n          </For>\n        </Row>\n      </Column>\n    </View>\n  );\n};\n\nexport default Portal;\n"],"names":["Portal","navigate","useNavigate","isFirst","createSelector","onEnter","entity","children","selected","id","flexDemos","title","description","demos","DemoTile","props","Container","width","height","borderRadius","scale","color","transition","focus","setColor","createSignal","_$createComponent","View","_$mergeProps","onFocus","onBlur","style","x","Text","y","fontSize","index","contain","colorTop","colorBottom","src","Column","scroll","gap","Row","styles","justifyContent","For","each","demo","i","autofocus"],"mappings":"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"}