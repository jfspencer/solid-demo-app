{"version":3,"file":"Button-58Q_Fyqo.js","sources":["../../node_modules/.pnpm/@lightningtv+solid-ui@0.25.1_@lightningtv+core@2.0.1_@lightningtv+solid@2.0.1_solid-js@1.8.20__solid-js@1.8.20/node_modules/@lightningtv/solid-ui/components/Button/Button.tsx"],"sourcesContent":["/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { type Component } from 'solid-js';\nimport { View, Text } from '@lightningtv/solid';\nimport styles from './Button.styles.js';\nimport type { ButtonContainerProps, ButtonProps } from './Button.types.js';\n\nconst Button: Component<ButtonProps> = props => {\n  return (\n    <ButtonContainer\n      {...props}\n      color={props.backgroundColor}\n      itemSpacing={props.contentSpacing}\n      alignItems=\"center\"\n      forwardStates\n    >\n      <Text\n        color={props.textColor}\n        contain={props.contain ?? 'width'}\n        textAlign={props.textAlign}\n        style={[\n          styles.Text.tones[props.tone ?? styles.tone], //\n          styles.Text.base\n        ]}\n      >\n        {props.children}\n      </Text>\n    </ButtonContainer>\n  );\n};\n\nconst ButtonContainer: Component<ButtonContainerProps> = props => {\n  return (\n    <View\n      {...props}\n      color={props.backgroundColor}\n      justifyContent={props.justify}\n      itemSpacing={props.contentSpacing}\n      // @ts-expect-error TODO type needs to be fixed in framework\n      style={[\n        props.style, //\n        styles.Container.tones?.[props.tone ?? styles.tone],\n        styles.Container.base\n      ]}\n      forwardStates\n    />\n  );\n};\n\nexport {\n  Button as default, //\n  ButtonContainer,\n  type ButtonProps\n};\n"],"names":["Button","props","_$createComponent","ButtonContainer","_$mergeProps","color","backgroundColor","itemSpacing","contentSpacing","alignItems","forwardStates","children","Text","textColor","contain","textAlign","style","styles","tones","tone","base","View","justifyContent","justify","Container"],"mappings":";AAsBA,MAAMA,SAAiCC,CAAS,UAAA;AAC9CC,SAAAA,gBACGC,iBAAeC,WACVH,OAAK;AAAA,IAAA,IACTI,QAAK;AAAA,aAAEJ,MAAMK;AAAAA,IAAe;AAAA,IAAA,IAC5BC,cAAW;AAAA,aAAEN,MAAMO;AAAAA,IAAc;AAAA,IACjCC,YAAU;AAAA,IACVC,eAAa;AAAA,IAAA,IAAAC,WAAA;AAAA,aAAAT,gBAEZU,MAAI;AAAA,QAAA,IACHP,QAAK;AAAA,iBAAEJ,MAAMY;AAAAA,QAAS;AAAA,QAAA,IACtBC,UAAO;;AAAA,kBAAEb,WAAMa,YAANb,YAAiB;AAAA,QAAO;AAAA,QAAA,IACjCc,YAAS;AAAA,iBAAEd,MAAMc;AAAAA,QAAS;AAAA,QAAA,IAC1BC,QAAK;;AAAE,iBAAA;AAAA,YACLC,OAAOL,KAAKM,OAAMjB,WAAMkB,SAANlB,YAAcgB,OAAOE,IAAI;AAAA;AAAA,YAC3CF,OAAOL,KAAKQ;AAAAA,UAAAA;AAAAA,QACb;AAAA,QAAA,IAAAT,WAAA;AAAA,iBAEAV,MAAMU;AAAAA,QAAQ;AAAA,MAAA,CAAA;AAAA,IAAA;AAAA,EAAA,CAAA,CAAA;AAIvB;AAEA,MAAMR,kBAAmDF,CAAS,UAAA;AAChEC,SAAAA,gBACGmB,MAAIjB,WACCH,OAAK;AAAA,IAAA,IACTI,QAAK;AAAA,aAAEJ,MAAMK;AAAAA,IAAe;AAAA,IAAA,IAC5BgB,iBAAc;AAAA,aAAErB,MAAMsB;AAAAA,IAAO;AAAA,IAAA,IAC7BhB,cAAW;AAAA,aAAEN,MAAMO;AAAAA,IAAc;AAAA,IAAA,IAEjCQ,QAAK;;AAAE,aAAA;AAAA,QACLf,MAAMe;AAAAA;AAAAA,SACNC,YAAOO,UAAUN,UAAjBD,oBAAyBhB,WAAMkB,SAANlB,YAAcgB,OAAOE;AAAAA,QAC9CF,OAAOO,UAAUJ;AAAAA,MAAAA;AAAAA,IAClB;AAAA,IACDV,eAAa;AAAA,EAAA,CAAA,CAAA;AAGnB;","x_google_ignoreList":[0]}