{"version":3,"file":"CoreExtension-legacy-BzZDDgL-.js","sources":["../../../../../renderer/dist/src/utils.js","../../../../../renderer/dist/src/common/EventEmitter.js","../../../../../renderer/dist/src/core/renderers/CoreShader.js","../../../../../renderer/dist/src/core/renderers/webgl/internal/ShaderUtils.js","../../../../../renderer/dist/src/core/renderers/webgl/internal/WebGlUtils.js","../../../../../renderer/dist/src/core/renderers/webgl/WebGlCoreShader.js","../../../../../renderer/dist/src/core/textures/Texture.js","../../../../../renderer/dist/src/core/lib/utils.js","../../../../../renderer/dist/src/core/text-rendering/font-face-types/TrFontFace.js","../../../../../renderer/dist/src/core/renderers/CoreContextTexture.js","../../../../../renderer/dist/src/core/renderers/CoreRenderer.js","../../../../../renderer/dist/src/core/renderers/CoreRenderOp.js","../../../../../renderer/dist/src/core/renderers/webgl/WebGlCoreRenderOp.js","../../../../../renderer/dist/src/core/renderers/webgl/internal/RendererUtils.js","../../../../../renderer/node_modules/.pnpm/memize@2.1.0/node_modules/memize/dist/index.js","../../../../../renderer/dist/src/core/utils.js","../../../../../renderer/dist/src/core/renderers/webgl/WebGlCoreCtxTexture.js","../../../../../renderer/dist/src/core/textures/ColorTexture.js","../../../../../renderer/dist/src/core/textures/SubTexture.js","../../../../../renderer/dist/src/core/renderers/webgl/WebGlCoreCtxSubTexture.js","../../../../../renderer/dist/src/core/renderers/webgl/internal/BufferCollection.js","../../../../../renderer/dist/src/core/lib/WebGlContextWrapper.js","../../../../../renderer/dist/src/core/textures/RenderTexture.js","../../../../../renderer/dist/src/core/renderers/webgl/WebGlCoreCtxRenderTexture.js","../../../../../renderer/dist/src/core/renderers/webgl/WebGlCoreRenderer.js","../../../../../renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/SpecialCodepoints.js","../../../../../renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/FontShaper.js","../../../../../renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/SdfFontShaper.js","../../../../../renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/SdfTrFontFace.js","../../../../../renderer/dist/src/core/CoreExtension.js"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function createWebGLContext(canvas, contextSpy) {\n    const config = {\n        alpha: true,\n        antialias: false,\n        depth: false,\n        stencil: true,\n        desynchronized: false,\n        // Disabled because it prevents Visual Regression Tests from working\n        // failIfMajorPerformanceCaveat: true,\n        powerPreference: 'high-performance',\n        premultipliedAlpha: true,\n        preserveDrawingBuffer: false,\n    };\n    const gl = \n    // TODO: Remove this assertion once this issue is fixed in TypeScript\n    // https://github.com/microsoft/TypeScript/issues/53614\n    (canvas.getContext('webgl', config) ||\n        canvas.getContext('experimental-webgl', config));\n    if (!gl) {\n        throw new Error('Unable to create WebGL context');\n    }\n    if (contextSpy) {\n        // Proxy the GL context to log all GL calls\n        return new Proxy(gl, {\n            get(target, prop) {\n                const value = target[prop];\n                if (typeof value === 'function') {\n                    contextSpy.increment(String(prop));\n                    return value.bind(target);\n                }\n                return value;\n            },\n        });\n    }\n    return gl;\n}\n/**\n * Asserts a condition is truthy, otherwise throws an error\n *\n * @remarks\n * Useful at the top of functions to ensure certain conditions, arguments and\n * properties are set/met before continuing. When using this function,\n * TypeScript will narrow away falsy types from the condition.\n *\n * @param condition\n * @param message\n * @returns\n */\nexport function assertTruthy(condition, message) {\n    if (isProductionEnvironment())\n        return;\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n/**\n * Merges two colors based on a given progress value.\n *\n * This function takes two colors (c1 and c2) represented as 32-bit integers\n * in RGBA format and blends them based on the provided progress value (p).\n * The result is a new color that is a weighted combination of the input colors,\n * where the weight is determined by the progress value.\n *\n * @param {number} c1 - The first color in RGBA format (32-bit integer).\n * @param {number} c2 - The second color in RGBA format (32-bit integer).\n * @param {number} p - The progress value between 0 and 1.\n * @returns {number} The merged color as a 32-bit integer in RGBA format.\n */\nexport function mergeColorProgress(rgba1, rgba2, p) {\n    const r1 = Math.trunc(rgba1 >>> 24);\n    const g1 = Math.trunc((rgba1 >>> 16) & 0xff);\n    const b1 = Math.trunc((rgba1 >>> 8) & 0xff);\n    const a1 = Math.trunc(rgba1 & 0xff);\n    const r2 = Math.trunc(rgba2 >>> 24);\n    const g2 = Math.trunc((rgba2 >>> 16) & 0xff);\n    const b2 = Math.trunc((rgba2 >>> 8) & 0xff);\n    const a2 = Math.trunc(rgba2 & 0xff);\n    const r = Math.round(r2 * p + r1 * (1 - p));\n    const g = Math.round(g2 * p + g1 * (1 - p));\n    const b = Math.round(b2 * p + b1 * (1 - p));\n    const a = Math.round(a2 * p + a1 * (1 - p));\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter.\n *\n * @internalRemarks\n * This method does NOT premultiply the alpha into the color channels. If that\n * is required (for internal use only) use {@link mergeColorAlphaPremultiplied}\n * instead.\n *\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @returns\n */\nexport function mergeColorAlpha(rgba, alpha) {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = Math.trunc((rgba & 0xff) * alpha);\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter. Before returning, the\n * final alpha value is multiplied into the color channels.\n *\n * @remarks\n * If `flipEndianess` is set to true, the function will returned an ABGR encoded number\n * which is useful when the color value needs to be passed into a shader attribute.\n *\n * NOTE: This method returns a PREMULTIPLIED alpha color which is generally only useful\n * in the context of the internal rendering process. Use {@link mergeColorAlpha} if you\n * need to blend an alpha value into a color in the context of the Renderer's\n * main API.\n *\n * @internalRemarks\n * Do not expose this method in the main API because Renderer users should instead use\n * {@link mergeColorAlpha} to manipulate the alpha value of a color.\n *\n * @internal\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @param flipEndianess Flip the endianess. RGBA becomes encoded as ABGR (for inserting colors into shader attributes)\n * @returns\n */\nexport function mergeColorAlphaPremultiplied(rgba, alpha, flipEndianess = false) {\n    const newAlpha = ((rgba & 0xff) / 255) * alpha;\n    const r = Math.trunc((rgba >>> 24) * newAlpha);\n    const g = Math.trunc(((rgba >>> 16) & 0xff) * newAlpha);\n    const b = Math.trunc(((rgba >>> 8) & 0xff) * newAlpha);\n    const a = Math.trunc(newAlpha * 255);\n    if (flipEndianess) {\n        return ((a << 24) | (b << 16) | (g << 8) | r) >>> 0;\n    }\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Returns true if the given object has the given \"own\" property.\n *\n * @param obj\n * @param prop\n * @returns\n */\nexport function hasOwn(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n/**\n * Converts degrees to radians\n *\n * @param degrees\n * @returns\n */\nexport function deg2Rad(degrees) {\n    return (degrees * Math.PI) / 180;\n}\n/**\n * Returns image aspect ratio\n *\n * @param width\n * @param height\n * @returns\n */\nexport function getImageAspectRatio(width, height) {\n    return width / height;\n}\n/**\n * Checks import.meta if env is production\n *\n * @returns\n */\nexport function isProductionEnvironment() {\n    return import.meta.env && import.meta.env.PROD;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * EventEmitter base class\n */\nexport class EventEmitter {\n    eventListeners = {};\n    on(event, listener) {\n        let listeners = this.eventListeners[event];\n        if (!listeners) {\n            listeners = [];\n        }\n        listeners.push(listener);\n        this.eventListeners[event] = listeners;\n    }\n    off(event, listener) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        if (!listener) {\n            delete this.eventListeners[event];\n            return;\n        }\n        const index = listeners.indexOf(listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n    once(event, listener) {\n        const onceListener = (target, data) => {\n            this.off(event, onceListener);\n            listener(target, data);\n        };\n        this.on(event, onceListener);\n    }\n    emit(event, data) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        [...listeners].forEach((listener) => {\n            listener(this, data);\n        });\n    }\n    removeAllListeners() {\n        this.eventListeners = {};\n    }\n}\n//# sourceMappingURL=EventEmitter.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreShader {\n    // abstract draw(): void;\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n}\n//# sourceMappingURL=CoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//#endregion Types\nexport function createShader(glw, type, source) {\n    const shader = glw.createShader(type);\n    if (!shader) {\n        throw new Error();\n    }\n    glw.shaderSource(shader, source);\n    glw.compileShader(shader);\n    const success = glw.getShaderParameter(shader, glw.COMPILE_STATUS);\n    if (success) {\n        return shader;\n    }\n    console.log(glw.getShaderInfoLog(shader));\n    glw.deleteShader(shader);\n}\nexport function createProgram(glw, vertexShader, fragmentShader) {\n    const program = glw.createProgram();\n    if (!program) {\n        throw new Error();\n    }\n    glw.attachShader(program, vertexShader);\n    glw.attachShader(program, fragmentShader);\n    glw.linkProgram(program);\n    const success = glw.getProgramParameter(program, glw.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n    console.log(glw.getProgramInfoLog(program));\n    glw.deleteProgram(program);\n    return undefined;\n}\n//# sourceMappingURL=ShaderUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generic WebGL Utility Functions\n *\n * @remarks\n * Nothing here should be coupled to Renderer logic / types.\n *\n * @param gl\n * @returns\n */\nexport function isWebGl2(gl) {\n    return (self.WebGL2RenderingContext && gl instanceof self.WebGL2RenderingContext);\n}\n//# sourceMappingURL=WebGlUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, hasOwn } from '../../../utils.js';\nimport { CoreShader } from '../CoreShader.js';\nimport { createProgram, createShader, } from './internal/ShaderUtils.js';\nimport { isWebGl2 } from './internal/WebGlUtils.js';\nexport class WebGlCoreShader extends CoreShader {\n    boundBufferCollection = null;\n    buffersBound = false;\n    program;\n    /**\n     * Vertex Array Object\n     *\n     * @remarks\n     * Used by WebGL2 Only\n     */\n    vao;\n    renderer;\n    glw;\n    attributeBuffers;\n    attributeLocations;\n    attributeNames;\n    uniformLocations;\n    uniformTypes;\n    supportsIndexedTextures;\n    constructor(options) {\n        super();\n        const renderer = (this.renderer = options.renderer);\n        const glw = (this.glw = this.renderer.glw);\n        this.supportsIndexedTextures = options.supportsIndexedTextures || false;\n        // Check that extensions are supported\n        const webGl2 = glw.isWebGl2();\n        const requiredExtensions = (webGl2 && options.webgl2Extensions) ||\n            (!webGl2 && options.webgl1Extensions) ||\n            [];\n        const glVersion = webGl2 ? '2.0' : '1.0';\n        requiredExtensions.forEach((extensionName) => {\n            if (!glw.getExtension(extensionName)) {\n                throw new Error(`Shader \"${this.constructor.name}\" requires extension \"${extensionName}\" for WebGL ${glVersion} but wasn't found`);\n            }\n        });\n        // Gather shader sources\n        // - If WebGL 2 and special WebGL 2 sources are provided, we copy those sources and delete\n        // the extra copy of them to save memory.\n        // TODO: This could be further made optimal by just caching the compiled shaders and completely deleting\n        // the source code\n        const shaderSources = options.shaderSources ||\n            this.constructor.shaderSources;\n        if (!shaderSources) {\n            throw new Error(`Shader \"${this.constructor.name}\" is missing shaderSources.`);\n        }\n        else if (webGl2 && shaderSources?.webGl2) {\n            shaderSources.fragment = shaderSources.webGl2.fragment;\n            shaderSources.vertex = shaderSources.webGl2.vertex;\n            delete shaderSources.webGl2;\n        }\n        const textureUnits = renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        const vertexSource = shaderSources.vertex instanceof Function\n            ? shaderSources.vertex(textureUnits)\n            : shaderSources.vertex;\n        const fragmentSource = shaderSources.fragment instanceof Function\n            ? shaderSources.fragment(textureUnits)\n            : shaderSources.fragment;\n        const vertexShader = createShader(glw, glw.VERTEX_SHADER, vertexSource);\n        const fragmentShader = createShader(glw, glw.FRAGMENT_SHADER, fragmentSource);\n        if (!vertexShader || !fragmentShader) {\n            throw new Error();\n        }\n        const program = createProgram(glw, vertexShader, fragmentShader);\n        if (!program) {\n            throw new Error();\n        }\n        this.program = program;\n        if (webGl2) {\n            const vao = glw.createVertexArray();\n            if (!vao) {\n                throw new Error();\n            }\n            this.vao = vao;\n            glw.bindVertexArray(this.vao);\n        }\n        this.attributeLocations = {};\n        this.attributeBuffers = {};\n        this.attributeNames = [];\n        [...options.attributes].forEach((attributeName) => {\n            const location = glw.getAttribLocation(this.program, attributeName);\n            if (location < 0) {\n                throw new Error(`${this.constructor.name}: Vertex shader must have an attribute \"${attributeName}\"!`);\n            }\n            const buffer = glw.createBuffer();\n            if (!buffer) {\n                throw new Error(`${this.constructor.name}: Could not create buffer for attribute \"${attributeName}\"`);\n            }\n            this.attributeLocations[attributeName] = location;\n            this.attributeBuffers[attributeName] = buffer;\n            this.attributeNames.push(attributeName);\n        });\n        this.uniformLocations = {};\n        this.uniformTypes = {};\n        options.uniforms.forEach((uniform) => {\n            const location = glw.getUniformLocation(this.program, uniform.name);\n            this.uniformTypes[uniform.name] = uniform.uniform;\n            if (!location) {\n                console.warn(`Shader \"${this.constructor.name}\" could not get uniform location for \"${uniform.name}\"`);\n                return;\n            }\n            this.uniformLocations[uniform.name] = location;\n        });\n    }\n    bindBufferAttribute(location, buffer, attribute) {\n        const { glw } = this;\n        glw.enableVertexAttribArray(location);\n        glw.vertexAttribPointer(buffer, location, attribute.size, attribute.type, attribute.normalized, attribute.stride, attribute.offset);\n    }\n    disableAttribute(location) {\n        this.glw.disableVertexAttribArray(location);\n    }\n    disableAttributes() {\n        for (const loc in this.attributeLocations) {\n            this.disableAttribute(this.attributeLocations[loc]);\n        }\n        this.boundBufferCollection = null;\n    }\n    /**\n     * Given two sets of Shader props destined for this Shader, determine if they can be batched together\n     * to reduce the number of draw calls.\n     *\n     * @remarks\n     * This is used by the {@link WebGlCoreRenderer} to determine if it can batch multiple consecutive draw\n     * calls into a single draw call.\n     *\n     * By default, this returns false (meaning no batching is allowed), but can be\n     * overridden by child classes to provide more efficient batching.\n     *\n     * @param propsA\n     * @param propsB\n     * @returns\n     */\n    canBatchShaderProps(propsA, propsB) {\n        return false;\n    }\n    bindRenderOp(renderOp, props) {\n        this.bindBufferCollection(renderOp.buffers);\n        if (renderOp.textures.length > 0) {\n            this.bindTextures(renderOp.textures);\n        }\n        const { glw, parentHasRenderTexture, renderToTexture } = renderOp;\n        // Skip if the parent and current operation both have render textures\n        if (renderToTexture && parentHasRenderTexture) {\n            return;\n        }\n        // Bind render texture framebuffer dimensions as resolution\n        // if the parent has a render texture\n        if (parentHasRenderTexture) {\n            const { width, height } = renderOp.framebufferDimensions || {};\n            // Force pixel ratio to 1.0 for render textures since they are always 1:1\n            // the final render texture will be rendered to the screen with the correct pixel ratio\n            this.setUniform('u_pixelRatio', 1.0);\n            // Set resolution to the framebuffer dimensions\n            this.setUniform('u_resolution', new Float32Array([width ?? 0, height ?? 0]));\n        }\n        else {\n            this.setUniform('u_pixelRatio', renderOp.options.pixelRatio);\n            this.setUniform('u_resolution', new Float32Array([glw.canvas.width, glw.canvas.height]));\n        }\n        if (props) {\n            // Bind optional automatic uniforms\n            // These are only bound if their keys are present in the props.\n            if (hasOwn(props, '$dimensions')) {\n                let dimensions = props.$dimensions;\n                if (!dimensions) {\n                    dimensions = renderOp.dimensions;\n                }\n                this.setUniform('u_dimensions', [dimensions.width, dimensions.height]);\n            }\n            if (hasOwn(props, '$alpha')) {\n                let alpha = props.$alpha;\n                if (!alpha) {\n                    alpha = renderOp.alpha;\n                }\n                this.setUniform('u_alpha', alpha);\n            }\n            this.bindProps(props);\n        }\n    }\n    setUniform(name, ...value) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-unsafe-argument\n        this.glw.setUniform(this.uniformTypes[name], this.uniformLocations[name], ...value);\n    }\n    bindBufferCollection(buffer) {\n        if (this.boundBufferCollection === buffer) {\n            return;\n        }\n        for (const attributeName in this.attributeLocations) {\n            const resolvedBuffer = buffer.getBuffer(attributeName);\n            const resolvedInfo = buffer.getAttributeInfo(attributeName);\n            assertTruthy(resolvedBuffer, `Buffer for \"${attributeName}\" not found`);\n            assertTruthy(resolvedInfo);\n            this.bindBufferAttribute(this.attributeLocations[attributeName], resolvedBuffer, resolvedInfo);\n        }\n        this.boundBufferCollection = buffer;\n    }\n    bindProps(props) {\n        // Implement in child class\n    }\n    bindTextures(textures) {\n        // no defaults\n    }\n    attach() {\n        this.glw.useProgram(this.program);\n        this.glw.useProgram(this.program);\n        if (this.glw.isWebGl2() && this.vao) {\n            this.glw.bindVertexArray(this.vao);\n        }\n    }\n    detach() {\n        this.disableAttributes();\n    }\n    static shaderSources;\n}\n//# sourceMappingURL=WebGlCoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../common/EventEmitter.js';\n/**\n * Represents a source of texture data for a CoreContextTexture.\n *\n * @remarks\n * Texture sources are used to populate a CoreContextTexture when that texture\n * is loaded. Texture data retrieved by the CoreContextTexture by the\n * `getTextureData` method. It's the responsibility of the concerete `Texture`\n * subclass to implement this method appropriately.\n */\nexport class Texture extends EventEmitter {\n    txManager;\n    /**\n     * The dimensions of the texture\n     *\n     * @remarks\n     * Until the texture data is loaded for the first time the value will be\n     * `null`.\n     */\n    dimensions = null;\n    error = null;\n    state = 'freed';\n    renderableOwners = new Set();\n    constructor(txManager) {\n        super();\n        this.txManager = txManager;\n    }\n    /**\n     * Add/remove an owner to/from the Texture based on its renderability.\n     *\n     * @remarks\n     * Any object can own a texture, be it a CoreNode or even the state object\n     * from a Text Renderer.\n     *\n     * When the reference to the texture that an owner object holds is replaced\n     * or cleared it must call this with `renderable=false` to release the owner\n     * association.\n     *\n     * @param owner\n     * @param renderable\n     */\n    setRenderableOwner(owner, renderable) {\n        if (renderable) {\n            this.renderableOwners.add(owner);\n        }\n        else {\n            this.renderableOwners.delete(owner);\n        }\n    }\n    /**\n     * Returns true if the texture is assigned to any Nodes that are renderable.\n     */\n    get renderable() {\n        return this.renderableOwners.size > 0;\n    }\n    /**\n     * Set the state of the texture\n     *\n     * @remark\n     * Intended for internal-use only but declared public so that it can be set\n     * by it's associated {@link CoreContextTexture}\n     *\n     * @param state\n     * @param args\n     */\n    setState(state, ...args) {\n        if (this.state !== state) {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.state = state;\n            if (state === 'loaded') {\n                const loadedArgs = args;\n                this.dimensions = loadedArgs[0];\n            }\n            else if (state === 'failed') {\n                const failedArgs = args;\n                this.error = failedArgs[0];\n            }\n            this.emit(state, ...args);\n        }\n    }\n    /**\n     * Make a cache key for this texture.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide an\n     * appropriate cache key for the texture type including the texture's\n     * properties that uniquely identify a copy of the texture. If the texture\n     * type does not support caching, then this method should return `false`.\n     *\n     * @param props\n     * @returns\n     * A cache key for this texture or `false` if the texture type does not\n     * support caching.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    /**\n     * Resolve the default values for the texture's properties.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide\n     * default values for the texture's optional properties.\n     *\n     * @param props\n     * @returns\n     * The default values for the texture's properties.\n     */\n    static resolveDefaults(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    props) {\n        return {};\n    }\n}\n//# sourceMappingURL=Texture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const getNormalizedRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r / 255, g / 255, b / 255, a / 255];\n};\nexport const getRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r, g, b, a];\n};\nexport const norm = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    const rgbaArr = [r / 255, g / 255, b / 255, a / 255];\n    rgbaArr[0] = Math.max(0, Math.min(255, rgbaArr[0]));\n    rgbaArr[1] = Math.max(0, Math.min(255, rgbaArr[1]));\n    rgbaArr[2] = Math.max(0, Math.min(255, rgbaArr[2]));\n    rgbaArr[3] = Math.max(0, Math.min(255, rgbaArr[3]));\n    let v = ((rgbaArr[3] | 0) << 24) +\n        ((rgbaArr[0] | 0) << 16) +\n        ((rgbaArr[1] | 0) << 8) +\n        (rgbaArr[2] | 0);\n    if (v < 0) {\n        v = 0xffffffff + v + 1;\n    }\n    return v;\n};\nexport function getNormalizedAlphaComponent(rgba) {\n    return (rgba & 0xff) / 255.0;\n}\n/**\n * Get a CSS color string from a RGBA color\n *\n * @param color\n * @returns\n */\nexport function getRgbaString(color) {\n    const r = Math.floor(color[0] * 255.0);\n    const g = Math.floor(color[1] * 255.0);\n    const b = Math.floor(color[2] * 255.0);\n    const a = Math.floor(color[3] * 255.0);\n    return `rgba(${r},${g},${b},${a.toFixed(4)})`;\n}\nexport function createBound(x1, y1, x2, y2, out) {\n    if (out) {\n        out.x1 = x1;\n        out.y1 = y1;\n        out.x2 = x2;\n        out.y2 = y2;\n        return out;\n    }\n    return {\n        x1,\n        y1,\n        x2,\n        y2,\n    };\n}\nexport function intersectBound(a, b, out) {\n    const intersection = createBound(Math.max(a.x1, b.x1), Math.max(a.y1, b.y1), Math.min(a.x2, b.x2), Math.min(a.y2, b.y2), out);\n    if (intersection.x1 < intersection.x2 && intersection.y1 < intersection.y2) {\n        return intersection;\n    }\n    return createBound(0, 0, 0, 0, intersection);\n}\nexport function boundsOverlap(a, b) {\n    return a.x1 < b.x2 && a.x2 > b.x1 && a.y1 < b.y2 && a.y2 > b.y1;\n}\nexport function convertBoundToRect(bound, out) {\n    if (out) {\n        out.x = bound.x1;\n        out.y = bound.y1;\n        out.width = bound.x2 - bound.x1;\n        out.height = bound.y2 - bound.y1;\n        return out;\n    }\n    return {\n        x: bound.x1,\n        y: bound.y1,\n        width: bound.x2 - bound.x1,\n        height: bound.y2 - bound.y1,\n    };\n}\nexport function intersectRect(a, b, out) {\n    const x = Math.max(a.x, b.x);\n    const y = Math.max(a.y, b.y);\n    const width = Math.min(a.x + a.width, b.x + b.width) - x;\n    const height = Math.min(a.y + a.height, b.y + b.height) - y;\n    if (width > 0 && height > 0) {\n        if (out) {\n            out.x = x;\n            out.y = y;\n            out.width = width;\n            out.height = height;\n            return out;\n        }\n        return {\n            x,\n            y,\n            width,\n            height,\n        };\n    }\n    if (out) {\n        out.x = 0;\n        out.y = 0;\n        out.width = 0;\n        out.height = 0;\n        return out;\n    }\n    return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n    };\n}\nexport function copyRect(a, out) {\n    if (out) {\n        out.x = a.x;\n        out.y = a.y;\n        out.width = a.width;\n        out.height = a.height;\n        return out;\n    }\n    return {\n        x: a.x,\n        y: a.y,\n        width: a.width,\n        height: a.height,\n    };\n}\nexport function compareRect(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a === null || b === null) {\n        return false;\n    }\n    return (a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height);\n}\nexport function boundInsideBound(bound1, bound2) {\n    return (bound1.x1 <= bound2.x2 &&\n        bound1.y1 <= bound2.y2 &&\n        bound1.x2 >= bound2.x1 &&\n        bound1.y2 >= bound2.y1);\n}\nexport function isBoundPositive(bound) {\n    return bound.x1 < bound.x2 && bound.y1 < bound.y2;\n}\nexport function isRectPositive(rect) {\n    return rect.width > 0 && rect.height > 0;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../../common/EventEmitter.js';\nexport class TrFontFace extends EventEmitter {\n    fontFamily;\n    descriptors;\n    loaded = false;\n    constructor(fontFamily, descriptors) {\n        super();\n        this.fontFamily = fontFamily;\n        this.descriptors = {\n            style: 'normal',\n            weight: 'normal',\n            stretch: 'normal',\n            ...descriptors,\n        };\n    }\n    /**\n     * Convert a TrFontFaceDescriptors to a FontFaceDescriptors which differ slightly\n     *\n     * @param descriptors\n     * @returns\n     */\n    static convertToCssFontFaceDescriptors(descriptors) {\n        return {\n            style: descriptors.style,\n            weight: typeof descriptors.weight === 'number'\n                ? `${descriptors.weight}`\n                : descriptors.weight,\n            stretch: descriptors.stretch,\n            unicodeRange: descriptors.unicodeRange,\n            variant: descriptors.variant,\n            featureSettings: descriptors.featureSettings,\n            display: descriptors.display,\n        };\n    }\n}\n//# sourceMappingURL=TrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreContextTexture {\n    memManager;\n    textureSource;\n    constructor(memManager, textureSource) {\n        this.memManager = memManager;\n        this.textureSource = textureSource;\n    }\n}\n//# sourceMappingURL=CoreContextTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreContextTexture } from './CoreContextTexture.js';\nexport class CoreRenderer {\n    stage;\n    constructor(stage) {\n        this.stage = stage;\n    }\n}\n//# sourceMappingURL=CoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreRenderOp {\n}\n//# sourceMappingURL=CoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreRenderOp } from '../CoreRenderOp.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nconst MAX_TEXTURES = 8; // TODO: get from gl\n/**\n * Can render multiple quads with multiple textures (up to vertex shader texture limit)\n *\n */\nexport class WebGlCoreRenderOp extends CoreRenderOp {\n    glw;\n    options;\n    buffers;\n    shader;\n    shaderProps;\n    alpha;\n    clippingRect;\n    dimensions;\n    bufferIdx;\n    zIndex;\n    renderToTexture;\n    parentHasRenderTexture;\n    framebufferDimensions;\n    length = 0;\n    numQuads = 0;\n    textures = [];\n    maxTextures;\n    constructor(glw, options, buffers, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, zIndex, renderToTexture, parentHasRenderTexture, framebufferDimensions) {\n        super();\n        this.glw = glw;\n        this.options = options;\n        this.buffers = buffers;\n        this.shader = shader;\n        this.shaderProps = shaderProps;\n        this.alpha = alpha;\n        this.clippingRect = clippingRect;\n        this.dimensions = dimensions;\n        this.bufferIdx = bufferIdx;\n        this.zIndex = zIndex;\n        this.renderToTexture = renderToTexture;\n        this.parentHasRenderTexture = parentHasRenderTexture;\n        this.framebufferDimensions = framebufferDimensions;\n        this.maxTextures = shader.supportsIndexedTextures\n            ? glw.getParameter(glw.MAX_VERTEX_TEXTURE_IMAGE_UNITS)\n            : 1;\n    }\n    addTexture(texture) {\n        const { textures, maxTextures } = this;\n        const existingIdx = textures.findIndex((t) => t === texture);\n        if (existingIdx !== -1) {\n            return existingIdx;\n        }\n        const newIdx = textures.length;\n        if (newIdx >= maxTextures) {\n            return 0xffffffff;\n        }\n        this.textures.push(texture);\n        return newIdx;\n    }\n    draw() {\n        const { glw, shader, shaderProps, options } = this;\n        const { shManager } = options;\n        shManager.useShader(shader);\n        shader.bindRenderOp(this, shaderProps);\n        // TODO: Reduce calculations required\n        const quadIdx = (this.bufferIdx / 24) * 6 * 2;\n        // Clipping\n        if (this.clippingRect.valid) {\n            const { x, y, width, height } = this.clippingRect;\n            const pixelRatio = options.pixelRatio;\n            const canvasHeight = options.canvas.height;\n            const clipX = Math.round(x * pixelRatio);\n            const clipWidth = Math.round(width * pixelRatio);\n            const clipHeight = Math.round(height * pixelRatio);\n            const clipY = Math.round(canvasHeight - clipHeight - y * pixelRatio);\n            glw.setScissorTest(true);\n            glw.scissor(clipX, clipY, clipWidth, clipHeight);\n        }\n        else {\n            glw.setScissorTest(false);\n        }\n        glw.drawElements(glw.TRIANGLES, 6 * this.numQuads, glw.UNSIGNED_SHORT, quadIdx);\n    }\n}\n//# sourceMappingURL=WebGlCoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Get device specific webgl parameters\n * @param glw\n */\nexport function getWebGlParameters(glw) {\n    const params = {\n        MAX_RENDERBUFFER_SIZE: 0,\n        MAX_TEXTURE_SIZE: 0,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n        MAX_VIEWPORT_DIMS: 0,\n        MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0,\n        MAX_VERTEX_ATTRIBS: 0,\n        MAX_VARYING_VECTORS: 0,\n        MAX_VERTEX_UNIFORM_VECTORS: 0,\n        MAX_FRAGMENT_UNIFORM_VECTORS: 0,\n    };\n    // Map over all parameters and get them\n    const keys = Object.keys(params);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        params[key] = glw.getParameter(glw[key]);\n    });\n    return params;\n}\n/**\n * Get device webgl extensions\n * @param glw\n */\nexport function getWebGlExtensions(glw) {\n    const extensions = {\n        ANGLE_instanced_arrays: null,\n        WEBGL_compressed_texture_s3tc: null,\n        WEBGL_compressed_texture_astc: null,\n        WEBGL_compressed_texture_etc: null,\n        WEBGL_compressed_texture_etc1: null,\n        WEBGL_compressed_texture_pvrtc: null,\n        WEBKIT_WEBGL_compressed_texture_pvrtc: null,\n        WEBGL_compressed_texture_s3tc_srgb: null,\n        OES_vertex_array_object: null,\n    };\n    // Map over all extensions and get them\n    const keys = Object.keys(extensions);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        extensions[key] = glw.getExtension(key);\n    });\n    return extensions;\n}\n/**\n * Allocate big memory chunk that we\n * can re-use to draw quads\n *\n * @param glw\n * @param size\n */\nexport function createIndexBuffer(glw, size) {\n    const maxQuads = ~~(size / 80);\n    const indices = new Uint16Array(maxQuads * 6);\n    for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n        indices[i] = j;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 2;\n        indices[i + 4] = j + 1;\n        indices[i + 5] = j + 3;\n    }\n    const buffer = glw.createBuffer();\n    glw.elementArrayBufferData(buffer, indices, glw.STATIC_DRAW);\n}\n/**\n * Checks if an object is of type HTMLImageElement.\n * This is used because we cant check for HTMLImageElement directly when the\n * renderer is running in a seperate web worker context.\n *\n * @param obj\n * @returns\n */\nexport function isHTMLImageElement(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        obj.constructor &&\n        obj.constructor.name === 'HTMLImageElement');\n}\n//# sourceMappingURL=RendererUtils.js.map","/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {(...args: any[]) => any} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {((...args: Parameters<F>) => ReturnType<F>) & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize(fn, options) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized(/* ...args */) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs,\n\t\t\ti;\n\n\t\tsearchCache: while (node) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif (node.args.length !== arguments.length) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (node.args[i] !== arguments[i]) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== head) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif (node === tail) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ (head).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply(null, args),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (head) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif (size === /** @type {MemizeOptions} */ (options).maxSize) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ (tail).prev;\n\t\t\t/** @type {MemizeCacheNode} */ (tail).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function () {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nexport { memize as default };\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Core Utility Functions\n *\n * @module\n */\nimport memo from 'memize';\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport const RANDOM = Math.random;\nexport const ANGLE_ORDER = 'zyx';\nconst degree = Math.PI / 180;\nexport const setMatrixArrayType = (type) => {\n    ARRAY_TYPE = type;\n};\nexport const toRadian = (a) => {\n    return a * degree;\n};\nexport const equals = (a, b) => {\n    return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n};\nexport const rand = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\nexport const isPowerOfTwo = (value) => {\n    return value && !(value & (value - 1));\n};\nconst getTimingBezier = (a, b, c, d) => {\n    const xc = 3.0 * a;\n    const xb = 3.0 * (c - a) - xc;\n    const xa = 1.0 - xc - xb;\n    const yc = 3.0 * b;\n    const yb = 3.0 * (d - b) - yc;\n    const ya = 1.0 - yc - yb;\n    return function (time) {\n        if (time >= 1.0) {\n            return 1;\n        }\n        if (time <= 0) {\n            return 0;\n        }\n        let t = 0.5, cbx, cbxd, dx;\n        for (let it = 0; it < 20; it++) {\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                return t * (t * (t * ya + yb) + yc);\n            }\n            // Cubic bezier derivative.\n            cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n            t += dx / cbxd;\n        }\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc);\n            }\n            if (dx < 0) {\n                maxT = t;\n            }\n            else {\n                minT = t;\n            }\n        }\n    };\n};\nexport const getTimingFunction = memo((str) => {\n    switch (str) {\n        case 'linear':\n            return function (time) {\n                return time;\n            };\n        case 'ease':\n            return getTimingBezier(0.25, 0.1, 0.25, 1.0);\n        case 'ease-in':\n            return getTimingBezier(0.42, 0, 1.0, 1.0);\n        case 'ease-out':\n            return getTimingBezier(0, 0, 0.58, 1.0);\n        case 'ease-in-out':\n            return getTimingBezier(0.42, 0, 0.58, 1.0);\n        case 'ease-in-sine':\n            return getTimingBezier(0.12, 0, 0.39, 0);\n        case 'ease-out-sine':\n            return getTimingBezier(0.12, 0, 0.39, 0);\n        case 'ease-in-out-sine':\n            return getTimingBezier(0.37, 0, 0.63, 1);\n        case 'ease-in-cubic':\n            return getTimingBezier(0.32, 0, 0.67, 0);\n        case 'ease-out-cubic':\n            return getTimingBezier(0.33, 1, 0.68, 1);\n        case 'ease-in-out-cubic':\n            return getTimingBezier(0.65, 0, 0.35, 1);\n        case 'ease-in-circ':\n            return getTimingBezier(0.55, 0, 1, 0.45);\n        case 'ease-out-circ':\n            return getTimingBezier(0, 0.55, 0.45, 1);\n        case 'ease-in-out-circ':\n            return getTimingBezier(0.85, 0, 0.15, 1);\n        case 'ease-in-back':\n            return getTimingBezier(0.36, 0, 0.66, -0.56);\n        case 'ease-out-back':\n            return getTimingBezier(0.34, 1.56, 0.64, 1);\n        case 'ease-in-out-back':\n            return getTimingBezier(0.68, -0.6, 0.32, 1.6);\n        case 'step-start':\n            return function () {\n                return 1;\n            };\n        case 'step-end':\n            return function (time) {\n                return time === 1 ? 1 : 0;\n            };\n        default:\n            // eslint-disable-next-line no-case-declarations\n            const s = 'cubic-bezier(';\n            if (str && str.indexOf(s) === 0) {\n                const parts = str\n                    .substr(s.length, str.length - s.length - 1)\n                    .split(',');\n                if (parts.length !== 4) {\n                    console.warn('Unknown timing function: ' + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time;\n                    };\n                }\n                const a = parseFloat(parts[0] || '0.42');\n                const b = parseFloat(parts[1] || '0');\n                const c = parseFloat(parts[2] || '1');\n                const d = parseFloat(parts[3] || '1');\n                if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                    console.warn(' Unknown timing function: ' + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time;\n                    };\n                }\n                return getTimingBezier(a, b, c, d);\n            }\n            else {\n                console.warn('Unknown timing function: ' + str);\n                // Fallback: use linear.\n                return function (time) {\n                    return time;\n                };\n            }\n    }\n});\nif (!Math.hypot)\n    Math.hypot = (...args) => {\n        let y = 0, i = args.length;\n        while (i--) {\n            y += args[i] * args[i];\n        }\n        return Math.sqrt(y);\n    };\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { isPowerOfTwo } from '../../utils.js';\nimport { CoreContextTexture } from '../CoreContextTexture.js';\nimport { isHTMLImageElement } from './internal/RendererUtils.js';\nconst TRANSPARENT_TEXTURE_DATA = new Uint8Array([0, 0, 0, 0]);\n/**\n * A wrapper around a WebGLTexture that handles loading the texture data\n * from a Texture source and uploading it to the GPU as well as freeing\n * the uploaded texture.\n *\n * @remarks\n * When accessing the ctxTexture property, the texture will be loaded if\n * it hasn't been already. ctxTexture will always return a valid WebGLTexture\n * and trigger the loading/uploading of the texture's data if it hasn't been\n * loaded yet.\n */\nexport class WebGlCoreCtxTexture extends CoreContextTexture {\n    glw;\n    _nativeCtxTexture = null;\n    _state = 'freed';\n    _w = 0;\n    _h = 0;\n    constructor(glw, memManager, textureSource) {\n        super(memManager, textureSource);\n        this.glw = glw;\n    }\n    get ctxTexture() {\n        if (this._state === 'freed') {\n            this.load();\n        }\n        assertTruthy(this._nativeCtxTexture);\n        return this._nativeCtxTexture;\n    }\n    get renderable() {\n        return this.textureSource.renderable;\n    }\n    get w() {\n        return this._w;\n    }\n    get h() {\n        return this._h;\n    }\n    /**\n     * Load the texture data from the Texture source and upload it to the GPU\n     *\n     * @remarks\n     * This method is called automatically when accessing the ctxTexture property\n     * if the texture hasn't been loaded yet. But it can also be called manually\n     * to force the texture to be pre-loaded prior to accessing the ctxTexture\n     * property.\n     */\n    load() {\n        // If the texture is already loading or loaded, don't load it again.\n        if (this._state === 'loading' || this._state === 'loaded') {\n            return;\n        }\n        this._state = 'loading';\n        this.textureSource.setState('loading');\n        this._nativeCtxTexture = this.createNativeCtxTexture();\n        this.onLoadRequest()\n            .then(({ width, height }) => {\n            if (this._state === 'freed') {\n                return;\n            }\n            this._state = 'loaded';\n            this._w = width;\n            this._h = height;\n            // Update the texture source's width and height so that it can be used\n            // for rendering.\n            this.textureSource.setState('loaded', { width, height });\n        })\n            .catch((err) => {\n            this._state = 'failed';\n            this.textureSource.setState('failed', err);\n            console.error(err);\n        });\n    }\n    /**\n     * Called when the texture data needs to be loaded and uploaded to a texture\n     */\n    async onLoadRequest() {\n        const { glw, memManager } = this;\n        // Set to a 1x1 transparent texture\n        glw.texImage2D(0, glw.RGBA, 1, 1, 0, glw.RGBA, glw.UNSIGNED_BYTE, null);\n        memManager.setTextureMemUse(this, TRANSPARENT_TEXTURE_DATA.byteLength);\n        const textureData = await this.textureSource?.getTextureData();\n        // If the texture has been freed while loading, return early.\n        if (!this._nativeCtxTexture) {\n            assertTruthy(this._state === 'freed');\n            return { width: 0, height: 0 };\n        }\n        let width = 0;\n        let height = 0;\n        assertTruthy(this._nativeCtxTexture);\n        glw.activeTexture(0);\n        // If textureData is null, the texture is empty (0, 0) and we don't need to\n        // upload any data to the GPU.\n        if (textureData.data instanceof ImageBitmap ||\n            textureData.data instanceof ImageData ||\n            // not using typeof HTMLImageElement due to web worker\n            isHTMLImageElement(textureData.data)) {\n            const data = textureData.data;\n            width = data.width;\n            height = data.height;\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.pixelStorei(glw.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !!textureData.premultiplyAlpha);\n            glw.texImage2D(0, glw.RGBA, glw.RGBA, glw.UNSIGNED_BYTE, data);\n            memManager.setTextureMemUse(this, width * height * 4);\n            // generate mipmaps for power-of-2 textures or in WebGL2RenderingContext\n            if (glw.isWebGl2() || (isPowerOfTwo(width) && isPowerOfTwo(height))) {\n                glw.generateMipmap();\n            }\n        }\n        else if (textureData.data === null) {\n            width = 0;\n            height = 0;\n            // Reset to a 1x1 transparent texture\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.texImage2D(0, glw.RGBA, 1, 1, 0, glw.RGBA, glw.UNSIGNED_BYTE, TRANSPARENT_TEXTURE_DATA);\n            memManager.setTextureMemUse(this, TRANSPARENT_TEXTURE_DATA.byteLength);\n        }\n        else if ('mipmaps' in textureData.data && textureData.data.mipmaps) {\n            const { mipmaps, width = 0, height = 0, type, glInternalFormat, } = textureData.data;\n            const view = type === 'ktx'\n                ? new DataView(mipmaps[0] ?? new ArrayBuffer(0))\n                : mipmaps[0];\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.compressedTexImage2D(0, glInternalFormat, width, height, 0, view);\n            glw.texParameteri(glw.TEXTURE_WRAP_S, glw.CLAMP_TO_EDGE);\n            glw.texParameteri(glw.TEXTURE_WRAP_T, glw.CLAMP_TO_EDGE);\n            glw.texParameteri(glw.TEXTURE_MAG_FILTER, glw.LINEAR);\n            glw.texParameteri(glw.TEXTURE_MIN_FILTER, glw.LINEAR);\n            memManager.setTextureMemUse(this, view.byteLength);\n        }\n        else {\n            console.error(`WebGlCoreCtxTexture.onLoadRequest: Unexpected textureData returned`, textureData);\n        }\n        return {\n            width,\n            height,\n        };\n    }\n    /**\n     * Free the WebGLTexture from the GPU\n     *\n     * @returns\n     */\n    free() {\n        if (this._state === 'freed') {\n            return;\n        }\n        this._state = 'freed';\n        this.textureSource.setState('freed');\n        this._w = 0;\n        this._h = 0;\n        if (!this._nativeCtxTexture) {\n            return;\n        }\n        const { glw, memManager } = this;\n        glw.deleteTexture(this._nativeCtxTexture);\n        memManager.setTextureMemUse(this, 0);\n        this._nativeCtxTexture = null;\n    }\n    /**\n     * Create native context texture\n     *\n     * @remarks\n     * When this method returns the returned texture will be bound to the GL context state.\n     *\n     * @param width\n     * @param height\n     * @returns\n     */\n    createNativeCtxTexture() {\n        const { glw } = this;\n        const nativeTexture = glw.createTexture();\n        if (!nativeTexture) {\n            throw new Error('Could not create WebGL Texture');\n        }\n        // On initial load request, create a 1x1 transparent texture to use until\n        // the texture data is finally loaded.\n        glw.activeTexture(0);\n        glw.bindTexture(nativeTexture);\n        // linear texture filtering\n        glw.texParameteri(glw.TEXTURE_MAG_FILTER, glw.LINEAR);\n        glw.texParameteri(glw.TEXTURE_MIN_FILTER, glw.LINEAR);\n        // texture wrapping method\n        glw.texParameteri(glw.TEXTURE_WRAP_S, glw.CLAMP_TO_EDGE);\n        glw.texParameteri(glw.TEXTURE_WRAP_T, glw.CLAMP_TO_EDGE);\n        return nativeTexture;\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of only a 1x1 color pixel\n *\n * @remarks\n * The pixel color is set with the {@link ColorTextureProps.color} prop.\n *\n * This is the default texture used for a Node if it's\n * {@link INodeWritableProps.texture} prop is set to `null` (the default)\n *\n * Generally the 1x1 color pixel is stretched to whatever the set dimensions of\n * a Node are.\n */\nexport class ColorTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ColorTexture.resolveDefaults(props || {});\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(color) {\n        this.props.color = color;\n    }\n    async getTextureData() {\n        const pixelData32 = new Uint32Array([this.color]);\n        const pixelData8 = new Uint8ClampedArray(pixelData32.buffer);\n        return {\n            data: new ImageData(pixelData8, 1, 1),\n            premultiplyAlpha: true,\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = ColorTexture.resolveDefaults(props);\n        return `ColorTexture,${resolvedProps.color}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            color: props.color || 0xffffffff,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ColorTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture, } from './Texture.js';\n/**\n * A Texture that is a sub-region of another Texture.\n *\n * @remarks\n * The parent texture can be a Sprite Sheet/Texture Atlas and set using the\n * {@link SubTextureProps.texture} prop. The sub-region relative to the parent\n * texture is defined with the {@link SubTextureProps.x},\n * {@link SubTextureProps.y}, {@link SubTextureProps.width}, and\n * {@link SubTextureProps.height} pixel values.\n */\nexport class SubTexture extends Texture {\n    props;\n    parentTexture;\n    constructor(txManager, props) {\n        super(txManager);\n        this.parentTexture = this.txManager.loadTexture(props.texture.txType, props.texture.props, props.texture.options);\n        this.props = SubTexture.resolveDefaults(props || {});\n        // If parent texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            const parentTx = this.parentTexture;\n            if (parentTx.state === 'loaded') {\n                this.onParentTxLoaded(parentTx, parentTx.dimensions);\n            }\n            else if (parentTx.state === 'failed') {\n                this.onParentTxFailed(parentTx, parentTx.error);\n            }\n            parentTx.on('loaded', this.onParentTxLoaded);\n            parentTx.on('failed', this.onParentTxFailed);\n        });\n    }\n    onParentTxLoaded = () => {\n        // We ignore the parent's passed dimensions, and simply use the SubTexture's\n        // configured dimensions (because that's all that matters here)\n        this.setState('loaded', {\n            width: this.props.width,\n            height: this.props.height,\n        });\n    };\n    onParentTxFailed = (target, error) => {\n        this.setState('failed', error);\n    };\n    async getTextureData() {\n        return {\n            data: this.props,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {\n            texture: props.texture,\n            x: props.x || 0,\n            y: props.y || 0,\n            width: props.width || 0,\n            height: props.height || 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=SubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nexport class WebGlCoreCtxSubTexture extends WebGlCoreCtxTexture {\n    constructor(glw, memManager, textureSource) {\n        super(glw, memManager, textureSource);\n    }\n    async onLoadRequest() {\n        const props = await this.textureSource.getTextureData();\n        return {\n            width: props.data?.width || 0,\n            height: props.data?.height || 0,\n        };\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxSubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a collection of WebGL Buffers along with their associated\n * vertex attribute formats.\n */\nexport class BufferCollection {\n    config;\n    constructor(config) {\n        this.config = config;\n    }\n    /**\n     * Get the WebGLBuffer associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getBuffer(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])?.buffer;\n    }\n    /**\n     * Get the AttributeInfo associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getAttributeInfo(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])\n            ?.attributes[attributeName];\n    }\n}\n//# sourceMappingURL=BufferCollection.js.map","/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport { assertTruthy } from '../../utils.js';\nimport { isWebGl2 } from '../renderers/webgl/internal/WebGlUtils.js';\n/**\n * Optimized WebGL Context Wrapper\n *\n * @remarks\n * This class contains the subset of the WebGLRenderingContext & WebGL2RenderingContext\n * API that is used by the renderer. Select high volume WebGL methods include\n * caching optimizations to avoid making WebGL calls if the state is already set\n * to the desired value.\n *\n * While most methods contained are direct passthroughs to the WebGL context,\n * some methods combine multiple WebGL calls into one for convenience, modify\n * arguments to be more convenient, or are replaced by more specific methods.\n *\n * Not all methods are optimized. Only methods that are called frequently\n * and/or have a high cost are optimized.\n *\n * A subset of GLenum constants are also exposed as properties on this class\n * for convenience.\n */\nexport class WebGlContextWrapper {\n    gl;\n    //#region Cached WebGL State\n    activeTextureUnit = 0;\n    texture2dUnits;\n    texture2dParams = new WeakMap();\n    scissorEnabled;\n    scissorX;\n    scissorY;\n    scissorWidth;\n    scissorHeight;\n    blendEnabled;\n    blendSrcRgb;\n    blendDstRgb;\n    blendSrcAlpha;\n    blendDstAlpha;\n    boundArrayBuffer;\n    boundElementArrayBuffer;\n    curProgram;\n    programUniforms = new WeakMap();\n    //#endregion Cached WebGL State\n    //#region Canvas\n    canvas;\n    //#endregion Canvas\n    //#region WebGL Enums\n    MAX_RENDERBUFFER_SIZE;\n    MAX_TEXTURE_SIZE;\n    MAX_VIEWPORT_DIMS;\n    MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n    MAX_TEXTURE_IMAGE_UNITS;\n    MAX_COMBINED_TEXTURE_IMAGE_UNITS;\n    MAX_VERTEX_ATTRIBS;\n    MAX_VARYING_VECTORS;\n    MAX_VERTEX_UNIFORM_VECTORS;\n    MAX_FRAGMENT_UNIFORM_VECTORS;\n    TEXTURE_MAG_FILTER;\n    TEXTURE_MIN_FILTER;\n    TEXTURE_WRAP_S;\n    TEXTURE_WRAP_T;\n    LINEAR;\n    CLAMP_TO_EDGE;\n    RGBA;\n    UNSIGNED_BYTE;\n    UNPACK_PREMULTIPLY_ALPHA_WEBGL;\n    UNPACK_FLIP_Y_WEBGL;\n    FLOAT;\n    TRIANGLES;\n    UNSIGNED_SHORT;\n    ONE;\n    ONE_MINUS_SRC_ALPHA;\n    VERTEX_SHADER;\n    FRAGMENT_SHADER;\n    STATIC_DRAW;\n    COMPILE_STATUS;\n    LINK_STATUS;\n    DYNAMIC_DRAW;\n    COLOR_ATTACHMENT0;\n    //#endregion WebGL Enums\n    constructor(gl) {\n        this.gl = gl;\n        // The following code extracts the current state of the WebGL context\n        // to our local JavaScript cached version of it. This is so we can\n        // avoid making WebGL calls if we don't need to.\n        // We could assume that the WebGL context is in a default state, but\n        // in the future we may want to support restoring a broken WebGL context\n        // and this will help with that.\n        this.activeTextureUnit =\n            gl.getParameter(gl.ACTIVE_TEXTURE) - gl.TEXTURE0;\n        const maxTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n        // save current texture units\n        this.texture2dUnits = new Array(maxTextureUnits)\n            .fill(undefined)\n            .map((_, i) => {\n            this.activeTexture(i);\n            return gl.getParameter(gl.TEXTURE_BINDING_2D);\n        });\n        // restore active texture unit\n        this.activeTexture(this.activeTextureUnit);\n        this.scissorEnabled = gl.isEnabled(gl.SCISSOR_TEST);\n        const scissorBox = gl.getParameter(gl.SCISSOR_BOX);\n        this.scissorX = scissorBox[0];\n        this.scissorY = scissorBox[1];\n        this.scissorWidth = scissorBox[2];\n        this.scissorHeight = scissorBox[3];\n        this.blendEnabled = gl.isEnabled(gl.BLEND);\n        this.blendSrcRgb = gl.getParameter(gl.BLEND_SRC_RGB);\n        this.blendDstRgb = gl.getParameter(gl.BLEND_DST_RGB);\n        this.blendSrcAlpha = gl.getParameter(gl.BLEND_SRC_ALPHA);\n        this.blendDstAlpha = gl.getParameter(gl.BLEND_DST_ALPHA);\n        this.boundArrayBuffer = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\n        this.boundElementArrayBuffer = gl.getParameter(gl.ELEMENT_ARRAY_BUFFER_BINDING);\n        this.curProgram = gl.getParameter(gl.CURRENT_PROGRAM);\n        this.canvas = gl.canvas;\n        // Extract GLenums\n        this.MAX_RENDERBUFFER_SIZE = gl.MAX_RENDERBUFFER_SIZE;\n        this.MAX_TEXTURE_SIZE = gl.MAX_TEXTURE_SIZE;\n        this.MAX_VIEWPORT_DIMS = gl.MAX_VIEWPORT_DIMS;\n        this.MAX_VERTEX_TEXTURE_IMAGE_UNITS = gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        this.MAX_TEXTURE_IMAGE_UNITS = gl.MAX_TEXTURE_IMAGE_UNITS;\n        this.MAX_COMBINED_TEXTURE_IMAGE_UNITS = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS;\n        this.MAX_VERTEX_ATTRIBS = gl.MAX_VERTEX_ATTRIBS;\n        this.MAX_VARYING_VECTORS = gl.MAX_VARYING_VECTORS;\n        this.MAX_VERTEX_UNIFORM_VECTORS = gl.MAX_VERTEX_UNIFORM_VECTORS;\n        this.MAX_FRAGMENT_UNIFORM_VECTORS = gl.MAX_FRAGMENT_UNIFORM_VECTORS;\n        this.TEXTURE_MAG_FILTER = gl.TEXTURE_MAG_FILTER;\n        this.TEXTURE_MIN_FILTER = gl.TEXTURE_MIN_FILTER;\n        this.TEXTURE_WRAP_S = gl.TEXTURE_WRAP_S;\n        this.TEXTURE_WRAP_T = gl.TEXTURE_WRAP_T;\n        this.LINEAR = gl.LINEAR;\n        this.CLAMP_TO_EDGE = gl.CLAMP_TO_EDGE;\n        this.RGBA = gl.RGBA;\n        this.UNSIGNED_BYTE = gl.UNSIGNED_BYTE;\n        this.UNPACK_PREMULTIPLY_ALPHA_WEBGL = gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL;\n        this.UNPACK_FLIP_Y_WEBGL = gl.UNPACK_FLIP_Y_WEBGL;\n        this.FLOAT = gl.FLOAT;\n        this.TRIANGLES = gl.TRIANGLES;\n        this.UNSIGNED_SHORT = gl.UNSIGNED_SHORT;\n        this.ONE = gl.ONE;\n        this.ONE_MINUS_SRC_ALPHA = gl.ONE_MINUS_SRC_ALPHA;\n        this.MAX_VERTEX_TEXTURE_IMAGE_UNITS = gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        this.TRIANGLES = gl.TRIANGLES;\n        this.UNSIGNED_SHORT = gl.UNSIGNED_SHORT;\n        this.VERTEX_SHADER = gl.VERTEX_SHADER;\n        this.FRAGMENT_SHADER = gl.FRAGMENT_SHADER;\n        this.STATIC_DRAW = gl.STATIC_DRAW;\n        this.COMPILE_STATUS = gl.COMPILE_STATUS;\n        this.LINK_STATUS = gl.LINK_STATUS;\n        this.DYNAMIC_DRAW = gl.DYNAMIC_DRAW;\n        this.COLOR_ATTACHMENT0 = gl.COLOR_ATTACHMENT0;\n    }\n    /**\n     * Returns true if the WebGL context is WebGL2\n     *\n     * @returns\n     */\n    isWebGl2() {\n        return isWebGl2(this.gl);\n    }\n    /**\n     * ```\n     * gl.activeTexture(textureUnit + gl.TEXTURE0);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: `textureUnit` is based from 0, not `gl.TEXTURE0`.\n     *\n     * @param textureUnit\n     */\n    activeTexture(textureUnit) {\n        const { gl } = this;\n        if (this.activeTextureUnit !== textureUnit) {\n            gl.activeTexture(textureUnit + gl.TEXTURE0);\n            this.activeTextureUnit = textureUnit;\n        }\n    }\n    /**\n     * ```\n     * gl.bindTexture(gl.TEXTURE_2D, texture);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     *\n     * @param texture\n     */\n    bindTexture(texture) {\n        const { gl, activeTextureUnit, texture2dUnits } = this;\n        if (texture2dUnits[activeTextureUnit] === texture) {\n            return;\n        }\n        texture2dUnits[activeTextureUnit] = texture;\n        gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    }\n    _getActiveTexture() {\n        const { activeTextureUnit, texture2dUnits } = this;\n        return texture2dUnits[activeTextureUnit];\n    }\n    /**\n     * ```\n     * gl.texParameteri(gl.TEXTURE_2D, pname, param);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     *\n     * @param pname\n     * @param param\n     * @returns\n     */\n    texParameteri(pname, param) {\n        const { gl, texture2dParams } = this;\n        const activeTexture = this._getActiveTexture();\n        if (!activeTexture) {\n            throw new Error('No active texture');\n        }\n        let textureParams = texture2dParams.get(activeTexture);\n        if (!textureParams) {\n            textureParams = {};\n            texture2dParams.set(activeTexture, textureParams);\n        }\n        if (textureParams[pname] === param) {\n            return;\n        }\n        textureParams[pname] = param;\n        gl.texParameteri(gl.TEXTURE_2D, pname, param);\n    }\n    texImage2D(level, internalFormat, widthOrFormat, heightOrType, borderOrSource, format, type, pixels) {\n        const { gl } = this;\n        if (format) {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, widthOrFormat, heightOrType, borderOrSource, format, type, pixels);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, widthOrFormat, heightOrType, borderOrSource);\n        }\n    }\n    /**\n     * ```\n     * gl.compressedTexImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, data);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     */\n    compressedTexImage2D(level, internalformat, width, height, border, data) {\n        const { gl } = this;\n        gl.compressedTexImage2D(gl.TEXTURE_2D, level, internalformat, width, height, border, data);\n    }\n    /**\n     * ```\n     * gl.pixelStorei(pname, param);\n     * ```\n     *\n     * @param pname\n     * @param param\n     */\n    pixelStorei(pname, param) {\n        const { gl } = this;\n        gl.pixelStorei(pname, param);\n    }\n    /**\n     * ```\n     * gl.generateMipmap(gl.TEXTURE_2D);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     */\n    generateMipmap() {\n        const { gl } = this;\n        gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    /**\n     * ```\n     * gl.createTexture();\n     * ```\n     *\n     * @returns\n     */\n    createTexture() {\n        const { gl } = this;\n        return gl.createTexture();\n    }\n    /**\n     * ```\n     * gl.deleteTexture(texture);\n     * ```\n     *\n     * @param texture\n     */\n    deleteTexture(texture) {\n        const { gl } = this;\n        if (texture) {\n            this.texture2dParams.delete(texture);\n        }\n        gl.deleteTexture(texture);\n    }\n    /**\n     * ```\n     * gl.viewport(x, y, width, height);\n     * ```\n     */\n    viewport(x, y, width, height) {\n        const { gl } = this;\n        gl.viewport(x, y, width, height);\n    }\n    /**\n     * ```\n     * gl.clearColor(red, green, blue, alpha);\n     * ```\n     *\n     * @param red\n     * @param green\n     * @param blue\n     * @param alpha\n     */\n    clearColor(red, green, blue, alpha) {\n        const { gl } = this;\n        gl.clearColor(red, green, blue, alpha);\n    }\n    /**\n     * ```\n     * gl[\"enable\"|\"disable\"](gl.SCISSOR_TEST);\n     * ```\n     * @param enable\n     */\n    setScissorTest(enable) {\n        const { gl, scissorEnabled } = this;\n        if (enable === scissorEnabled) {\n            return;\n        }\n        if (enable) {\n            gl.enable(gl.SCISSOR_TEST);\n        }\n        else {\n            gl.disable(gl.SCISSOR_TEST);\n        }\n        this.scissorEnabled = enable;\n    }\n    /**\n     * ```\n     * gl.scissor(x, y, width, height);\n     * ```\n     *\n     * @param x\n     * @param y\n     * @param width\n     * @param height\n     */\n    scissor(x, y, width, height) {\n        const { gl, scissorX, scissorY, scissorWidth, scissorHeight } = this;\n        if (x !== scissorX ||\n            y !== scissorY ||\n            width !== scissorWidth ||\n            height !== scissorHeight) {\n            gl.scissor(x, y, width, height);\n            this.scissorX = x;\n            this.scissorY = y;\n            this.scissorWidth = width;\n            this.scissorHeight = height;\n        }\n    }\n    /**\n     * ```\n     * gl[\"enable\"|\"disable\"](gl.BLEND);\n     * ```\n     *\n     * @param blend\n     * @returns\n     */\n    setBlend(blend) {\n        const { gl, blendEnabled } = this;\n        if (blend === blendEnabled) {\n            return;\n        }\n        if (blend) {\n            gl.enable(gl.BLEND);\n        }\n        else {\n            gl.disable(gl.BLEND);\n        }\n        this.blendEnabled = blend;\n    }\n    /**\n     * ```\n     * gl.blendFunc(src, dst);\n     * ```\n     *\n     * @param src\n     * @param dst\n     */\n    blendFunc(src, dst) {\n        const { gl, blendSrcRgb, blendDstRgb, blendSrcAlpha, blendDstAlpha } = this;\n        if (src !== blendSrcRgb ||\n            dst !== blendDstRgb ||\n            src !== blendSrcAlpha ||\n            dst !== blendDstAlpha) {\n            gl.blendFunc(src, dst);\n            this.blendSrcRgb = src;\n            this.blendDstRgb = dst;\n            this.blendSrcAlpha = src;\n            this.blendDstAlpha = dst;\n        }\n    }\n    /**\n     * ```\n     * gl.createBuffer();\n     * ```\n     *\n     * @returns\n     */\n    createBuffer() {\n        const { gl } = this;\n        return gl.createBuffer();\n    }\n    /**\n     * ```\n     * gl.createFramebuffer();\n     * ```\n     * @returns\n     */\n    createFramebuffer() {\n        const { gl } = this;\n        return gl.createFramebuffer();\n    }\n    /**\n     * ```\n     * gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n     * ```\n     *\n     * @param framebuffer\n     */\n    bindFramebuffer(framebuffer) {\n        const { gl } = this;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    }\n    /**\n     * ```\n     * gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.FRAMEBUFFER` and textarget is always `gl.TEXTURE_2D`\n     */\n    framebufferTexture2D(attachment, texture, level) {\n        const { gl } = this;\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture, level);\n    }\n    /**\n     * ```\n     * gl.clear(gl.COLOR_BUFFER_BIT);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Clear mask is always `gl.COLOR_BUFFER_BIT`\n     */\n    clear() {\n        const { gl } = this;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n     * gl.bufferData(gl.ARRAY_BUFFER, data, usage);\n     * ```\n     *\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.bufferData` are combined into one function.\n     *\n     * @param buffer\n     * @param data\n     * @param usage\n     */\n    arrayBufferData(buffer, data, usage) {\n        const { gl, boundArrayBuffer } = this;\n        if (boundArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            this.boundArrayBuffer = buffer;\n        }\n        gl.bufferData(gl.ARRAY_BUFFER, data, usage);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n     * gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, usage);\n     * ```\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.bufferData` are combined into one function.\n     *\n     * @param buffer\n     * @param data\n     * @param usage\n     */\n    elementArrayBufferData(buffer, data, usage) {\n        const { gl, boundElementArrayBuffer } = this;\n        if (boundElementArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n            this.boundElementArrayBuffer = buffer;\n        }\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, usage);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n     * gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n     * ```\n     *\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.vertexAttribPointer` are combined into one function.\n     *\n     * @param buffer\n     * @param index\n     * @param size\n     * @param type\n     * @param normalized\n     * @param stride\n     * @param offset\n     */\n    vertexAttribPointer(buffer, index, size, type, normalized, stride, offset) {\n        const { gl, boundArrayBuffer } = this;\n        if (boundArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            this.boundArrayBuffer = buffer;\n        }\n        gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n    /**\n     * ```\n     * gl.useProgram(program);\n     * ```\n     *\n     * @param program\n     * @returns\n     */\n    useProgram(program) {\n        const { gl, curProgram } = this;\n        if (curProgram === program) {\n            return;\n        }\n        gl.useProgram(program);\n        this.curProgram = program;\n    }\n    setUniform(type, location, ...args) {\n        const { gl, programUniforms } = this;\n        let uniforms = programUniforms.get(this.curProgram);\n        if (!uniforms) {\n            uniforms = new Map();\n            programUniforms.set(this.curProgram, uniforms);\n        }\n        const uniformArgs = uniforms.get(location);\n        if (!uniformArgs || !compareArrays(uniformArgs, args)) {\n            uniforms.set(location, args);\n            gl[type](location, ...args);\n        }\n    }\n    /**\n     * ```\n     * gl.getParameter(pname);\n     * ```\n     *\n     * @param pname\n     * @returns\n     */\n    getParameter(pname) {\n        const { gl } = this;\n        return gl.getParameter(pname);\n    }\n    /**\n     * ```\n     * gl.drawElements(mode, count, type, offset);\n     * ```\n     *\n     * @param mode\n     * @param count\n     * @param type\n     * @param offset\n     */\n    drawElements(mode, count, type, offset) {\n        const { gl } = this;\n        gl.drawElements(mode, count, type, offset);\n    }\n    /**\n     * ```\n     * gl.drawArrays(mode, first, count);\n     * ```\n     *\n     * @param name\n     * @returns\n     */\n    getExtension(name) {\n        const { gl } = this;\n        return gl.getExtension(name);\n    }\n    /**\n     * ```\n     * gl.createVertexArray();\n     * ```\n     *\n     * @returns\n     */\n    createVertexArray() {\n        const { gl } = this;\n        assertTruthy(gl instanceof WebGL2RenderingContext);\n        return gl.createVertexArray();\n    }\n    /**\n     * ```\n     * gl.bindVertexArray(vertexArray);\n     * ```\n     *\n     * @param vertexArray\n     */\n    bindVertexArray(vertexArray) {\n        const { gl } = this;\n        assertTruthy(gl instanceof WebGL2RenderingContext);\n        gl.bindVertexArray(vertexArray);\n    }\n    /**\n     * ```\n     * gl.getAttribLocation(program, name);\n     * ```\n     *\n     * @param program\n     * @param name\n     * @returns\n     */\n    getAttribLocation(program, name) {\n        const { gl } = this;\n        return gl.getAttribLocation(program, name);\n    }\n    /**\n     * ```\n     * gl.getUniformLocation(program, name);\n     * ```\n     *\n     * @param program\n     * @param name\n     * @returns\n     */\n    getUniformLocation(program, name) {\n        const { gl } = this;\n        return gl.getUniformLocation(program, name);\n    }\n    /**\n     * ```\n     * gl.enableVertexAttribArray(index);\n     * ```\n     *\n     * @param index\n     */\n    enableVertexAttribArray(index) {\n        const { gl } = this;\n        gl.enableVertexAttribArray(index);\n    }\n    /**\n     * ```\n     * gl.disableVertexAttribArray(index);\n     * ```\n     *\n     * @param index\n     */\n    disableVertexAttribArray(index) {\n        const { gl } = this;\n        gl.disableVertexAttribArray(index);\n    }\n    /**\n     * ```\n     * gl.createShader(type);\n     * ```\n     *\n     * @param type\n     * @returns\n     */\n    createShader(type) {\n        const { gl } = this;\n        return gl.createShader(type);\n    }\n    /**\n     * ```\n     * gl.compileShader(shader);\n     * ```\n     *\n     * @param shader\n     * @returns\n     */\n    compileShader(shader) {\n        const { gl } = this;\n        gl.compileShader(shader);\n    }\n    /**\n     * ```\n     * gl.attachShader(program, shader);\n     * ```\n     *\n     * @param program\n     * @param shader\n     */\n    attachShader(program, shader) {\n        const { gl } = this;\n        gl.attachShader(program, shader);\n    }\n    /**\n     * ```\n     * gl.linkProgram(program);\n     * ```\n     *\n     * @param program\n     */\n    linkProgram(program) {\n        const { gl } = this;\n        gl.linkProgram(program);\n    }\n    /**\n     * ```\n     * gl.deleteProgram(shader);\n     * ```\n     *\n     * @param shader\n     */\n    deleteProgram(shader) {\n        const { gl } = this;\n        gl.deleteProgram(shader);\n    }\n    /**\n     * ```\n     * gl.getShaderParameter(shader, pname);\n     * ```\n     *\n     * @param shader\n     * @param pname\n     */\n    getShaderParameter(shader, pname) {\n        const { gl } = this;\n        return gl.getShaderParameter(shader, pname);\n    }\n    /**\n     * ```\n     * gl.getShaderInfoLog(shader);\n     * ```\n     *\n     * @param shader\n     */\n    getShaderInfoLog(shader) {\n        const { gl } = this;\n        return gl.getShaderInfoLog(shader);\n    }\n    /**\n     * ```\n     * gl.createProgram();\n     * ```\n     *\n     * @returns\n     */\n    createProgram() {\n        const { gl } = this;\n        return gl.createProgram();\n    }\n    /**\n     * ```\n     * gl.getProgramParameter(program, pname);\n     * ```\n     *\n     * @param program\n     * @param pname\n     * @returns\n     */\n    getProgramParameter(program, pname) {\n        const { gl } = this;\n        return gl.getProgramParameter(program, pname);\n    }\n    /**\n     * ```\n     * gl.getProgramInfoLog(program);\n     * ```\n     *\n     * @param program\n     * @returns\n     */\n    getProgramInfoLog(program) {\n        const { gl } = this;\n        return gl.getProgramInfoLog(program);\n    }\n    /**\n     * ```\n     * gl.shaderSource(shader, source);\n     * ```\n     *\n     * @param shader\n     * @param source\n     */\n    shaderSource(shader, source) {\n        const { gl } = this;\n        gl.shaderSource(shader, source);\n    }\n    /**\n     * ```\n     * gl.deleteShader(shader);\n     * ```\n     *\n     * @param shader\n     */\n    deleteShader(shader) {\n        const { gl } = this;\n        gl.deleteShader(shader);\n    }\n}\n/**\n * Compare two arrays for equality.\n *\n * @remarks\n * This function will not try to compare nested arrays or Float32Arrays and\n * instead will always return false when they are encountered.\n *\n * @param a\n * @param b\n * @returns\n */\nexport function compareArrays(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    return a.every((v, i) => {\n        // Don't bother to compare nested arrays or Float32Arrays\n        if (Array.isArray(v) || v instanceof Float32Array) {\n            return false;\n        }\n        else {\n            return v === b[i];\n        }\n    });\n}\n//# sourceMappingURL=WebGlContextWrapper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\nexport class RenderTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = RenderTexture.resolveDefaults(props || {});\n    }\n    get width() {\n        return this.props.width;\n    }\n    set width(value) {\n        this.props.width = value;\n    }\n    get height() {\n        return this.props.height;\n    }\n    set height(value) {\n        this.props.height = value;\n    }\n    async getTextureData() {\n        return {\n            data: null,\n            premultiplyAlpha: null,\n        };\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width || 256,\n            height: props.height || 256,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=RenderTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2024 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nexport class WebGlCoreCtxRenderTexture extends WebGlCoreCtxTexture {\n    framebuffer;\n    constructor(glw, memManager, textureSource) {\n        super(glw, memManager, textureSource);\n        // Create Framebuffer object\n        const framebuffer = glw.createFramebuffer();\n        assertTruthy(framebuffer, 'Unable to create framebuffer');\n        this.framebuffer = framebuffer;\n    }\n    async onLoadRequest() {\n        const { glw, memManager } = this;\n        const nativeTexture = (this._nativeCtxTexture =\n            this.createNativeCtxTexture());\n        const { width, height } = this.textureSource;\n        // Set the dimensions of the render texture\n        glw.texImage2D(0, glw.RGBA, width, height, 0, glw.RGBA, glw.UNSIGNED_BYTE, null);\n        // Update the texture memory manager\n        memManager.setTextureMemUse(this, width * height * 4);\n        // Bind the framebuffer\n        glw.bindFramebuffer(this.framebuffer);\n        // Attach the texture to the framebuffer\n        glw.framebufferTexture2D(glw.COLOR_ATTACHMENT0, nativeTexture, 0);\n        // Unbind the framebuffer\n        glw.bindFramebuffer(null);\n        return {\n            width,\n            height,\n        };\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxRenderTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, createWebGLContext, hasOwn, mergeColorAlphaPremultiplied, } from '../../../utils.js';\nimport { CoreRenderer } from '../CoreRenderer.js';\nimport { WebGlCoreRenderOp } from './WebGlCoreRenderOp.js';\nimport { createIndexBuffer, getWebGlParameters, getWebGlExtensions, } from './internal/RendererUtils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { ColorTexture } from '../../textures/ColorTexture.js';\nimport { SubTexture } from '../../textures/SubTexture.js';\nimport { WebGlCoreCtxSubTexture } from './WebGlCoreCtxSubTexture.js';\nimport { CoreShaderManager } from '../../CoreShaderManager.js';\nimport { BufferCollection } from './internal/BufferCollection.js';\nimport { compareRect, getNormalizedRgbaComponents, } from '../../lib/utils.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nimport { RoundedRectangle } from './shaders/RoundedRectangle.js';\nimport { ContextSpy } from '../../lib/ContextSpy.js';\nimport { WebGlContextWrapper } from '../../lib/WebGlContextWrapper.js';\nimport { RenderTexture } from '../../textures/RenderTexture.js';\nimport { WebGlCoreCtxRenderTexture } from './WebGlCoreCtxRenderTexture.js';\nconst WORDS_PER_QUAD = 24;\nconst BYTES_PER_QUAD = WORDS_PER_QUAD * 4;\nexport class WebGlCoreRenderer extends CoreRenderer {\n    //// WebGL Native Context and Data\n    glw;\n    system;\n    //// Core Managers\n    txManager;\n    txMemManager;\n    shManager;\n    //// Options\n    options;\n    //// Persistent data\n    quadBuffer = new ArrayBuffer(1024 * 1024 * 4);\n    fQuadBuffer = new Float32Array(this.quadBuffer);\n    uiQuadBuffer = new Uint32Array(this.quadBuffer);\n    renderOps = [];\n    //// Render Op / Buffer Filling State\n    curBufferIdx = 0;\n    curRenderOp = null;\n    rttNodes = [];\n    activeRttNode = null;\n    //// Default Shader\n    defaultShader;\n    quadBufferCollection;\n    /**\n     * White pixel texture used by default when no texture is specified.\n     */\n    defaultTexture;\n    /**\n     * Whether the renderer is currently rendering to a texture.\n     */\n    renderToTextureActive = false;\n    constructor(options) {\n        super(options.stage);\n        const { canvas, clearColor, bufferMemory } = options;\n        this.options = options;\n        this.txManager = options.txManager;\n        this.txMemManager = options.txMemManager;\n        this.shManager = options.shManager;\n        this.defaultTexture = new ColorTexture(this.txManager);\n        // When the default texture is loaded, request a render in case the\n        // RAF is paused. Fixes: https://github.com/lightning-js/renderer/issues/123\n        this.defaultTexture.once('loaded', () => {\n            this.stage.requestRender();\n        });\n        const gl = createWebGLContext(canvas, options.contextSpy);\n        const glw = (this.glw = new WebGlContextWrapper(gl));\n        const color = getNormalizedRgbaComponents(clearColor);\n        glw.viewport(0, 0, canvas.width, canvas.height);\n        glw.clearColor(color[0], color[1], color[2], color[3]);\n        glw.setBlend(true);\n        glw.blendFunc(glw.ONE, glw.ONE_MINUS_SRC_ALPHA);\n        createIndexBuffer(glw, bufferMemory);\n        this.system = {\n            parameters: getWebGlParameters(this.glw),\n            extensions: getWebGlExtensions(this.glw),\n        };\n        this.shManager.renderer = this;\n        this.defaultShader = this.shManager.loadShader('DefaultShader').shader;\n        const quadBuffer = glw.createBuffer();\n        assertTruthy(quadBuffer);\n        const stride = 6 * Float32Array.BYTES_PER_ELEMENT;\n        this.quadBufferCollection = new BufferCollection([\n            {\n                buffer: quadBuffer,\n                attributes: {\n                    a_position: {\n                        name: 'a_position',\n                        size: 2,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 0, // start at the beginning of the buffer\n                    },\n                    a_textureCoordinate: {\n                        name: 'a_textureCoordinate',\n                        size: 2,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 2 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_color: {\n                        name: 'a_color',\n                        size: 4,\n                        type: glw.UNSIGNED_BYTE,\n                        normalized: true,\n                        stride,\n                        offset: 4 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_textureIndex: {\n                        name: 'a_textureIndex',\n                        size: 1,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 5 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                },\n            },\n        ]);\n    }\n    reset() {\n        const { glw } = this;\n        this.curBufferIdx = 0;\n        this.curRenderOp = null;\n        this.renderOps.length = 0;\n        glw.setScissorTest(false);\n        glw.clear();\n    }\n    getShaderManager() {\n        return this.shManager;\n    }\n    createCtxTexture(textureSource) {\n        if (textureSource instanceof SubTexture) {\n            return new WebGlCoreCtxSubTexture(this.glw, this.txMemManager, textureSource);\n        }\n        else if (textureSource instanceof RenderTexture) {\n            return new WebGlCoreCtxRenderTexture(this.glw, this.txMemManager, textureSource);\n        }\n        return new WebGlCoreCtxTexture(this.glw, this.txMemManager, textureSource);\n    }\n    /**\n     * This function adds a quad (a rectangle composed of two triangles) to the WebGL rendering pipeline.\n     *\n     * It takes a set of options that define the quad's properties, such as its dimensions, colors, texture, shader, and transformation matrix.\n     * The function first updates the shader properties with the current dimensions if necessary, then sets the default texture if none is provided.\n     * It then checks if a new render operation is needed, based on the current shader and clipping rectangle.\n     * If a new render operation is needed, it creates one and updates the current render operation.\n     * The function then adjusts the texture coordinates based on the texture options and adds the texture to the texture manager.\n     *\n     * Finally, it calculates the vertices for the quad, taking into account any transformations, and adds them to the quad buffer.\n     * The function updates the length and number of quads in the current render operation, and updates the current buffer index.\n     */\n    addQuad(params) {\n        const { fQuadBuffer, uiQuadBuffer } = this;\n        const { width, height, colorTl, colorTr, colorBl, colorBr, textureOptions, shader, shaderProps, alpha, clippingRect, tx, ty, ta, tb, tc, td, rtt: renderToTexture, parentHasRenderTexture, framebufferDimensions, } = params;\n        let { texture } = params;\n        /**\n         * If the shader props contain any automatic properties, update it with the\n         * current dimensions that will be used to render the quad.\n         */\n        if (shaderProps && hasOwn(shaderProps, '$dimensions')) {\n            const dimensions = shaderProps.$dimensions;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            dimensions.width = width;\n            dimensions.height = height;\n        }\n        texture = texture ?? this.defaultTexture;\n        assertTruthy(texture instanceof Texture, 'Invalid texture type');\n        let { curBufferIdx: bufferIdx, curRenderOp } = this;\n        const targetDims = {\n            width,\n            height,\n        };\n        const targetShader = shader || this.defaultShader;\n        assertTruthy(targetShader instanceof WebGlCoreShader);\n        if (!this.reuseRenderOp(params)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.newRenderOp(targetShader, shaderProps, alpha, targetDims, clippingRect, bufferIdx, renderToTexture, parentHasRenderTexture, framebufferDimensions);\n            curRenderOp = this.curRenderOp;\n            assertTruthy(curRenderOp);\n        }\n        const flipX = textureOptions?.flipX ?? false;\n        const flipY = textureOptions?.flipY ?? false;\n        let texCoordX1 = 0;\n        let texCoordY1 = 0;\n        let texCoordX2 = 1;\n        let texCoordY2 = 1;\n        if (texture instanceof SubTexture) {\n            const { x: tx, y: ty, width: tw, height: th } = texture.props;\n            const { width: parentW = 0, height: parentH = 0 } = texture.parentTexture\n                .dimensions || { width: 0, height: 0 };\n            texCoordX1 = tx / parentW;\n            texCoordX2 = texCoordX1 + tw / parentW;\n            texCoordY1 = ty / parentH;\n            texCoordY2 = texCoordY1 + th / parentH;\n            texture = texture.parentTexture;\n        }\n        // Flip texture coordinates if dictated by texture options\n        if (flipX) {\n            [texCoordX1, texCoordX2] = [texCoordX2, texCoordX1];\n        }\n        if (flipY) {\n            [texCoordY1, texCoordY2] = [texCoordY2, texCoordY1];\n        }\n        const { txManager } = this.stage;\n        const ctxTexture = txManager.getCtxTexture(texture);\n        assertTruthy(ctxTexture instanceof WebGlCoreCtxTexture);\n        const textureIdx = this.addTexture(ctxTexture, bufferIdx);\n        curRenderOp = this.curRenderOp;\n        assertTruthy(curRenderOp);\n        // render quad advanced\n        if (tb !== 0 || tc !== 0) {\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta;\n            fQuadBuffer[bufferIdx++] = ty + width * tc;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + width * tc + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        else {\n            // Calculate the right corner of the quad\n            // multiplied by the scale\n            const rightCornerX = tx + width * ta;\n            const rightCornerY = ty + height * td;\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = ty;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        // Update the length of the current render op\n        curRenderOp.length += WORDS_PER_QUAD;\n        curRenderOp.numQuads++;\n        this.curBufferIdx = bufferIdx;\n    }\n    /**\n     * Replace the existing RenderOp with a new one that uses the specified Shader\n     * and starts at the specified buffer index.\n     *\n     * @param shader\n     * @param bufferIdx\n     */\n    newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx, renderToTexture, parentHasRenderTexture, framebufferDimensions) {\n        const curRenderOp = new WebGlCoreRenderOp(this.glw, this.options, this.quadBufferCollection, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, 0, // Z-Index is only used for explictly added Render Ops\n        renderToTexture, parentHasRenderTexture, framebufferDimensions);\n        this.curRenderOp = curRenderOp;\n        this.renderOps.push(curRenderOp);\n    }\n    /**\n     * Add a texture to the current RenderOp. If the texture cannot be added to the\n     * current RenderOp, a new RenderOp will be created and the texture will be added\n     * to that one.\n     *\n     * If the texture cannot be added to the new RenderOp, an error will be thrown.\n     *\n     * @param texture\n     * @param bufferIdx\n     * @param recursive\n     * @returns Assigned Texture Index of the texture in the render op\n     */\n    addTexture(texture, bufferIdx, recursive) {\n        const { curRenderOp } = this;\n        assertTruthy(curRenderOp);\n        const textureIdx = curRenderOp.addTexture(texture);\n        // TODO: Refactor to be more DRY\n        if (textureIdx === 0xffffffff) {\n            if (recursive) {\n                throw new Error('Unable to add texture to render op');\n            }\n            const { shader, shaderProps, dimensions, clippingRect, alpha } = curRenderOp;\n            this.newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx);\n            return this.addTexture(texture, bufferIdx, true);\n        }\n        return textureIdx;\n    }\n    /**\n     * Test if the current Render operation can be reused for the specified parameters.\n     * @param params\n     * @returns\n     */\n    reuseRenderOp(params) {\n        const { shader, shaderProps, parentHasRenderTexture, rtt, clippingRect } = params;\n        const targetShader = shader || this.defaultShader;\n        // Switching shader program will require a new render operation\n        if (this.curRenderOp?.shader !== targetShader) {\n            return false;\n        }\n        // Switching clipping rect will require a new render operation\n        if (!compareRect(this.curRenderOp.clippingRect, clippingRect)) {\n            return false;\n        }\n        // Force new render operation if rendering to texture\n        // @todo: This needs to be improved, render operations could also be reused\n        // for rendering to texture\n        if (parentHasRenderTexture || rtt) {\n            return false;\n        }\n        // Check if the shader can batch the shader properties\n        if (this.curRenderOp.shader !== this.defaultShader &&\n            (!shaderProps ||\n                !this.curRenderOp.shader.canBatchShaderProps(this.curRenderOp.shaderProps, shaderProps))) {\n            return false;\n        }\n        // Render operation can be reused\n        return true;\n    }\n    /**\n     * add RenderOp to the render pipeline\n     */\n    addRenderOp(renderable) {\n        this.renderOps.push(renderable);\n        this.curRenderOp = null;\n    }\n    /**\n     * Render the current set of RenderOps to render to the specified surface.\n     *\n     * TODO: 'screen' is the only supported surface at the moment.\n     *\n     * @param surface\n     */\n    render(surface = 'screen') {\n        const { glw, quadBuffer } = this;\n        const arr = new Float32Array(quadBuffer, 0, this.curBufferIdx);\n        const buffer = this.quadBufferCollection.getBuffer('a_position') ?? null;\n        glw.arrayBufferData(buffer, arr, glw.STATIC_DRAW);\n        const doLog = false; // idx++ % 100 === 0;\n        if (doLog) {\n            console.log('renderOps', this.renderOps.length);\n        }\n        this.renderOps.forEach((renderOp, i) => {\n            if (doLog) {\n                console.log('Quads per operation', renderOp.numQuads);\n            }\n            renderOp.draw();\n        });\n    }\n    renderToTexture(node) {\n        for (let i = 0; i < this.rttNodes.length; i++) {\n            if (this.rttNodes[i] === node) {\n                return;\n            }\n        }\n        // @todo: Better bottom up rendering order\n        this.rttNodes.unshift(node);\n    }\n    renderRTTNodes() {\n        const { glw } = this;\n        const { txManager } = this.stage;\n        // Render all associated RTT nodes to their textures\n        for (let i = 0; i < this.rttNodes.length; i++) {\n            const node = this.rttNodes[i];\n            // Skip nodes that don't have RTT updates\n            if (!node || !node.hasRTTupdates) {\n                continue;\n            }\n            // Set the active RTT node to the current node\n            // So we can prevent rendering children of nested RTT nodes\n            this.activeRttNode = node;\n            assertTruthy(node.texture, 'RTT node missing texture');\n            const ctxTexture = txManager.getCtxTexture(node.texture);\n            assertTruthy(ctxTexture instanceof WebGlCoreCtxRenderTexture);\n            this.renderToTextureActive = true;\n            // Bind the the texture's framebuffer\n            glw.bindFramebuffer(ctxTexture.framebuffer);\n            glw.viewport(0, 0, ctxTexture.w, ctxTexture.h);\n            glw.clear();\n            // Render all associated quads to the texture\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                if (!child) {\n                    continue;\n                }\n                child.update(this.stage.deltaTime, {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                    valid: false,\n                });\n                this.stage.addQuads(child);\n                child.hasRTTupdates = false;\n            }\n            // Render all associated quads to the texture\n            this.render();\n            // Reset render operations\n            this.renderOps.length = 0;\n            node.hasRTTupdates = false;\n        }\n        // Bind the default framebuffer\n        glw.bindFramebuffer(null);\n        glw.viewport(0, 0, this.glw.canvas.width, this.glw.canvas.height);\n        this.renderToTextureActive = false;\n    }\n}\n//# sourceMappingURL=WebGlCoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const SpecialCodepoints = {\n    LINE_FEED: 0x0a,\n    CARRIAGE_RETURN: 0x0d,\n    SPACE: 0x20,\n    TAB: 0x09,\n    ZERO_WIDTH_SPACE: 0x200b,\n    ZERO_WIDTH_NON_JOINER: 0x200c,\n    ZERO_WIDTH_JOINER: 0x200d,\n    LEFT_TO_RIGHT_MARK: 0x200e,\n    RIGHT_TO_LEFT_MARK: 0x200f,\n    LEFT_TO_RIGHT_EMBEDDING: 0x202a,\n    RIGHT_TO_LEFT_EMBEDDING: 0x202b,\n    POP_DIRECTIONAL_FORMATTING: 0x202c,\n    LEFT_TO_RIGHT_OVERRIDE: 0x202d,\n    RIGHT_TO_LEFT_OVERRIDE: 0x202e,\n    LINE_SEPARATOR: 0x2028,\n    PARAGRAPH_SEPARATOR: 0x2029,\n    OBJECT_REPLACEMENT_CHARACTER: 0xfffc,\n    REPLACEMENT_CHARACTER: 0xfffd,\n    ZERO_WIDTH_NO_BREAK_SPACE: 0xfeff,\n    LEFT_TO_RIGHT_ISOLATE: 0x2066,\n    RIGHT_TO_LEFT_ISOLATE: 0x2067,\n    FIRST_STRONG_ISOLATE: 0x2068,\n    POP_DIRECTIONAL_ISOLATE: 0x2069,\n    INHIBIT_SYMMETRIC_SWAPPING: 0x206a,\n    ACTIVATE_SYMMETRIC_SWAPPING: 0x206b,\n    INHIBIT_ARABIC_FORM_SHAPING: 0x206c,\n    ACTIVATE_ARABIC_FORM_SHAPING: 0x206d,\n    NATIONAL_DIGIT_SHAPES: 0x206e,\n    NOMINAL_DIGIT_SHAPES: 0x206f,\n    LEFT_TO_RIGHT_BOUNDARY: 0x200e,\n    RIGHT_TO_LEFT_BOUNDARY: 0x200f,\n};\n//# sourceMappingURL=SpecialCodepoints.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class FontShaper {\n}\n//# sourceMappingURL=FontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SpecialCodepoints } from '../../../renderers/SdfTextRenderer/internal/SpecialCodepoints.js';\nimport { FontShaper, } from './FontShaper.js';\nexport class SdfFontShaper extends FontShaper {\n    data;\n    glyphMap;\n    kernings;\n    constructor(data, glyphMap) {\n        super();\n        this.data = data;\n        this.glyphMap = glyphMap;\n        const kernings = (this.kernings = {});\n        data.kernings.forEach((kerning) => {\n            const second = kerning.second;\n            const firsts = (kernings[second] = kernings[second] || {});\n            firsts[kerning.first] = kerning.amount;\n        });\n        this.kernings = kernings;\n    }\n    *shapeText(props, codepoints) {\n        let codepointResult;\n        let lastGlyphId = undefined;\n        while ((codepointResult = codepoints.peek()) && !codepointResult.done) {\n            const codepoint = codepointResult.value;\n            const glyph = this.glyphMap.get(codepoint);\n            codepoints.next();\n            if (glyph !== undefined) {\n                // We found a glyph for this codepoint\n                // Yield the mapped glyph info\n                /**\n                 * Kerning includes any possible additional letter spacing\n                 */\n                const kerning = lastGlyphId !== undefined\n                    ? (this.kernings[glyph.id]?.[lastGlyphId] || 0) +\n                        props.letterSpacing\n                    : 0;\n                lastGlyphId = glyph.id;\n                yield {\n                    mapped: true,\n                    glyphId: glyph.id,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                    xAdvance: glyph.xadvance + kerning,\n                    yAdvance: 0,\n                    xOffset: glyph.xoffset + kerning,\n                    yOffset: glyph.yoffset,\n                    xBearing: 0,\n                    yBearing: 0,\n                    width: glyph.width,\n                    height: glyph.height,\n                };\n            }\n            else {\n                // We didn't find a glyph for this codepoint\n                // Yield the unmapped codepoint info\n                // If this codepoint is a linebreak, we should reset the last glyph id\n                // so that the next glyph will not be kerned with the last glyph of the\n                // previous line.\n                if (codepoint === SpecialCodepoints.LINE_FEED) {\n                    lastGlyphId = undefined;\n                }\n                yield {\n                    mapped: false,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                };\n            }\n        }\n    }\n}\n//# sourceMappingURL=SdfFontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// import type { Renderer } from '../../../Renderer';\nimport { assertTruthy } from '../../../../utils.js';\nimport { WebGlCoreRenderer } from '../../../renderers/webgl/WebGlCoreRenderer.js';\nimport { ImageTexture } from '../../../textures/ImageTexture.js';\nimport { TrFontFace } from '../TrFontFace.js';\nimport { SdfFontShaper } from './internal/SdfFontShaper.js';\nexport class SdfTrFontFace extends TrFontFace {\n    type;\n    texture;\n    /**\n     * Height of the tallest character in the font including the whitespace above it\n     */\n    maxCharHeight = 0;\n    data;\n    shaper;\n    glyphMap = new Map();\n    constructor(fontFamily, descriptors, type, stage, atlasUrl, atlasDataUrl) {\n        super(fontFamily, descriptors);\n        this.type = type;\n        const renderer = stage.renderer;\n        assertTruthy(renderer instanceof WebGlCoreRenderer, 'SDF Font Faces can only be used with the WebGL Renderer');\n        this.texture = stage.txManager.loadTexture('ImageTexture', {\n            src: atlasUrl,\n            // IMPORTANT: The SDF shader requires the alpha channel to NOT be\n            // premultiplied on the atlas texture. If it is premultiplied, the\n            // rendering of SDF glyphs (especially single-channel SDF fonts) will\n            // be very jagged.\n            premultiplyAlpha: false,\n        }, {\n            preload: true,\n        });\n        this.texture.on('loaded', () => {\n            this.checkLoaded();\n        });\n        // Set this.data to the fetched data from dataUrl\n        fetch(atlasDataUrl)\n            .then(async (response) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            this.data = await response.json();\n            // Add all the glyphs to the glyph map\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            let maxCharHeight = 0;\n            this.data.chars.forEach((glyph) => {\n                this.glyphMap.set(glyph.id, glyph);\n                const charHeight = glyph.yoffset + glyph.height;\n                if (charHeight > maxCharHeight) {\n                    maxCharHeight = charHeight;\n                }\n            });\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.maxCharHeight = maxCharHeight;\n            // We know `data` is defined here, because we just set it\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.shaper = new SdfFontShaper(this.data, this.glyphMap);\n            this.checkLoaded();\n        })\n            .catch(console.error);\n    }\n    getAtlasEntry(glyphId) {\n        const glyph = this.glyphMap.get(glyphId);\n        if (glyph === undefined) {\n            throw new Error(`Glyph ${glyphId} not found in font ${this.fontFamily}`);\n        }\n        return {\n            x: glyph.x,\n            y: glyph.y,\n            width: glyph.width,\n            height: glyph.height,\n        };\n    }\n    checkLoaded() {\n        if (this.loaded)\n            return;\n        if (this.texture.state === 'loaded' && this.data) {\n            this.loaded = true;\n            this.emit('loaded');\n        }\n    }\n}\n//# sourceMappingURL=SdfTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Base class for Core extensions.\n *\n * @remarks\n * Core extensions are used to extend the Core Renderer with custom code such as\n * custom fonts, custom shaders, custom textures, custom animation functions,\n * and more.\n */\nexport class CoreExtension {\n}\n//# sourceMappingURL=CoreExtension.js.map"],"names":["createWebGLContext","canvas","contextSpy","config","alpha","antialias","depth","stencil","desynchronized","powerPreference","premultipliedAlpha","preserveDrawingBuffer","gl","getContext","Error","Proxy","get","target","prop","value","increment","String","bind","assertTruthy","condition","message","isProductionEnvironment","mergeColorProgress","rgba1","rgba2","p","r1","Math","trunc","g1","b1","a1","r2","g2","b2","a2","r","round","g","b","a","mergeColorAlpha","rgba","mergeColorAlphaPremultiplied","flipEndianess","newAlpha","hasOwn","obj","Object","prototype","hasOwnProperty","call","EventEmitter","constructor","_defineProperty","on","event","listener","listeners","eventListeners","push","off","index","indexOf","splice","once","onceListener","data","emit","forEach","removeAllListeners","exports","CoreShader","makeCacheKey","props","resolveDefaults","createShader","glw","type","source","shader","shaderSource","compileShader","success","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","deleteShader","createProgram","vertexShader","fragmentShader","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","undefined","isWebGl2","self","WebGL2RenderingContext","WebGlCoreShader","options","renderer","supportsIndexedTextures","webGl2","requiredExtensions","webgl2Extensions","webgl1Extensions","glVersion","extensionName","getExtension","name","shaderSources","fragment","vertex","textureUnits","system","parameters","MAX_VERTEX_TEXTURE_IMAGE_UNITS","vertexSource","Function","fragmentSource","VERTEX_SHADER","FRAGMENT_SHADER","vao","createVertexArray","bindVertexArray","attributeLocations","attributeBuffers","attributeNames","attributes","attributeName","location","getAttribLocation","buffer","createBuffer","uniformLocations","uniformTypes","uniforms","uniform","getUniformLocation","warn","bindBufferAttribute","attribute","enableVertexAttribArray","vertexAttribPointer","size","normalized","stride","offset","disableAttribute","disableVertexAttribArray","disableAttributes","loc","boundBufferCollection","canBatchShaderProps","propsA","propsB","bindRenderOp","renderOp","bindBufferCollection","buffers","textures","length","bindTextures","parentHasRenderTexture","renderToTexture","_ref","framebufferDimensions","width","height","setUniform","Float32Array","pixelRatio","dimensions","$dimensions","$alpha","bindProps","resolvedBuffer","getBuffer","resolvedInfo","getAttributeInfo","attach","useProgram","detach","Texture","txManager","Set","setRenderableOwner","owner","renderable","renderableOwners","add","delete","setState","state","args","loadedArgs","failedArgs","error","getNormalizedRgbaComponents","getNormalizedAlphaComponent","getRgbaString","color","floor","toFixed","createBound","x1","y1","x2","y2","out","intersectBound","intersection","max","min","boundsOverlap","convertBoundToRect","bound","x","y","intersectRect","copyRect","compareRect","boundInsideBound","bound1","bound2","isBoundPositive","TrFontFace","fontFamily","descriptors","_objectSpread","style","weight","stretch","convertToCssFontFaceDescriptors","unicodeRange","variant","featureSettings","display","CoreContextTexture","memManager","textureSource","CoreRenderer","stage","CoreRenderOp","WebGlCoreRenderOp","shaderProps","clippingRect","bufferIdx","zIndex","maxTextures","getParameter","addTexture","texture","existingIdx","findIndex","t","newIdx","draw","shManager","useShader","quadIdx","valid","_this$clippingRect","canvasHeight","clipX","clipWidth","clipHeight","clipY","setScissorTest","scissor","drawElements","TRIANGLES","numQuads","UNSIGNED_SHORT","getWebGlParameters","params","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_SIZE","MAX_VIEWPORT_DIMS","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_ATTRIBS","MAX_VARYING_VECTORS","MAX_VERTEX_UNIFORM_VECTORS","MAX_FRAGMENT_UNIFORM_VECTORS","keys","key","getWebGlExtensions","extensions","ANGLE_instanced_arrays","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_astc","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_etc1","WEBGL_compressed_texture_pvrtc","WEBKIT_WEBGL_compressed_texture_pvrtc","WEBGL_compressed_texture_s3tc_srgb","OES_vertex_array_object","createIndexBuffer","maxQuads","indices","Uint16Array","i","j","elementArrayBufferData","STATIC_DRAW","isHTMLImageElement","memize","fn","head","tail","memoized","node","len","arguments","searchCache","next","prev","val","Array","apply","maxSize","clear","isPowerOfTwo","getTimingBezier","c","d","xc","xb","xa","yc","yb","ya","time","cbx","cbxd","dx","it","minT","maxT","getTimingFunction","memo","str","s","parts","substr","split","parseFloat","isNaN","hypot","sqrt","TRANSPARENT_TEXTURE_DATA","Uint8Array","WebGlCoreCtxTexture","ctxTexture","_state","load","_nativeCtxTexture","w","_w","h","_h","createNativeCtxTexture","onLoadRequest","then","catch","err","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$textureSource","textureData","_mipmaps$","_textureData$data","mipmaps","_textureData$data$wid","_width","_textureData$data$hei","_height","glInternalFormat","view","wrap","_callee$","_context","texImage2D","RGBA","UNSIGNED_BYTE","setTextureMemUse","byteLength","getTextureData","sent","abrupt","activeTexture","ImageBitmap","ImageData","bindTexture","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","generateMipmap","DataView","ArrayBuffer","compressedTexImage2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","stop","free","deleteTexture","nativeTexture","createTexture","ColorTexture","_this2","_callee2","pixelData32","pixelData8","_callee2$","_context2","Uint32Array","Uint8ClampedArray","resolvedProps","SubTexture","parentTexture","loadTexture","txType","queueMicrotask","parentTx","onParentTxLoaded","onParentTxFailed","_this3","_callee3","_callee3$","_context3","WebGlCoreCtxSubTexture","_this4","_callee4","_props$data","_props$data2","_callee4$","_context4","BufferCollection","_this$config$find","find","item","_this$config$find2","WebGlContextWrapper","WeakMap","activeTextureUnit","ACTIVE_TEXTURE","TEXTURE0","maxTextureUnits","texture2dUnits","fill","map","_","TEXTURE_BINDING_2D","scissorEnabled","isEnabled","SCISSOR_TEST","scissorBox","SCISSOR_BOX","scissorX","scissorY","scissorWidth","scissorHeight","blendEnabled","BLEND","blendSrcRgb","BLEND_SRC_RGB","blendDstRgb","BLEND_DST_RGB","blendSrcAlpha","BLEND_SRC_ALPHA","blendDstAlpha","BLEND_DST_ALPHA","boundArrayBuffer","ARRAY_BUFFER_BINDING","boundElementArrayBuffer","ELEMENT_ARRAY_BUFFER_BINDING","curProgram","CURRENT_PROGRAM","UNPACK_FLIP_Y_WEBGL","FLOAT","ONE","ONE_MINUS_SRC_ALPHA","DYNAMIC_DRAW","COLOR_ATTACHMENT0","textureUnit","TEXTURE_2D","_getActiveTexture","pname","param","texture2dParams","textureParams","set","level","internalFormat","widthOrFormat","heightOrType","borderOrSource","format","pixels","internalformat","border","viewport","clearColor","red","green","blue","enable","disable","setBlend","blend","blendFunc","src","dst","createFramebuffer","bindFramebuffer","framebuffer","FRAMEBUFFER","framebufferTexture2D","attachment","COLOR_BUFFER_BIT","arrayBufferData","usage","bindBuffer","ARRAY_BUFFER","bufferData","ELEMENT_ARRAY_BUFFER","programUniforms","Map","uniformArgs","compareArrays","mode","count","vertexArray","every","v","isArray","RenderTexture","_callee5","_callee5$","_context5","WebGlCoreCtxRenderTexture","_this5","_callee6","_this5$textureSource","_callee6$","_context6","WORDS_PER_QUAD","WebGlCoreRenderer","quadBuffer","bufferMemory","txMemManager","defaultTexture","requestRender","defaultShader","loadShader","BYTES_PER_ELEMENT","quadBufferCollection","a_position","a_textureCoordinate","a_color","a_textureIndex","reset","curBufferIdx","curRenderOp","renderOps","getShaderManager","createCtxTexture","addQuad","_texture","_textureOptions$flipX","_textureOptions$flipY","fQuadBuffer","uiQuadBuffer","colorTl","colorTr","colorBl","colorBr","textureOptions","tx","ty","ta","tb","tc","td","rtt","targetDims","targetShader","reuseRenderOp","newRenderOp","flipX","flipY","texCoordX1","texCoordY1","texCoordX2","texCoordY2","_texture$props","tw","th","_ref2","_ref2$width","parentW","_ref2$height","parentH","_ref3","_ref4","getCtxTexture","textureIdx","rightCornerX","rightCornerY","recursive","_this$curRenderOp","addRenderOp","render","surface","_this$quadBufferColle","arr","rttNodes","unshift","renderRTTNodes","hasRTTupdates","activeRttNode","renderToTextureActive","children","child","update","deltaTime","addQuads","SpecialCodepoints","LINE_FEED","CARRIAGE_RETURN","SPACE","TAB","ZERO_WIDTH_SPACE","ZERO_WIDTH_NON_JOINER","ZERO_WIDTH_JOINER","LEFT_TO_RIGHT_MARK","RIGHT_TO_LEFT_MARK","LEFT_TO_RIGHT_EMBEDDING","RIGHT_TO_LEFT_EMBEDDING","POP_DIRECTIONAL_FORMATTING","LEFT_TO_RIGHT_OVERRIDE","RIGHT_TO_LEFT_OVERRIDE","LINE_SEPARATOR","PARAGRAPH_SEPARATOR","OBJECT_REPLACEMENT_CHARACTER","REPLACEMENT_CHARACTER","ZERO_WIDTH_NO_BREAK_SPACE","LEFT_TO_RIGHT_ISOLATE","RIGHT_TO_LEFT_ISOLATE","FIRST_STRONG_ISOLATE","POP_DIRECTIONAL_ISOLATE","INHIBIT_SYMMETRIC_SWAPPING","ACTIVATE_SYMMETRIC_SWAPPING","INHIBIT_ARABIC_FORM_SHAPING","ACTIVATE_ARABIC_FORM_SHAPING","NATIONAL_DIGIT_SHAPES","NOMINAL_DIGIT_SHAPES","LEFT_TO_RIGHT_BOUNDARY","RIGHT_TO_LEFT_BOUNDARY","FontShaper","SdfFontShaper","glyphMap","kernings","kerning","second","firsts","first","amount","shapeText","codepoints","_this6","_callee7","codepointResult","lastGlyphId","codepoint","glyph","_this6$kernings$glyph","_callee7$","_context7","peek","done","id","letterSpacing","mapped","glyphId","cluster","lastIndex","xAdvance","xadvance","yAdvance","xOffset","xoffset","yOffset","yoffset","xBearing","yBearing","SdfTrFontFace","atlasUrl","atlasDataUrl","_this7","this","preload","checkLoaded","fetch","_ref5","_callee8","response","maxCharHeight","_callee8$","_context8","json","chars","charHeight","shaper","_x","getAtlasEntry","loaded","CoreExtension"],"mappings":"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","x_google_ignoreList":[14]}