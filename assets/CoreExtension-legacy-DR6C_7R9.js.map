{"version":3,"file":"CoreExtension-legacy-DR6C_7R9.js","sources":["../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/utils.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/lib/utils.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/common/EventEmitter.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/ShaderUtils.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreShader.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreShader.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/textures/Texture.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/TrFontFace.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/WebTrFontFace.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreContextTexture.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderer.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderOp.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderOp.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/RendererUtils.js","../../../../node_modules/.pnpm/memize@2.1.0/node_modules/memize/dist/index.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/utils.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxTexture.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/textures/ColorTexture.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/textures/SubTexture.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxSubTexture.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/BufferCollection.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/lib/WebGlContextWrapper.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/WebGlUtils.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderer.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/SpecialCodepoints.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/SdfFontShaper.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/FontShaper.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/SdfTrFontFace.js","../../../../node_modules/.pnpm/@lightningjs+renderer@0.8.1/node_modules/@lightningjs/renderer/dist/src/core/CoreExtension.js"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function createWebGLContext(canvas, contextSpy) {\n    const config = {\n        alpha: true,\n        antialias: false,\n        depth: false,\n        stencil: true,\n        desynchronized: false,\n        // Disabled because it prevents Visual Regression Tests from working\n        // failIfMajorPerformanceCaveat: true,\n        powerPreference: 'high-performance',\n        premultipliedAlpha: true,\n        preserveDrawingBuffer: false,\n    };\n    const gl = \n    // TODO: Remove this assertion once this issue is fixed in TypeScript\n    // https://github.com/microsoft/TypeScript/issues/53614\n    (canvas.getContext('webgl', config) ||\n        canvas.getContext('experimental-webgl', config));\n    if (!gl) {\n        throw new Error('Unable to create WebGL context');\n    }\n    if (contextSpy) {\n        // Proxy the GL context to log all GL calls\n        return new Proxy(gl, {\n            get(target, prop) {\n                const value = target[prop];\n                if (typeof value === 'function') {\n                    contextSpy.increment(String(prop));\n                    return value.bind(target);\n                }\n                return value;\n            },\n        });\n    }\n    return gl;\n}\n/**\n * Asserts a condition is truthy, otherwise throws an error\n *\n * @remarks\n * Useful at the top of functions to ensure certain conditions, arguments and\n * properties are set/met before continuing. When using this function,\n * TypeScript will narrow away falsy types from the condition.\n *\n * @param condition\n * @param message\n * @returns\n */\nexport function assertTruthy(condition, message) {\n    if (isProductionEnvironment())\n        return;\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n/**\n * Merges two colors based on a given progress value.\n *\n * This function takes two colors (c1 and c2) represented as 32-bit integers\n * in RGBA format and blends them based on the provided progress value (p).\n * The result is a new color that is a weighted combination of the input colors,\n * where the weight is determined by the progress value.\n *\n * @param {number} c1 - The first color in RGBA format (32-bit integer).\n * @param {number} c2 - The second color in RGBA format (32-bit integer).\n * @param {number} p - The progress value between 0 and 1.\n * @returns {number} The merged color as a 32-bit integer in RGBA format.\n */\nexport function mergeColorProgress(rgba1, rgba2, p) {\n    const r1 = Math.trunc(rgba1 >>> 24);\n    const g1 = Math.trunc((rgba1 >>> 16) & 0xff);\n    const b1 = Math.trunc((rgba1 >>> 8) & 0xff);\n    const a1 = Math.trunc(rgba1 & 0xff);\n    const r2 = Math.trunc(rgba2 >>> 24);\n    const g2 = Math.trunc((rgba2 >>> 16) & 0xff);\n    const b2 = Math.trunc((rgba2 >>> 8) & 0xff);\n    const a2 = Math.trunc(rgba2 & 0xff);\n    const r = Math.round(r2 * p + r1 * (1 - p));\n    const g = Math.round(g2 * p + g1 * (1 - p));\n    const b = Math.round(b2 * p + b1 * (1 - p));\n    const a = Math.round(a2 * p + a1 * (1 - p));\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter.\n *\n * @internalRemarks\n * This method does NOT premultiply the alpha into the color channels. If that\n * is required (for internal use only) use {@link mergeColorAlphaPremultiplied}\n * instead.\n *\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @returns\n */\nexport function mergeColorAlpha(rgba, alpha) {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = Math.trunc((rgba & 0xff) * alpha);\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter. Before returning, the\n * final alpha value is multiplied into the color channels.\n *\n * @remarks\n * If `flipEndianess` is set to true, the function will returned an ABGR encoded number\n * which is useful when the color value needs to be passed into a shader attribute.\n *\n * NOTE: This method returns a PREMULTIPLIED alpha color which is generally only useful\n * in the context of the internal rendering process. Use {@link mergeColorAlpha} if you\n * need to blend an alpha value into a color in the context of the Renderer's\n * main API.\n *\n * @internalRemarks\n * Do not expose this method in the main API because Renderer users should instead use\n * {@link mergeColorAlpha} to manipulate the alpha value of a color.\n *\n * @internal\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @param flipEndianess Flip the endianess. RGBA becomes encoded as ABGR (for inserting colors into shader attributes)\n * @returns\n */\nexport function mergeColorAlphaPremultiplied(rgba, alpha, flipEndianess = false) {\n    const newAlpha = ((rgba & 0xff) / 255) * alpha;\n    const r = Math.trunc((rgba >>> 24) * newAlpha);\n    const g = Math.trunc(((rgba >>> 16) & 0xff) * newAlpha);\n    const b = Math.trunc(((rgba >>> 8) & 0xff) * newAlpha);\n    const a = Math.trunc(newAlpha * 255);\n    if (flipEndianess) {\n        return ((a << 24) | (b << 16) | (g << 8) | r) >>> 0;\n    }\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Returns true if the given object has the given \"own\" property.\n *\n * @param obj\n * @param prop\n * @returns\n */\nexport function hasOwn(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n/**\n * Converts degrees to radians\n *\n * @param degrees\n * @returns\n */\nexport function deg2Rad(degrees) {\n    return (degrees * Math.PI) / 180;\n}\n/**\n * Checks import.meta if env is production\n *\n * @returns\n */\nexport function isProductionEnvironment() {\n    return import.meta.env && import.meta.env.PROD;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const getNormalizedRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r / 255, g / 255, b / 255, a / 255];\n};\nexport const getRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r, g, b, a];\n};\nexport const norm = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    const rgbaArr = [r / 255, g / 255, b / 255, a / 255];\n    rgbaArr[0] = Math.max(0, Math.min(255, rgbaArr[0]));\n    rgbaArr[1] = Math.max(0, Math.min(255, rgbaArr[1]));\n    rgbaArr[2] = Math.max(0, Math.min(255, rgbaArr[2]));\n    rgbaArr[3] = Math.max(0, Math.min(255, rgbaArr[3]));\n    let v = ((rgbaArr[3] | 0) << 24) +\n        ((rgbaArr[0] | 0) << 16) +\n        ((rgbaArr[1] | 0) << 8) +\n        (rgbaArr[2] | 0);\n    if (v < 0) {\n        v = 0xffffffff + v + 1;\n    }\n    return v;\n};\nexport function getNormalizedAlphaComponent(rgba) {\n    return (rgba & 0xff) / 255.0;\n}\n/**\n * Get a CSS color string from a RGBA color\n *\n * @param color\n * @returns\n */\nexport function getRgbaString(color) {\n    const r = Math.floor(color[0] * 255.0);\n    const g = Math.floor(color[1] * 255.0);\n    const b = Math.floor(color[2] * 255.0);\n    const a = Math.floor(color[3] * 255.0);\n    return `rgba(${r},${g},${b},${a.toFixed(4)})`;\n}\nexport function createBound(x1, y1, x2, y2, out) {\n    if (out) {\n        out.x1 = x1;\n        out.y1 = y1;\n        out.x2 = x2;\n        out.y2 = y2;\n        return out;\n    }\n    return {\n        x1,\n        y1,\n        x2,\n        y2,\n    };\n}\nexport function intersectBound(a, b, out) {\n    const intersection = createBound(Math.max(a.x1, b.x1), Math.max(a.y1, b.y1), Math.min(a.x2, b.x2), Math.min(a.y2, b.y2), out);\n    if (intersection.x1 < intersection.x2 && intersection.y1 < intersection.y2) {\n        return intersection;\n    }\n    return createBound(0, 0, 0, 0, intersection);\n}\nexport function boundsOverlap(a, b) {\n    return a.x1 < b.x2 && a.x2 > b.x1 && a.y1 < b.y2 && a.y2 > b.y1;\n}\nexport function convertBoundToRect(bound, out) {\n    if (out) {\n        out.x = bound.x1;\n        out.y = bound.y1;\n        out.width = bound.x2 - bound.x1;\n        out.height = bound.y2 - bound.y1;\n        return out;\n    }\n    return {\n        x: bound.x1,\n        y: bound.y1,\n        width: bound.x2 - bound.x1,\n        height: bound.y2 - bound.y1,\n    };\n}\nexport function intersectRect(a, b, out) {\n    const x = Math.max(a.x, b.x);\n    const y = Math.max(a.y, b.y);\n    const width = Math.min(a.x + a.width, b.x + b.width) - x;\n    const height = Math.min(a.y + a.height, b.y + b.height) - y;\n    if (width > 0 && height > 0) {\n        if (out) {\n            out.x = x;\n            out.y = y;\n            out.width = width;\n            out.height = height;\n            return out;\n        }\n        return {\n            x,\n            y,\n            width,\n            height,\n        };\n    }\n    if (out) {\n        out.x = 0;\n        out.y = 0;\n        out.width = 0;\n        out.height = 0;\n        return out;\n    }\n    return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n    };\n}\nexport function copyRect(a, out) {\n    if (out) {\n        out.x = a.x;\n        out.y = a.y;\n        out.width = a.width;\n        out.height = a.height;\n        return out;\n    }\n    return {\n        x: a.x,\n        y: a.y,\n        width: a.width,\n        height: a.height,\n    };\n}\nexport function compareRect(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a === null || b === null) {\n        return false;\n    }\n    return (a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height);\n}\nexport function boundInsideBound(bound1, bound2) {\n    return (bound1.x1 <= bound2.x2 &&\n        bound1.y1 <= bound2.y2 &&\n        bound1.x2 >= bound2.x1 &&\n        bound1.y2 >= bound2.y1);\n}\nexport function isBoundPositive(bound) {\n    return bound.x1 < bound.x2 && bound.y1 < bound.y2;\n}\nexport function isRectPositive(rect) {\n    return rect.width > 0 && rect.height > 0;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * EventEmitter base class\n */\nexport class EventEmitter {\n    eventListeners = {};\n    on(event, listener) {\n        let listeners = this.eventListeners[event];\n        if (!listeners) {\n            listeners = [];\n        }\n        listeners.push(listener);\n        this.eventListeners[event] = listeners;\n    }\n    off(event, listener) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        if (!listener) {\n            delete this.eventListeners[event];\n            return;\n        }\n        const index = listeners.indexOf(listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n    once(event, listener) {\n        const onceListener = (target, data) => {\n            this.off(event, onceListener);\n            listener(target, data);\n        };\n        this.on(event, onceListener);\n    }\n    emit(event, data) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        [...listeners].forEach((listener) => {\n            listener(this, data);\n        });\n    }\n    removeAllListeners() {\n        this.eventListeners = {};\n    }\n}\n//# sourceMappingURL=EventEmitter.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//#endregion Types\nexport function createShader(glw, type, source) {\n    const shader = glw.createShader(type);\n    if (!shader) {\n        throw new Error();\n    }\n    glw.shaderSource(shader, source);\n    glw.compileShader(shader);\n    const success = glw.getShaderParameter(shader, glw.COMPILE_STATUS);\n    if (success) {\n        return shader;\n    }\n    console.log(glw.getShaderInfoLog(shader));\n    glw.deleteShader(shader);\n}\nexport function createProgram(glw, vertexShader, fragmentShader) {\n    const program = glw.createProgram();\n    if (!program) {\n        throw new Error();\n    }\n    glw.attachShader(program, vertexShader);\n    glw.attachShader(program, fragmentShader);\n    glw.linkProgram(program);\n    const success = glw.getProgramParameter(program, glw.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n    console.log(glw.getProgramInfoLog(program));\n    glw.deleteProgram(program);\n    return undefined;\n}\n//# sourceMappingURL=ShaderUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, hasOwn } from '../../../utils.js';\nimport { CoreShader } from '../CoreShader.js';\nimport { createProgram, createShader, } from './internal/ShaderUtils.js';\nimport { isWebGl2 } from './internal/WebGlUtils.js';\nexport class WebGlCoreShader extends CoreShader {\n    boundBufferCollection = null;\n    buffersBound = false;\n    program;\n    /**\n     * Vertex Array Object\n     *\n     * @remarks\n     * Used by WebGL2 Only\n     */\n    vao;\n    renderer;\n    glw;\n    attributeBuffers;\n    attributeLocations;\n    attributeNames;\n    uniformLocations;\n    uniformTypes;\n    supportsIndexedTextures;\n    constructor(options) {\n        super();\n        const renderer = (this.renderer = options.renderer);\n        const glw = (this.glw = this.renderer.glw);\n        this.supportsIndexedTextures = options.supportsIndexedTextures || false;\n        // Check that extensions are supported\n        const webGl2 = glw.isWebGl2();\n        const requiredExtensions = (webGl2 && options.webgl2Extensions) ||\n            (!webGl2 && options.webgl1Extensions) ||\n            [];\n        const glVersion = webGl2 ? '2.0' : '1.0';\n        requiredExtensions.forEach((extensionName) => {\n            if (!glw.getExtension(extensionName)) {\n                throw new Error(`Shader \"${this.constructor.name}\" requires extension \"${extensionName}\" for WebGL ${glVersion} but wasn't found`);\n            }\n        });\n        // Gather shader sources\n        // - If WebGL 2 and special WebGL 2 sources are provided, we copy those sources and delete\n        // the extra copy of them to save memory.\n        // TODO: This could be further made optimal by just caching the compiled shaders and completely deleting\n        // the source code\n        const shaderSources = options.shaderSources ||\n            this.constructor.shaderSources;\n        if (!shaderSources) {\n            throw new Error(`Shader \"${this.constructor.name}\" is missing shaderSources.`);\n        }\n        else if (webGl2 && shaderSources?.webGl2) {\n            shaderSources.fragment = shaderSources.webGl2.fragment;\n            shaderSources.vertex = shaderSources.webGl2.vertex;\n            delete shaderSources.webGl2;\n        }\n        const textureUnits = renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        const vertexSource = shaderSources.vertex instanceof Function\n            ? shaderSources.vertex(textureUnits)\n            : shaderSources.vertex;\n        const fragmentSource = shaderSources.fragment instanceof Function\n            ? shaderSources.fragment(textureUnits)\n            : shaderSources.fragment;\n        const vertexShader = createShader(glw, glw.VERTEX_SHADER, vertexSource);\n        const fragmentShader = createShader(glw, glw.FRAGMENT_SHADER, fragmentSource);\n        if (!vertexShader || !fragmentShader) {\n            throw new Error();\n        }\n        const program = createProgram(glw, vertexShader, fragmentShader);\n        if (!program) {\n            throw new Error();\n        }\n        this.program = program;\n        if (webGl2) {\n            const vao = glw.createVertexArray();\n            if (!vao) {\n                throw new Error();\n            }\n            this.vao = vao;\n            glw.bindVertexArray(this.vao);\n        }\n        this.attributeLocations = {};\n        this.attributeBuffers = {};\n        this.attributeNames = [];\n        [...options.attributes].forEach((attributeName) => {\n            const location = glw.getAttribLocation(this.program, attributeName);\n            if (location < 0) {\n                throw new Error(`${this.constructor.name}: Vertex shader must have an attribute \"${attributeName}\"!`);\n            }\n            const buffer = glw.createBuffer();\n            if (!buffer) {\n                throw new Error(`${this.constructor.name}: Could not create buffer for attribute \"${attributeName}\"`);\n            }\n            this.attributeLocations[attributeName] = location;\n            this.attributeBuffers[attributeName] = buffer;\n            this.attributeNames.push(attributeName);\n        });\n        this.uniformLocations = {};\n        this.uniformTypes = {};\n        options.uniforms.forEach((uniform) => {\n            const location = glw.getUniformLocation(this.program, uniform.name);\n            this.uniformTypes[uniform.name] = uniform.uniform;\n            if (!location) {\n                console.warn(`Shader \"${this.constructor.name}\" could not get uniform location for \"${uniform.name}\"`);\n                return;\n            }\n            this.uniformLocations[uniform.name] = location;\n        });\n    }\n    bindBufferAttribute(location, buffer, attribute) {\n        const { glw } = this;\n        glw.enableVertexAttribArray(location);\n        glw.vertexAttribPointer(buffer, location, attribute.size, attribute.type, attribute.normalized, attribute.stride, attribute.offset);\n    }\n    disableAttribute(location) {\n        this.glw.disableVertexAttribArray(location);\n    }\n    disableAttributes() {\n        for (const loc in this.attributeLocations) {\n            this.disableAttribute(this.attributeLocations[loc]);\n        }\n        this.boundBufferCollection = null;\n    }\n    /**\n     * Given two sets of Shader props destined for this Shader, determine if they can be batched together\n     * to reduce the number of draw calls.\n     *\n     * @remarks\n     * This is used by the {@link WebGlCoreRenderer} to determine if it can batch multiple consecutive draw\n     * calls into a single draw call.\n     *\n     * By default, this returns false (meaning no batching is allowed), but can be\n     * overridden by child classes to provide more efficient batching.\n     *\n     * @param propsA\n     * @param propsB\n     * @returns\n     */\n    canBatchShaderProps(propsA, propsB) {\n        return false;\n    }\n    bindRenderOp(renderOp, props) {\n        this.bindBufferCollection(renderOp.buffers);\n        if (renderOp.textures.length > 0) {\n            this.bindTextures(renderOp.textures);\n        }\n        const { glw } = renderOp;\n        // Bind standard automatic uniforms\n        this.setUniform('u_resolution', [glw.canvas.width, glw.canvas.height]);\n        this.setUniform('u_pixelRatio', renderOp.options.pixelRatio);\n        if (props) {\n            // Bind optional automatic uniforms\n            // These are only bound if their keys are present in the props.\n            if (hasOwn(props, '$dimensions')) {\n                let dimensions = props.$dimensions;\n                if (!dimensions) {\n                    dimensions = renderOp.dimensions;\n                }\n                this.setUniform('u_dimensions', [dimensions.width, dimensions.height]);\n            }\n            if (hasOwn(props, '$alpha')) {\n                let alpha = props.$alpha;\n                if (!alpha) {\n                    alpha = renderOp.alpha;\n                }\n                this.setUniform('u_alpha', alpha);\n            }\n            this.bindProps(props);\n        }\n    }\n    setUniform(name, ...value) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-unsafe-argument\n        this.glw.setUniform(this.uniformTypes[name], this.uniformLocations[name], ...value);\n    }\n    bindBufferCollection(buffer) {\n        if (this.boundBufferCollection === buffer) {\n            return;\n        }\n        for (const attributeName in this.attributeLocations) {\n            const resolvedBuffer = buffer.getBuffer(attributeName);\n            const resolvedInfo = buffer.getAttributeInfo(attributeName);\n            assertTruthy(resolvedBuffer, `Buffer for \"${attributeName}\" not found`);\n            assertTruthy(resolvedInfo);\n            this.bindBufferAttribute(this.attributeLocations[attributeName], resolvedBuffer, resolvedInfo);\n        }\n        this.boundBufferCollection = buffer;\n    }\n    bindProps(props) {\n        // Implement in child class\n    }\n    bindTextures(textures) {\n        // no defaults\n    }\n    attach() {\n        this.glw.useProgram(this.program);\n        this.glw.useProgram(this.program);\n        if (this.glw.isWebGl2() && this.vao) {\n            this.glw.bindVertexArray(this.vao);\n        }\n    }\n    detach() {\n        this.disableAttributes();\n    }\n    static shaderSources;\n}\n//# sourceMappingURL=WebGlCoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreShader {\n    // abstract draw(): void;\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n}\n//# sourceMappingURL=CoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../common/EventEmitter.js';\n/**\n * Represents a source of texture data for a CoreContextTexture.\n *\n * @remarks\n * Texture sources are used to populate a CoreContextTexture when that texture\n * is loaded. Texture data retrieved by the CoreContextTexture by the\n * `getTextureData` method. It's the responsibility of the concerete `Texture`\n * subclass to implement this method appropriately.\n */\nexport class Texture extends EventEmitter {\n    txManager;\n    /**\n     * The dimensions of the texture\n     *\n     * @remarks\n     * Until the texture data is loaded for the first time the value will be\n     * `null`.\n     */\n    dimensions = null;\n    error = null;\n    state = 'freed';\n    renderableOwners = new Set();\n    constructor(txManager) {\n        super();\n        this.txManager = txManager;\n    }\n    /**\n     * Add/remove an owner to/from the Texture based on its renderability.\n     *\n     * @remarks\n     * Any object can own a texture, be it a CoreNode or even the state object\n     * from a Text Renderer.\n     *\n     * When the reference to the texture that an owner object holds is replaced\n     * or cleared it must call this with `renderable=false` to release the owner\n     * association.\n     *\n     * @param owner\n     * @param renderable\n     */\n    setRenderableOwner(owner, renderable) {\n        if (renderable) {\n            this.renderableOwners.add(owner);\n        }\n        else {\n            this.renderableOwners.delete(owner);\n        }\n    }\n    /**\n     * Returns true if the texture is assigned to any Nodes that are renderable.\n     */\n    get renderable() {\n        return this.renderableOwners.size > 0;\n    }\n    /**\n     * Set the state of the texture\n     *\n     * @remark\n     * Intended for internal-use only but declared public so that it can be set\n     * by it's associated {@link CoreContextTexture}\n     *\n     * @param state\n     * @param args\n     */\n    setState(state, ...args) {\n        if (this.state !== state) {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.state = state;\n            if (state === 'loaded') {\n                const loadedArgs = args;\n                this.dimensions = loadedArgs[0];\n            }\n            else if (state === 'failed') {\n                const failedArgs = args;\n                this.error = failedArgs[0];\n            }\n            this.emit(state, ...args);\n        }\n    }\n    /**\n     * Make a cache key for this texture.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide an\n     * appropriate cache key for the texture type including the texture's\n     * properties that uniquely identify a copy of the texture. If the texture\n     * type does not support caching, then this method should return `false`.\n     *\n     * @param props\n     * @returns\n     * A cache key for this texture or `false` if the texture type does not\n     * support caching.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    /**\n     * Resolve the default values for the texture's properties.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide\n     * default values for the texture's optional properties.\n     *\n     * @param props\n     * @returns\n     * The default values for the texture's properties.\n     */\n    static resolveDefaults(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    props) {\n        return {};\n    }\n}\n//# sourceMappingURL=Texture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../../common/EventEmitter.js';\nexport class TrFontFace extends EventEmitter {\n    fontFamily;\n    descriptors;\n    loaded = false;\n    constructor(fontFamily, descriptors) {\n        super();\n        this.fontFamily = fontFamily;\n        this.descriptors = {\n            style: 'normal',\n            weight: 'normal',\n            stretch: 'normal',\n            ...descriptors,\n        };\n    }\n    /**\n     * Convert a TrFontFaceDescriptors to a FontFaceDescriptors which differ slightly\n     *\n     * @param descriptors\n     * @returns\n     */\n    static convertToCssFontFaceDescriptors(descriptors) {\n        return {\n            style: descriptors.style,\n            weight: typeof descriptors.weight === 'number'\n                ? `${descriptors.weight}`\n                : descriptors.weight,\n            stretch: descriptors.stretch,\n            unicodeRange: descriptors.unicodeRange,\n            variant: descriptors.variant,\n            featureSettings: descriptors.featureSettings,\n            display: descriptors.display,\n        };\n    }\n}\n//# sourceMappingURL=TrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TrFontFace } from './TrFontFace.js';\nexport class WebTrFontFace extends TrFontFace {\n    fontFace;\n    fontUrl;\n    constructor(fontFamily, descriptors, fontUrl) {\n        super(fontFamily, descriptors);\n        // Filter out parentheses from fontUrl\n        const fontUrlWithoutParentheses = fontUrl.replace(/\\(|\\)/g, '');\n        // Defaults for descriptors resolved in the super constructor\n        const determinedDescriptors = this.descriptors;\n        // Convert TrFontFaceDescriptors to CSS FontFaceDescriptors\n        const cssDescriptors = {\n            style: determinedDescriptors.style,\n            weight: typeof determinedDescriptors.weight === 'number'\n                ? `${determinedDescriptors.weight}`\n                : determinedDescriptors.weight,\n            stretch: determinedDescriptors.stretch,\n            unicodeRange: determinedDescriptors.unicodeRange,\n            variant: determinedDescriptors.variant,\n            featureSettings: determinedDescriptors.featureSettings,\n            display: determinedDescriptors.display,\n        };\n        const fontFace = new FontFace(fontFamily, `url(${fontUrlWithoutParentheses})`, cssDescriptors);\n        fontFace\n            .load()\n            .then(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.loaded = true;\n            this.emit('loaded');\n        })\n            .catch(console.error);\n        this.fontFace = fontFace;\n        this.fontUrl = fontUrl;\n    }\n}\n//# sourceMappingURL=WebTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreContextTexture {\n    memManager;\n    textureSource;\n    constructor(memManager, textureSource) {\n        this.memManager = memManager;\n        this.textureSource = textureSource;\n    }\n}\n//# sourceMappingURL=CoreContextTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreContextTexture } from './CoreContextTexture.js';\nexport class CoreRenderer {\n    stage;\n    constructor(stage) {\n        this.stage = stage;\n    }\n}\n//# sourceMappingURL=CoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreRenderOp } from '../CoreRenderOp.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nconst MAX_TEXTURES = 8; // TODO: get from gl\n/**\n * Can render multiple quads with multiple textures (up to vertex shader texture limit)\n *\n */\nexport class WebGlCoreRenderOp extends CoreRenderOp {\n    glw;\n    options;\n    buffers;\n    shader;\n    shaderProps;\n    alpha;\n    clippingRect;\n    dimensions;\n    bufferIdx;\n    zIndex;\n    length = 0;\n    numQuads = 0;\n    textures = [];\n    maxTextures;\n    constructor(glw, options, buffers, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, zIndex) {\n        super();\n        this.glw = glw;\n        this.options = options;\n        this.buffers = buffers;\n        this.shader = shader;\n        this.shaderProps = shaderProps;\n        this.alpha = alpha;\n        this.clippingRect = clippingRect;\n        this.dimensions = dimensions;\n        this.bufferIdx = bufferIdx;\n        this.zIndex = zIndex;\n        this.maxTextures = shader.supportsIndexedTextures\n            ? glw.getParameter(glw.MAX_VERTEX_TEXTURE_IMAGE_UNITS)\n            : 1;\n    }\n    addTexture(texture) {\n        const { textures, maxTextures } = this;\n        const existingIdx = textures.findIndex((t) => t === texture);\n        if (existingIdx !== -1) {\n            return existingIdx;\n        }\n        const newIdx = textures.length;\n        if (newIdx >= maxTextures) {\n            return 0xffffffff;\n        }\n        this.textures.push(texture);\n        return newIdx;\n    }\n    draw() {\n        const { glw, shader, shaderProps, options } = this;\n        // shaderOp.draw(this);\n        const { shManager } = options;\n        shManager.useShader(shader);\n        shader.bindRenderOp(this, shaderProps);\n        // TODO: Reduce calculations required\n        const quadIdx = (this.bufferIdx / 24) * 6 * 2;\n        // Clipping\n        if (this.clippingRect.valid) {\n            const { x, y, width, height } = this.clippingRect;\n            const pixelRatio = options.pixelRatio;\n            const canvasHeight = options.canvas.height;\n            const clipX = Math.round(x * pixelRatio);\n            const clipWidth = Math.round(width * pixelRatio);\n            const clipHeight = Math.round(height * pixelRatio);\n            const clipY = Math.round(canvasHeight - clipHeight - y * pixelRatio);\n            glw.setScissorTest(true);\n            glw.scissor(clipX, clipY, clipWidth, clipHeight);\n        }\n        else {\n            glw.setScissorTest(false);\n        }\n        glw.drawElements(glw.TRIANGLES, 6 * this.numQuads, glw.UNSIGNED_SHORT, quadIdx);\n    }\n}\n//# sourceMappingURL=WebGlCoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreRenderOp {\n}\n//# sourceMappingURL=CoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Get device specific webgl parameters\n * @param glw\n */\nexport function getWebGlParameters(glw) {\n    const params = {\n        MAX_RENDERBUFFER_SIZE: 0,\n        MAX_TEXTURE_SIZE: 0,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n        MAX_VIEWPORT_DIMS: 0,\n        MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0,\n        MAX_VERTEX_ATTRIBS: 0,\n        MAX_VARYING_VECTORS: 0,\n        MAX_VERTEX_UNIFORM_VECTORS: 0,\n        MAX_FRAGMENT_UNIFORM_VECTORS: 0,\n    };\n    // Map over all parameters and get them\n    const keys = Object.keys(params);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        params[key] = glw.getParameter(glw[key]);\n    });\n    return params;\n}\n/**\n * Get device webgl extensions\n * @param glw\n */\nexport function getWebGlExtensions(glw) {\n    const extensions = {\n        ANGLE_instanced_arrays: null,\n        WEBGL_compressed_texture_s3tc: null,\n        WEBGL_compressed_texture_astc: null,\n        WEBGL_compressed_texture_etc: null,\n        WEBGL_compressed_texture_etc1: null,\n        WEBGL_compressed_texture_pvrtc: null,\n        WEBKIT_WEBGL_compressed_texture_pvrtc: null,\n        WEBGL_compressed_texture_s3tc_srgb: null,\n        OES_vertex_array_object: null,\n    };\n    // Map over all extensions and get them\n    const keys = Object.keys(extensions);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        extensions[key] = glw.getExtension(key);\n    });\n    return extensions;\n}\n/**\n * Allocate big memory chunk that we\n * can re-use to draw quads\n *\n * @param glw\n * @param size\n */\nexport function createIndexBuffer(glw, size) {\n    const maxQuads = ~~(size / 80);\n    const indices = new Uint16Array(maxQuads * 6);\n    for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n        indices[i] = j;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 2;\n        indices[i + 4] = j + 1;\n        indices[i + 5] = j + 3;\n    }\n    const buffer = glw.createBuffer();\n    glw.elementArrayBufferData(buffer, indices, glw.STATIC_DRAW);\n}\n/**\n * Checks if an object is of type HTMLImageElement.\n * This is used because we cant check for HTMLImageElement directly when the\n * renderer is running in a seperate web worker context.\n *\n * @param obj\n * @returns\n */\nexport function isHTMLImageElement(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        obj.constructor &&\n        obj.constructor.name === 'HTMLImageElement');\n}\n//# sourceMappingURL=RendererUtils.js.map","/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {(...args: any[]) => any} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {((...args: Parameters<F>) => ReturnType<F>) & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize(fn, options) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized(/* ...args */) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs,\n\t\t\ti;\n\n\t\tsearchCache: while (node) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif (node.args.length !== arguments.length) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (node.args[i] !== arguments[i]) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== head) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif (node === tail) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ (head).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply(null, args),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (head) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif (size === /** @type {MemizeOptions} */ (options).maxSize) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ (tail).prev;\n\t\t\t/** @type {MemizeCacheNode} */ (tail).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function () {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nexport { memize as default };\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Core Utility Functions\n *\n * @module\n */\nimport memo from 'memize';\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport const RANDOM = Math.random;\nexport const ANGLE_ORDER = 'zyx';\nconst degree = Math.PI / 180;\nexport const setMatrixArrayType = (type) => {\n    ARRAY_TYPE = type;\n};\nexport const toRadian = (a) => {\n    return a * degree;\n};\nexport const equals = (a, b) => {\n    return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n};\nexport const rand = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\nexport const isPowerOfTwo = (value) => {\n    return value && !(value & (value - 1));\n};\nconst getTimingBezier = (a, b, c, d) => {\n    const xc = 3.0 * a;\n    const xb = 3.0 * (c - a) - xc;\n    const xa = 1.0 - xc - xb;\n    const yc = 3.0 * b;\n    const yb = 3.0 * (d - b) - yc;\n    const ya = 1.0 - yc - yb;\n    return function (time) {\n        if (time >= 1.0) {\n            return 1;\n        }\n        if (time <= 0) {\n            return 0;\n        }\n        let t = 0.5, cbx, cbxd, dx;\n        for (let it = 0; it < 20; it++) {\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                return t * (t * (t * ya + yb) + yc);\n            }\n            // Cubic bezier derivative.\n            cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n            t += dx / cbxd;\n        }\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc);\n            }\n            if (dx < 0) {\n                maxT = t;\n            }\n            else {\n                minT = t;\n            }\n        }\n    };\n};\nexport const getTimingFunction = memo((str) => {\n    switch (str) {\n        case 'linear':\n            return function (time) {\n                return time;\n            };\n        case 'ease':\n            return getTimingBezier(0.25, 0.1, 0.25, 1.0);\n        case 'ease-in':\n            return getTimingBezier(0.42, 0, 1.0, 1.0);\n        case 'ease-out':\n            return getTimingBezier(0, 0, 0.58, 1.0);\n        case 'ease-in-out':\n            return getTimingBezier(0.42, 0, 0.58, 1.0);\n        case 'ease-in-sine':\n            return getTimingBezier(0.12, 0, 0.39, 0);\n        case 'ease-out-sine':\n            return getTimingBezier(0.12, 0, 0.39, 0);\n        case 'ease-in-out-sine':\n            return getTimingBezier(0.37, 0, 0.63, 1);\n        case 'ease-in-cubic':\n            return getTimingBezier(0.32, 0, 0.67, 0);\n        case 'ease-out-cubic':\n            return getTimingBezier(0.33, 1, 0.68, 1);\n        case 'ease-in-out-cubic':\n            return getTimingBezier(0.65, 0, 0.35, 1);\n        case 'ease-in-circ':\n            return getTimingBezier(0.55, 0, 1, 0.45);\n        case 'ease-out-circ':\n            return getTimingBezier(0, 0.55, 0.45, 1);\n        case 'ease-in-out-circ':\n            return getTimingBezier(0.85, 0, 0.15, 1);\n        case 'ease-in-back':\n            return getTimingBezier(0.36, 0, 0.66, -0.56);\n        case 'ease-out-back':\n            return getTimingBezier(0.34, 1.56, 0.64, 1);\n        case 'ease-in-out-back':\n            return getTimingBezier(0.68, -0.6, 0.32, 1.6);\n        case 'step-start':\n            return function () {\n                return 1;\n            };\n        case 'step-end':\n            return function (time) {\n                return time === 1 ? 1 : 0;\n            };\n        default:\n            // eslint-disable-next-line no-case-declarations\n            const s = 'cubic-bezier(';\n            if (str && str.indexOf(s) === 0) {\n                const parts = str\n                    .substr(s.length, str.length - s.length - 1)\n                    .split(',');\n                if (parts.length !== 4) {\n                    console.warn('Unknown timing function: ' + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time;\n                    };\n                }\n                const a = parseFloat(parts[0] || '0.42');\n                const b = parseFloat(parts[1] || '0');\n                const c = parseFloat(parts[2] || '1');\n                const d = parseFloat(parts[3] || '1');\n                if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                    console.warn(' Unknown timing function: ' + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time;\n                    };\n                }\n                return getTimingBezier(a, b, c, d);\n            }\n            else {\n                console.warn('Unknown timing function: ' + str);\n                // Fallback: use linear.\n                return function (time) {\n                    return time;\n                };\n            }\n    }\n});\nif (!Math.hypot)\n    Math.hypot = (...args) => {\n        let y = 0, i = args.length;\n        while (i--) {\n            y += args[i] * args[i];\n        }\n        return Math.sqrt(y);\n    };\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { isPowerOfTwo } from '../../utils.js';\nimport { CoreContextTexture } from '../CoreContextTexture.js';\nimport { isHTMLImageElement } from './internal/RendererUtils.js';\nconst TRANSPARENT_TEXTURE_DATA = new Uint8Array([0, 0, 0, 0]);\n/**\n * A wrapper around a WebGLTexture that handles loading the texture data\n * from a Texture source and uploading it to the GPU as well as freeing\n * the uploaded texture.\n *\n * @remarks\n * When accessing the ctxTexture property, the texture will be loaded if\n * it hasn't been already. ctxTexture will always return a valid WebGLTexture\n * and trigger the loading/uploading of the texture's data if it hasn't been\n * loaded yet.\n */\nexport class WebGlCoreCtxTexture extends CoreContextTexture {\n    glw;\n    _nativeCtxTexture = null;\n    _state = 'freed';\n    _w = 0;\n    _h = 0;\n    constructor(glw, memManager, textureSource) {\n        super(memManager, textureSource);\n        this.glw = glw;\n    }\n    get ctxTexture() {\n        if (this._state === 'freed') {\n            this.load();\n        }\n        assertTruthy(this._nativeCtxTexture);\n        return this._nativeCtxTexture;\n    }\n    get renderable() {\n        return this.textureSource.renderable;\n    }\n    get w() {\n        return this._w;\n    }\n    get h() {\n        return this._h;\n    }\n    /**\n     * Load the texture data from the Texture source and upload it to the GPU\n     *\n     * @remarks\n     * This method is called automatically when accessing the ctxTexture property\n     * if the texture hasn't been loaded yet. But it can also be called manually\n     * to force the texture to be pre-loaded prior to accessing the ctxTexture\n     * property.\n     */\n    load() {\n        // If the texture is already loading or loaded, don't load it again.\n        if (this._state === 'loading' || this._state === 'loaded') {\n            return;\n        }\n        this._state = 'loading';\n        this.textureSource.setState('loading');\n        this._nativeCtxTexture = this.createNativeCtxTexture();\n        this.onLoadRequest()\n            .then(({ width, height }) => {\n            if (this._state === 'freed') {\n                return;\n            }\n            this._state = 'loaded';\n            this._w = width;\n            this._h = height;\n            // Update the texture source's width and height so that it can be used\n            // for rendering.\n            this.textureSource.setState('loaded', { width, height });\n        })\n            .catch((err) => {\n            this._state = 'failed';\n            this.textureSource.setState('failed', err);\n            console.error(err);\n        });\n    }\n    /**\n     * Called when the texture data needs to be loaded and uploaded to a texture\n     */\n    async onLoadRequest() {\n        const { glw, memManager } = this;\n        // On initial load request, create a 1x1 transparent texture to use until\n        // the texture data is finally loaded.\n        glw.activeTexture(0);\n        glw.bindTexture(this._nativeCtxTexture);\n        // linear texture filtering\n        glw.texParameteri(glw.TEXTURE_MAG_FILTER, glw.LINEAR);\n        glw.texParameteri(glw.TEXTURE_MIN_FILTER, glw.LINEAR);\n        // texture wrapping method\n        glw.texParameteri(glw.TEXTURE_WRAP_S, glw.CLAMP_TO_EDGE);\n        glw.texParameteri(glw.TEXTURE_WRAP_T, glw.CLAMP_TO_EDGE);\n        glw.texImage2D(0, glw.RGBA, 1, 1, 0, glw.RGBA, glw.UNSIGNED_BYTE, TRANSPARENT_TEXTURE_DATA);\n        memManager.setTextureMemUse(this, TRANSPARENT_TEXTURE_DATA.byteLength);\n        const textureData = await this.textureSource?.getTextureData();\n        // If the texture has been freed while loading, return early.\n        if (!this._nativeCtxTexture) {\n            assertTruthy(this._state === 'freed');\n            return { width: 0, height: 0 };\n        }\n        let width = 0;\n        let height = 0;\n        assertTruthy(this._nativeCtxTexture);\n        glw.activeTexture(0);\n        // If textureData is null, the texture is empty (0, 0) and we don't need to\n        // upload any data to the GPU.\n        if (textureData.data instanceof ImageBitmap ||\n            textureData.data instanceof ImageData ||\n            // not using typeof HTMLImageElement due to web worker\n            isHTMLImageElement(textureData.data)) {\n            const data = textureData.data;\n            width = data.width;\n            height = data.height;\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.pixelStorei(glw.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !!textureData.premultiplyAlpha);\n            glw.texImage2D(0, glw.RGBA, glw.RGBA, glw.UNSIGNED_BYTE, data);\n            memManager.setTextureMemUse(this, width * height * 4);\n            // generate mipmaps for power-of-2 textures or in WebGL2RenderingContext\n            if (glw.isWebGl2() || (isPowerOfTwo(width) && isPowerOfTwo(height))) {\n                glw.generateMipmap();\n            }\n        }\n        else if (textureData.data === null) {\n            width = 0;\n            height = 0;\n            // Reset to a 1x1 transparent texture\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.texImage2D(0, glw.RGBA, 1, 1, 0, glw.RGBA, glw.UNSIGNED_BYTE, TRANSPARENT_TEXTURE_DATA);\n            memManager.setTextureMemUse(this, TRANSPARENT_TEXTURE_DATA.byteLength);\n        }\n        else if ('mipmaps' in textureData.data && textureData.data.mipmaps) {\n            const { mipmaps, width = 0, height = 0, type, glInternalFormat, } = textureData.data;\n            const view = type === 'ktx'\n                ? new DataView(mipmaps[0] ?? new ArrayBuffer(0))\n                : mipmaps[0];\n            glw.bindTexture(this._nativeCtxTexture);\n            glw.compressedTexImage2D(0, glInternalFormat, width, height, 0, view);\n            glw.texParameteri(glw.TEXTURE_WRAP_S, glw.CLAMP_TO_EDGE);\n            glw.texParameteri(glw.TEXTURE_WRAP_T, glw.CLAMP_TO_EDGE);\n            glw.texParameteri(glw.TEXTURE_MAG_FILTER, glw.LINEAR);\n            glw.texParameteri(glw.TEXTURE_MIN_FILTER, glw.LINEAR);\n            memManager.setTextureMemUse(this, view.byteLength);\n        }\n        else {\n            console.error(`WebGlCoreCtxTexture.onLoadRequest: Unexpected textureData returned`, textureData);\n        }\n        return {\n            width,\n            height,\n        };\n    }\n    /**\n     * Free the WebGLTexture from the GPU\n     *\n     * @returns\n     */\n    free() {\n        if (this._state === 'freed') {\n            return;\n        }\n        this._state = 'freed';\n        this.textureSource.setState('freed');\n        this._w = 0;\n        this._h = 0;\n        if (!this._nativeCtxTexture) {\n            return;\n        }\n        const { glw, memManager } = this;\n        glw.deleteTexture(this._nativeCtxTexture);\n        memManager.setTextureMemUse(this, 0);\n        this._nativeCtxTexture = null;\n    }\n    createNativeCtxTexture() {\n        const { glw } = this;\n        const nativeTexture = glw.createTexture();\n        if (!nativeTexture) {\n            throw new Error('Could not create WebGL Texture');\n        }\n        return nativeTexture;\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of only a 1x1 color pixel\n *\n * @remarks\n * The pixel color is set with the {@link ColorTextureProps.color} prop.\n *\n * This is the default texture used for a Node if it's\n * {@link INodeWritableProps.texture} prop is set to `null` (the default)\n *\n * Generally the 1x1 color pixel is stretched to whatever the set dimensions of\n * a Node are.\n */\nexport class ColorTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ColorTexture.resolveDefaults(props || {});\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(color) {\n        this.props.color = color;\n    }\n    async getTextureData() {\n        const pixelData32 = new Uint32Array([this.color]);\n        const pixelData8 = new Uint8ClampedArray(pixelData32.buffer);\n        return {\n            data: new ImageData(pixelData8, 1, 1),\n            premultiplyAlpha: true,\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = ColorTexture.resolveDefaults(props);\n        return `ColorTexture,${resolvedProps.color}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            color: props.color || 0xffffffff,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ColorTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture, } from './Texture.js';\n/**\n * A Texture that is a sub-region of another Texture.\n *\n * @remarks\n * The parent texture can be a Sprite Sheet/Texture Atlas and set using the\n * {@link SubTextureProps.texture} prop. The sub-region relative to the parent\n * texture is defined with the {@link SubTextureProps.x},\n * {@link SubTextureProps.y}, {@link SubTextureProps.width}, and\n * {@link SubTextureProps.height} pixel values.\n */\nexport class SubTexture extends Texture {\n    props;\n    parentTexture;\n    constructor(txManager, props) {\n        super(txManager);\n        this.parentTexture = this.txManager.loadTexture(props.texture.txType, props.texture.props, props.texture.options);\n        this.props = SubTexture.resolveDefaults(props || {});\n        // If parent texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            const parentTx = this.parentTexture;\n            if (parentTx.state === 'loaded') {\n                this.onParentTxLoaded(parentTx, parentTx.dimensions);\n            }\n            else if (parentTx.state === 'failed') {\n                this.onParentTxFailed(parentTx, parentTx.error);\n            }\n            parentTx.on('loaded', this.onParentTxLoaded);\n            parentTx.on('failed', this.onParentTxFailed);\n        });\n    }\n    onParentTxLoaded = () => {\n        // We ignore the parent's passed dimensions, and simply use the SubTexture's\n        // configured dimensions (because that's all that matters here)\n        this.setState('loaded', {\n            width: this.props.width,\n            height: this.props.height,\n        });\n    };\n    onParentTxFailed = (target, error) => {\n        this.setState('failed', error);\n    };\n    async getTextureData() {\n        return {\n            data: this.props,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {\n            texture: props.texture,\n            x: props.x || 0,\n            y: props.y || 0,\n            width: props.width || 0,\n            height: props.height || 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=SubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nexport class WebGlCoreCtxSubTexture extends WebGlCoreCtxTexture {\n    constructor(glw, memManager, textureSource) {\n        super(glw, memManager, textureSource);\n    }\n    async onLoadRequest() {\n        const props = await this.textureSource.getTextureData();\n        return {\n            width: props.data?.width || 0,\n            height: props.data?.height || 0,\n        };\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxSubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a collection of WebGL Buffers along with their associated\n * vertex attribute formats.\n */\nexport class BufferCollection {\n    config;\n    constructor(config) {\n        this.config = config;\n    }\n    /**\n     * Get the WebGLBuffer associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getBuffer(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])?.buffer;\n    }\n    /**\n     * Get the AttributeInfo associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getAttributeInfo(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])\n            ?.attributes[attributeName];\n    }\n}\n//# sourceMappingURL=BufferCollection.js.map","/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport { assertTruthy } from '../../utils.js';\nimport { isWebGl2 } from '../renderers/webgl/internal/WebGlUtils.js';\n/**\n * Optimized WebGL Context Wrapper\n *\n * @remarks\n * This class contains the subset of the WebGLRenderingContext & WebGL2RenderingContext\n * API that is used by the renderer. Select high volume WebGL methods include\n * caching optimizations to avoid making WebGL calls if the state is already set\n * to the desired value.\n *\n * While most methods contained are direct passthroughs to the WebGL context,\n * some methods combine multiple WebGL calls into one for convenience, modify\n * arguments to be more convenient, or are replaced by more specific methods.\n *\n * Not all methods are optimized. Only methods that are called frequently\n * and/or have a high cost are optimized.\n *\n * A subset of GLenum constants are also exposed as properties on this class\n * for convenience.\n */\nexport class WebGlContextWrapper {\n    gl;\n    //#region Cached WebGL State\n    activeTextureUnit = 0;\n    texture2dUnits;\n    texture2dParams = new WeakMap();\n    scissorEnabled;\n    scissorX;\n    scissorY;\n    scissorWidth;\n    scissorHeight;\n    blendEnabled;\n    blendSrcRgb;\n    blendDstRgb;\n    blendSrcAlpha;\n    blendDstAlpha;\n    boundArrayBuffer;\n    boundElementArrayBuffer;\n    curProgram;\n    programUniforms = new WeakMap();\n    //#endregion Cached WebGL State\n    //#region Canvas\n    canvas;\n    //#endregion Canvas\n    //#region WebGL Enums\n    MAX_RENDERBUFFER_SIZE;\n    MAX_TEXTURE_SIZE;\n    MAX_VIEWPORT_DIMS;\n    MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n    MAX_TEXTURE_IMAGE_UNITS;\n    MAX_COMBINED_TEXTURE_IMAGE_UNITS;\n    MAX_VERTEX_ATTRIBS;\n    MAX_VARYING_VECTORS;\n    MAX_VERTEX_UNIFORM_VECTORS;\n    MAX_FRAGMENT_UNIFORM_VECTORS;\n    TEXTURE_MAG_FILTER;\n    TEXTURE_MIN_FILTER;\n    TEXTURE_WRAP_S;\n    TEXTURE_WRAP_T;\n    LINEAR;\n    CLAMP_TO_EDGE;\n    RGBA;\n    UNSIGNED_BYTE;\n    UNPACK_PREMULTIPLY_ALPHA_WEBGL;\n    FLOAT;\n    TRIANGLES;\n    UNSIGNED_SHORT;\n    ONE;\n    ONE_MINUS_SRC_ALPHA;\n    VERTEX_SHADER;\n    FRAGMENT_SHADER;\n    STATIC_DRAW;\n    COMPILE_STATUS;\n    LINK_STATUS;\n    DYNAMIC_DRAW;\n    //#endregion WebGL Enums\n    constructor(gl) {\n        this.gl = gl;\n        // The following code extracts the current state of the WebGL context\n        // to our local JavaScript cached version of it. This is so we can\n        // avoid making WebGL calls if we don't need to.\n        // We could assume that the WebGL context is in a default state, but\n        // in the future we may want to support restoring a broken WebGL context\n        // and this will help with that.\n        this.activeTextureUnit =\n            gl.getParameter(gl.ACTIVE_TEXTURE) - gl.TEXTURE0;\n        const maxTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n        // save current texture units\n        this.texture2dUnits = new Array(maxTextureUnits)\n            .fill(undefined)\n            .map((_, i) => {\n            this.activeTexture(i);\n            return gl.getParameter(gl.TEXTURE_BINDING_2D);\n        });\n        // restore active texture unit\n        this.activeTexture(this.activeTextureUnit);\n        this.scissorEnabled = gl.isEnabled(gl.SCISSOR_TEST);\n        const scissorBox = gl.getParameter(gl.SCISSOR_BOX);\n        this.scissorX = scissorBox[0];\n        this.scissorY = scissorBox[1];\n        this.scissorWidth = scissorBox[2];\n        this.scissorHeight = scissorBox[3];\n        this.blendEnabled = gl.isEnabled(gl.BLEND);\n        this.blendSrcRgb = gl.getParameter(gl.BLEND_SRC_RGB);\n        this.blendDstRgb = gl.getParameter(gl.BLEND_DST_RGB);\n        this.blendSrcAlpha = gl.getParameter(gl.BLEND_SRC_ALPHA);\n        this.blendDstAlpha = gl.getParameter(gl.BLEND_DST_ALPHA);\n        this.boundArrayBuffer = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\n        this.boundElementArrayBuffer = gl.getParameter(gl.ELEMENT_ARRAY_BUFFER_BINDING);\n        this.curProgram = gl.getParameter(gl.CURRENT_PROGRAM);\n        this.canvas = gl.canvas;\n        // Extract GLenums\n        this.MAX_RENDERBUFFER_SIZE = gl.MAX_RENDERBUFFER_SIZE;\n        this.MAX_TEXTURE_SIZE = gl.MAX_TEXTURE_SIZE;\n        this.MAX_VIEWPORT_DIMS = gl.MAX_VIEWPORT_DIMS;\n        this.MAX_VERTEX_TEXTURE_IMAGE_UNITS = gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        this.MAX_TEXTURE_IMAGE_UNITS = gl.MAX_TEXTURE_IMAGE_UNITS;\n        this.MAX_COMBINED_TEXTURE_IMAGE_UNITS = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS;\n        this.MAX_VERTEX_ATTRIBS = gl.MAX_VERTEX_ATTRIBS;\n        this.MAX_VARYING_VECTORS = gl.MAX_VARYING_VECTORS;\n        this.MAX_VERTEX_UNIFORM_VECTORS = gl.MAX_VERTEX_UNIFORM_VECTORS;\n        this.MAX_FRAGMENT_UNIFORM_VECTORS = gl.MAX_FRAGMENT_UNIFORM_VECTORS;\n        this.TEXTURE_MAG_FILTER = gl.TEXTURE_MAG_FILTER;\n        this.TEXTURE_MIN_FILTER = gl.TEXTURE_MIN_FILTER;\n        this.TEXTURE_WRAP_S = gl.TEXTURE_WRAP_S;\n        this.TEXTURE_WRAP_T = gl.TEXTURE_WRAP_T;\n        this.LINEAR = gl.LINEAR;\n        this.CLAMP_TO_EDGE = gl.CLAMP_TO_EDGE;\n        this.RGBA = gl.RGBA;\n        this.UNSIGNED_BYTE = gl.UNSIGNED_BYTE;\n        this.UNPACK_PREMULTIPLY_ALPHA_WEBGL = gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL;\n        this.FLOAT = gl.FLOAT;\n        this.TRIANGLES = gl.TRIANGLES;\n        this.UNSIGNED_SHORT = gl.UNSIGNED_SHORT;\n        this.ONE = gl.ONE;\n        this.ONE_MINUS_SRC_ALPHA = gl.ONE_MINUS_SRC_ALPHA;\n        this.MAX_VERTEX_TEXTURE_IMAGE_UNITS = gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        this.TRIANGLES = gl.TRIANGLES;\n        this.UNSIGNED_SHORT = gl.UNSIGNED_SHORT;\n        this.VERTEX_SHADER = gl.VERTEX_SHADER;\n        this.FRAGMENT_SHADER = gl.FRAGMENT_SHADER;\n        this.STATIC_DRAW = gl.STATIC_DRAW;\n        this.COMPILE_STATUS = gl.COMPILE_STATUS;\n        this.LINK_STATUS = gl.LINK_STATUS;\n        this.DYNAMIC_DRAW = gl.DYNAMIC_DRAW;\n    }\n    /**\n     * Returns true if the WebGL context is WebGL2\n     *\n     * @returns\n     */\n    isWebGl2() {\n        return isWebGl2(this.gl);\n    }\n    /**\n     * ```\n     * gl.activeTexture(textureUnit + gl.TEXTURE0);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: `textureUnit` is based from 0, not `gl.TEXTURE0`.\n     *\n     * @param textureUnit\n     */\n    activeTexture(textureUnit) {\n        const { gl } = this;\n        if (this.activeTextureUnit !== textureUnit) {\n            gl.activeTexture(textureUnit + gl.TEXTURE0);\n            this.activeTextureUnit = textureUnit;\n        }\n    }\n    /**\n     * ```\n     * gl.bindTexture(gl.TEXTURE_2D, texture);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     *\n     * @param texture\n     */\n    bindTexture(texture) {\n        const { gl, activeTextureUnit, texture2dUnits } = this;\n        if (texture2dUnits[activeTextureUnit] === texture) {\n            return;\n        }\n        texture2dUnits[activeTextureUnit] = texture;\n        gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    }\n    _getActiveTexture() {\n        const { activeTextureUnit, texture2dUnits } = this;\n        return texture2dUnits[activeTextureUnit];\n    }\n    /**\n     * ```\n     * gl.texParameteri(gl.TEXTURE_2D, pname, param);\n     * ```\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     *\n     * @param pname\n     * @param param\n     * @returns\n     */\n    texParameteri(pname, param) {\n        const { gl, texture2dParams } = this;\n        const activeTexture = this._getActiveTexture();\n        if (!activeTexture) {\n            throw new Error('No active texture');\n        }\n        let textureParams = texture2dParams.get(activeTexture);\n        if (!textureParams) {\n            textureParams = {};\n            texture2dParams.set(activeTexture, textureParams);\n        }\n        if (textureParams[pname] === param) {\n            return;\n        }\n        textureParams[pname] = param;\n        gl.texParameteri(gl.TEXTURE_2D, pname, param);\n    }\n    texImage2D(level, internalFormat, widthOrFormat, heightOrType, borderOrSource, format, type, pixels) {\n        const { gl } = this;\n        if (format) {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, widthOrFormat, heightOrType, borderOrSource, format, type, pixels);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, widthOrFormat, heightOrType, borderOrSource);\n        }\n    }\n    /**\n     * ```\n     * gl.compressedTexImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, data);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     */\n    compressedTexImage2D(level, internalformat, width, height, border, data) {\n        const { gl } = this;\n        gl.compressedTexImage2D(gl.TEXTURE_2D, level, internalformat, width, height, border, data);\n    }\n    /**\n     * ```\n     * gl.pixelStorei(pname, param);\n     * ```\n     *\n     * @param pname\n     * @param param\n     */\n    pixelStorei(pname, param) {\n        const { gl } = this;\n        gl.pixelStorei(pname, param);\n    }\n    /**\n     * ```\n     * gl.generateMipmap(gl.TEXTURE_2D);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Bind target is always `gl.TEXTURE_2D`\n     */\n    generateMipmap() {\n        const { gl } = this;\n        gl.generateMipmap(gl.TEXTURE_2D);\n    }\n    /**\n     * ```\n     * gl.createTexture();\n     * ```\n     *\n     * @returns\n     */\n    createTexture() {\n        const { gl } = this;\n        return gl.createTexture();\n    }\n    /**\n     * ```\n     * gl.deleteTexture(texture);\n     * ```\n     *\n     * @param texture\n     */\n    deleteTexture(texture) {\n        const { gl } = this;\n        if (texture) {\n            this.texture2dParams.delete(texture);\n        }\n        gl.deleteTexture(texture);\n    }\n    /**\n     * ```\n     * gl.viewport(x, y, width, height);\n     * ```\n     */\n    viewport(x, y, width, height) {\n        const { gl } = this;\n        gl.viewport(x, y, width, height);\n    }\n    /**\n     * ```\n     * gl.clearColor(red, green, blue, alpha);\n     * ```\n     *\n     * @param red\n     * @param green\n     * @param blue\n     * @param alpha\n     */\n    clearColor(red, green, blue, alpha) {\n        const { gl } = this;\n        gl.clearColor(red, green, blue, alpha);\n    }\n    /**\n     * ```\n     * gl[\"enable\"|\"disable\"](gl.SCISSOR_TEST);\n     * ```\n     * @param enable\n     */\n    setScissorTest(enable) {\n        const { gl, scissorEnabled } = this;\n        if (enable === scissorEnabled) {\n            return;\n        }\n        if (enable) {\n            gl.enable(gl.SCISSOR_TEST);\n        }\n        else {\n            gl.disable(gl.SCISSOR_TEST);\n        }\n        this.scissorEnabled = enable;\n    }\n    /**\n     * ```\n     * gl.scissor(x, y, width, height);\n     * ```\n     *\n     * @param x\n     * @param y\n     * @param width\n     * @param height\n     */\n    scissor(x, y, width, height) {\n        const { gl, scissorX, scissorY, scissorWidth, scissorHeight } = this;\n        if (x !== scissorX ||\n            y !== scissorY ||\n            width !== scissorWidth ||\n            height !== scissorHeight) {\n            gl.scissor(x, y, width, height);\n            this.scissorX = x;\n            this.scissorY = y;\n            this.scissorWidth = width;\n            this.scissorHeight = height;\n        }\n    }\n    /**\n     * ```\n     * gl[\"enable\"|\"disable\"](gl.BLEND);\n     * ```\n     *\n     * @param blend\n     * @returns\n     */\n    setBlend(blend) {\n        const { gl, blendEnabled } = this;\n        if (blend === blendEnabled) {\n            return;\n        }\n        if (blend) {\n            gl.enable(gl.BLEND);\n        }\n        else {\n            gl.disable(gl.BLEND);\n        }\n        this.blendEnabled = blend;\n    }\n    /**\n     * ```\n     * gl.blendFunc(src, dst);\n     * ```\n     *\n     * @param src\n     * @param dst\n     */\n    blendFunc(src, dst) {\n        const { gl, blendSrcRgb, blendDstRgb, blendSrcAlpha, blendDstAlpha } = this;\n        if (src !== blendSrcRgb ||\n            dst !== blendDstRgb ||\n            src !== blendSrcAlpha ||\n            dst !== blendDstAlpha) {\n            gl.blendFunc(src, dst);\n            this.blendSrcRgb = src;\n            this.blendDstRgb = dst;\n            this.blendSrcAlpha = src;\n            this.blendDstAlpha = dst;\n        }\n    }\n    /**\n     * ```\n     * createBuffer();\n     * ```\n     *\n     * @returns\n     */\n    createBuffer() {\n        const { gl } = this;\n        return gl.createBuffer();\n    }\n    /**\n     * ```\n     * gl.clear(gl.COLOR_BUFFER_BIT);\n     * ```\n     *\n     * @remarks\n     * **WebGL Difference**: Clear mask is always `gl.COLOR_BUFFER_BIT`\n     */\n    clear() {\n        const { gl } = this;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n     * gl.bufferData(gl.ARRAY_BUFFER, data, usage);\n     * ```\n     *\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.bufferData` are combined into one function.\n     *\n     * @param buffer\n     * @param data\n     * @param usage\n     */\n    arrayBufferData(buffer, data, usage) {\n        const { gl, boundArrayBuffer } = this;\n        if (boundArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            this.boundArrayBuffer = buffer;\n        }\n        gl.bufferData(gl.ARRAY_BUFFER, data, usage);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n     * gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, usage);\n     * ```\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.bufferData` are combined into one function.\n     *\n     * @param buffer\n     * @param data\n     * @param usage\n     */\n    elementArrayBufferData(buffer, data, usage) {\n        const { gl, boundElementArrayBuffer } = this;\n        if (boundElementArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n            this.boundElementArrayBuffer = buffer;\n        }\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, usage);\n    }\n    /**\n     * ```\n     * gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n     * gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n     * ```\n     *\n     * @remarks\n     * **WebGL Combo**: `gl.bindBuffer` and `gl.vertexAttribPointer` are combined into one function.\n     *\n     * @param buffer\n     * @param index\n     * @param size\n     * @param type\n     * @param normalized\n     * @param stride\n     * @param offset\n     */\n    vertexAttribPointer(buffer, index, size, type, normalized, stride, offset) {\n        const { gl, boundArrayBuffer } = this;\n        if (boundArrayBuffer !== buffer) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            this.boundArrayBuffer = buffer;\n        }\n        gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n    /**\n     * ```\n     * gl.useProgram(program);\n     * ```\n     *\n     * @param program\n     * @returns\n     */\n    useProgram(program) {\n        const { gl, curProgram } = this;\n        if (curProgram === program) {\n            return;\n        }\n        gl.useProgram(program);\n        this.curProgram = program;\n    }\n    setUniform(type, location, ...args) {\n        const { gl, programUniforms } = this;\n        let uniforms = programUniforms.get(this.curProgram);\n        if (!uniforms) {\n            uniforms = new Map();\n            programUniforms.set(this.curProgram, uniforms);\n        }\n        const uniformArgs = uniforms.get(location);\n        if (!uniformArgs || !compareArrays(uniformArgs, args)) {\n            uniforms.set(location, args);\n            gl[type](location, ...args);\n        }\n    }\n    /**\n     * ```\n     * gl.getParameter(pname);\n     * ```\n     *\n     * @param pname\n     * @returns\n     */\n    getParameter(pname) {\n        const { gl } = this;\n        return gl.getParameter(pname);\n    }\n    /**\n     * ```\n     * gl.drawElements(mode, count, type, offset);\n     * ```\n     *\n     * @param mode\n     * @param count\n     * @param type\n     * @param offset\n     */\n    drawElements(mode, count, type, offset) {\n        const { gl } = this;\n        gl.drawElements(mode, count, type, offset);\n    }\n    /**\n     * ```\n     * gl.drawArrays(mode, first, count);\n     * ```\n     *\n     * @param name\n     * @returns\n     */\n    getExtension(name) {\n        const { gl } = this;\n        return gl.getExtension(name);\n    }\n    /**\n     * ```\n     * gl.createVertexArray();\n     * ```\n     *\n     * @returns\n     */\n    createVertexArray() {\n        const { gl } = this;\n        assertTruthy(gl instanceof WebGL2RenderingContext);\n        return gl.createVertexArray();\n    }\n    /**\n     * ```\n     * gl.bindVertexArray(vertexArray);\n     * ```\n     *\n     * @param vertexArray\n     */\n    bindVertexArray(vertexArray) {\n        const { gl } = this;\n        assertTruthy(gl instanceof WebGL2RenderingContext);\n        gl.bindVertexArray(vertexArray);\n    }\n    /**\n     * ```\n     * gl.getAttribLocation(program, name);\n     * ```\n     *\n     * @param program\n     * @param name\n     * @returns\n     */\n    getAttribLocation(program, name) {\n        const { gl } = this;\n        return gl.getAttribLocation(program, name);\n    }\n    /**\n     * ```\n     * gl.getUniformLocation(program, name);\n     * ```\n     *\n     * @param program\n     * @param name\n     * @returns\n     */\n    getUniformLocation(program, name) {\n        const { gl } = this;\n        return gl.getUniformLocation(program, name);\n    }\n    /**\n     * ```\n     * gl.enableVertexAttribArray(index);\n     * ```\n     *\n     * @param index\n     */\n    enableVertexAttribArray(index) {\n        const { gl } = this;\n        gl.enableVertexAttribArray(index);\n    }\n    /**\n     * ```\n     * gl.disableVertexAttribArray(index);\n     * ```\n     *\n     * @param index\n     */\n    disableVertexAttribArray(index) {\n        const { gl } = this;\n        gl.disableVertexAttribArray(index);\n    }\n    /**\n     * ```\n     * gl.createShader(type);\n     * ```\n     *\n     * @param type\n     * @returns\n     */\n    createShader(type) {\n        const { gl } = this;\n        return gl.createShader(type);\n    }\n    /**\n     * ```\n     * gl.compileShader(shader);\n     * ```\n     *\n     * @param shader\n     * @returns\n     */\n    compileShader(shader) {\n        const { gl } = this;\n        gl.compileShader(shader);\n    }\n    /**\n     * ```\n     * gl.attachShader(program, shader);\n     * ```\n     *\n     * @param program\n     * @param shader\n     */\n    attachShader(program, shader) {\n        const { gl } = this;\n        gl.attachShader(program, shader);\n    }\n    /**\n     * ```\n     * gl.linkProgram(program);\n     * ```\n     *\n     * @param program\n     */\n    linkProgram(program) {\n        const { gl } = this;\n        gl.linkProgram(program);\n    }\n    /**\n     * ```\n     * gl.deleteProgram(shader);\n     * ```\n     *\n     * @param shader\n     */\n    deleteProgram(shader) {\n        const { gl } = this;\n        gl.deleteProgram(shader);\n    }\n    /**\n     * ```\n     * gl.getShaderParameter(shader, pname);\n     * ```\n     *\n     * @param shader\n     * @param pname\n     */\n    getShaderParameter(shader, pname) {\n        const { gl } = this;\n        return gl.getShaderParameter(shader, pname);\n    }\n    /**\n     * ```\n     * gl.getShaderInfoLog(shader);\n     * ```\n     *\n     * @param shader\n     */\n    getShaderInfoLog(shader) {\n        const { gl } = this;\n        return gl.getShaderInfoLog(shader);\n    }\n    /**\n     * ```\n     * gl.createProgram();\n     * ```\n     *\n     * @returns\n     */\n    createProgram() {\n        const { gl } = this;\n        return gl.createProgram();\n    }\n    /**\n     * ```\n     * gl.getProgramParameter(program, pname);\n     * ```\n     *\n     * @param program\n     * @param pname\n     * @returns\n     */\n    getProgramParameter(program, pname) {\n        const { gl } = this;\n        return gl.getProgramParameter(program, pname);\n    }\n    /**\n     * ```\n     * gl.getProgramInfoLog(program);\n     * ```\n     *\n     * @param program\n     * @returns\n     */\n    getProgramInfoLog(program) {\n        const { gl } = this;\n        return gl.getProgramInfoLog(program);\n    }\n    /**\n     * ```\n     * gl.shaderSource(shader, source);\n     * ```\n     *\n     * @param shader\n     * @param source\n     */\n    shaderSource(shader, source) {\n        const { gl } = this;\n        gl.shaderSource(shader, source);\n    }\n    /**\n     * ```\n     * gl.deleteShader(shader);\n     * ```\n     *\n     * @param shader\n     */\n    deleteShader(shader) {\n        const { gl } = this;\n        gl.deleteShader(shader);\n    }\n}\n/**\n * Compare two arrays for equality.\n *\n * @remarks\n * This function will not try to compare nested arrays or Float32Arrays and\n * instead will always return false when they are encountered.\n *\n * @param a\n * @param b\n * @returns\n */\nexport function compareArrays(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    return a.every((v, i) => {\n        // Don't bother to compare nested arrays or Float32Arrays\n        if (Array.isArray(v) || v instanceof Float32Array) {\n            return false;\n        }\n        else {\n            return v === b[i];\n        }\n    });\n}\n//# sourceMappingURL=WebGlContextWrapper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generic WebGL Utility Functions\n *\n * @remarks\n * Nothing here should be coupled to Renderer logic / types.\n *\n * @param gl\n * @returns\n */\nexport function isWebGl2(gl) {\n    return (self.WebGL2RenderingContext && gl instanceof self.WebGL2RenderingContext);\n}\n//# sourceMappingURL=WebGlUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, createWebGLContext, hasOwn, mergeColorAlphaPremultiplied, } from '../../../utils.js';\nimport { CoreRenderer } from '../CoreRenderer.js';\nimport { WebGlCoreRenderOp } from './WebGlCoreRenderOp.js';\nimport { createIndexBuffer, getWebGlParameters, getWebGlExtensions, } from './internal/RendererUtils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { ColorTexture } from '../../textures/ColorTexture.js';\nimport { SubTexture } from '../../textures/SubTexture.js';\nimport { WebGlCoreCtxSubTexture } from './WebGlCoreCtxSubTexture.js';\nimport { CoreShaderManager } from '../../CoreShaderManager.js';\nimport { BufferCollection } from './internal/BufferCollection.js';\nimport { compareRect, getNormalizedRgbaComponents, } from '../../lib/utils.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nimport { RoundedRectangle } from './shaders/RoundedRectangle.js';\nimport { ContextSpy } from '../../lib/ContextSpy.js';\nimport { WebGlContextWrapper } from '../../lib/WebGlContextWrapper.js';\nconst WORDS_PER_QUAD = 24;\nconst BYTES_PER_QUAD = WORDS_PER_QUAD * 4;\nexport class WebGlCoreRenderer extends CoreRenderer {\n    //// WebGL Native Context and Data\n    glw;\n    system;\n    //// Core Managers\n    txManager;\n    txMemManager;\n    shManager;\n    //// Options\n    options;\n    //// Persistent data\n    quadBuffer = new ArrayBuffer(1024 * 1024 * 4);\n    fQuadBuffer = new Float32Array(this.quadBuffer);\n    uiQuadBuffer = new Uint32Array(this.quadBuffer);\n    renderOps = [];\n    //// Render Op / Buffer Filling State\n    curBufferIdx = 0;\n    curRenderOp = null;\n    renderables = [];\n    //// Default Shader\n    defaultShader;\n    quadBufferCollection;\n    /**\n     * White pixel texture used by default when no texture is specified.\n     */\n    defaultTexture;\n    constructor(options) {\n        super(options.stage);\n        const { canvas, clearColor, bufferMemory } = options;\n        this.options = options;\n        this.txManager = options.txManager;\n        this.txMemManager = options.txMemManager;\n        this.shManager = options.shManager;\n        this.defaultTexture = new ColorTexture(this.txManager);\n        // When the default texture is loaded, request a render in case the\n        // RAF is paused. Fixes: https://github.com/lightning-js/renderer/issues/123\n        this.defaultTexture.once('loaded', () => {\n            this.stage.requestRender();\n        });\n        const gl = createWebGLContext(canvas, options.contextSpy);\n        const glw = (this.glw = new WebGlContextWrapper(gl));\n        const color = getNormalizedRgbaComponents(clearColor);\n        glw.viewport(0, 0, canvas.width, canvas.height);\n        glw.clearColor(color[0], color[1], color[2], color[3]);\n        glw.setBlend(true);\n        glw.blendFunc(glw.ONE, glw.ONE_MINUS_SRC_ALPHA);\n        createIndexBuffer(glw, bufferMemory);\n        this.system = {\n            parameters: getWebGlParameters(this.glw),\n            extensions: getWebGlExtensions(this.glw),\n        };\n        this.shManager.renderer = this;\n        this.defaultShader = this.shManager.loadShader('DefaultShader').shader;\n        const quadBuffer = glw.createBuffer();\n        assertTruthy(quadBuffer);\n        const stride = 6 * Float32Array.BYTES_PER_ELEMENT;\n        this.quadBufferCollection = new BufferCollection([\n            {\n                buffer: quadBuffer,\n                attributes: {\n                    a_position: {\n                        name: 'a_position',\n                        size: 2,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 0, // start at the beginning of the buffer\n                    },\n                    a_textureCoordinate: {\n                        name: 'a_textureCoordinate',\n                        size: 2,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 2 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_color: {\n                        name: 'a_color',\n                        size: 4,\n                        type: glw.UNSIGNED_BYTE,\n                        normalized: true,\n                        stride,\n                        offset: 4 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_textureIndex: {\n                        name: 'a_textureIndex',\n                        size: 1,\n                        type: glw.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 5 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                },\n            },\n        ]);\n    }\n    reset() {\n        const { glw } = this;\n        this.curBufferIdx = 0;\n        this.curRenderOp = null;\n        this.renderOps.length = 0;\n        glw.setScissorTest(false);\n        glw.clear();\n    }\n    getShaderManager() {\n        return this.shManager;\n    }\n    createCtxTexture(textureSource) {\n        if (textureSource instanceof SubTexture) {\n            return new WebGlCoreCtxSubTexture(this.glw, this.txMemManager, textureSource);\n        }\n        return new WebGlCoreCtxTexture(this.glw, this.txMemManager, textureSource);\n    }\n    /**\n     * This function adds a quad (a rectangle composed of two triangles) to the WebGL rendering pipeline.\n     *\n     * It takes a set of options that define the quad's properties, such as its dimensions, colors, texture, shader, and transformation matrix.\n     * The function first updates the shader properties with the current dimensions if necessary, then sets the default texture if none is provided.\n     * It then checks if a new render operation is needed, based on the current shader and clipping rectangle.\n     * If a new render operation is needed, it creates one and updates the current render operation.\n     * The function then adjusts the texture coordinates based on the texture options and adds the texture to the texture manager.\n     *\n     * Finally, it calculates the vertices for the quad, taking into account any transformations, and adds them to the quad buffer.\n     * The function updates the length and number of quads in the current render operation, and updates the current buffer index.\n     */\n    addQuad(params) {\n        const { fQuadBuffer, uiQuadBuffer } = this;\n        const { width, height, colorTl, colorTr, colorBl, colorBr, textureOptions, shader, shaderProps, alpha, clippingRect, tx, ty, ta, tb, tc, td, } = params;\n        let { texture } = params;\n        /**\n         * If the shader props contain any automatic properties, update it with the\n         * current dimensions that will be used to render the quad.\n         */\n        if (shaderProps && hasOwn(shaderProps, '$dimensions')) {\n            const dimensions = shaderProps.$dimensions;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            dimensions.width = width;\n            dimensions.height = height;\n        }\n        texture = texture ?? this.defaultTexture;\n        assertTruthy(texture instanceof Texture, 'Invalid texture type');\n        let { curBufferIdx: bufferIdx, curRenderOp } = this;\n        const targetDims = {\n            width,\n            height,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        };\n        const targetShader = shader || this.defaultShader;\n        assertTruthy(targetShader instanceof WebGlCoreShader);\n        if (curRenderOp) {\n            // If the current render op is not the same shader, create a new one\n            // If the current render op's shader props are not compatible with the\n            // the new shader props, create a new one render op.\n            if (curRenderOp.shader !== targetShader ||\n                !compareRect(curRenderOp.clippingRect, clippingRect) ||\n                (curRenderOp.shader !== this.defaultShader &&\n                    (!shaderProps ||\n                        !curRenderOp.shader.canBatchShaderProps(curRenderOp.shaderProps, shaderProps)))) {\n                curRenderOp = null;\n            }\n        }\n        assertTruthy(targetShader instanceof WebGlCoreShader);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n        if (!curRenderOp) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.newRenderOp(targetShader, shaderProps, alpha, targetDims, clippingRect, bufferIdx);\n            curRenderOp = this.curRenderOp;\n            assertTruthy(curRenderOp);\n        }\n        const flipX = textureOptions?.flipX ?? false;\n        const flipY = textureOptions?.flipY ?? false;\n        let texCoordX1 = 0;\n        let texCoordY1 = 0;\n        let texCoordX2 = 1;\n        let texCoordY2 = 1;\n        if (texture instanceof SubTexture) {\n            const { x: tx, y: ty, width: tw, height: th } = texture.props;\n            const { width: parentW = 0, height: parentH = 0 } = texture.parentTexture\n                .dimensions || { width: 0, height: 0 };\n            texCoordX1 = tx / parentW;\n            texCoordX2 = texCoordX1 + tw / parentW;\n            texCoordY1 = ty / parentH;\n            texCoordY2 = texCoordY1 + th / parentH;\n            texture = texture.parentTexture;\n        }\n        // Flip texture coordinates if dictated by texture options\n        if (flipX) {\n            [texCoordX1, texCoordX2] = [texCoordX2, texCoordX1];\n        }\n        if (flipY) {\n            [texCoordY1, texCoordY2] = [texCoordY2, texCoordY1];\n        }\n        const { txManager } = this.stage;\n        const ctxTexture = txManager.getCtxTexture(texture);\n        assertTruthy(ctxTexture instanceof WebGlCoreCtxTexture);\n        const textureIdx = this.addTexture(ctxTexture, bufferIdx);\n        curRenderOp = this.curRenderOp;\n        assertTruthy(curRenderOp);\n        // render quad advanced\n        if (tb !== 0 || tc !== 0) {\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta;\n            fQuadBuffer[bufferIdx++] = ty + width * tc;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + width * tc + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        else {\n            // Calculate the right corner of the quad\n            // multiplied by the scale\n            const rightCornerX = tx + width * ta;\n            const rightCornerY = ty + height * td;\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = colorTl; // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = ty;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = colorTr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBl;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = colorBr;\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        // Update the length of the current render op\n        curRenderOp.length += WORDS_PER_QUAD;\n        curRenderOp.numQuads++;\n        this.curBufferIdx = bufferIdx;\n    }\n    /**\n     * Replace the existing RenderOp with a new one that uses the specified Shader\n     * and starts at the specified buffer index.\n     *\n     * @param shader\n     * @param bufferIdx\n     */\n    newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx) {\n        const curRenderOp = new WebGlCoreRenderOp(this.glw, this.options, this.quadBufferCollection, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, 0);\n        this.curRenderOp = curRenderOp;\n        this.renderOps.push(curRenderOp);\n    }\n    /**\n     * Add a texture to the current RenderOp. If the texture cannot be added to the\n     * current RenderOp, a new RenderOp will be created and the texture will be added\n     * to that one.\n     *\n     * If the texture cannot be added to the new RenderOp, an error will be thrown.\n     *\n     * @param texture\n     * @param bufferIdx\n     * @param recursive\n     * @returns Assigned Texture Index of the texture in the render op\n     */\n    addTexture(texture, bufferIdx, recursive) {\n        const { curRenderOp } = this;\n        assertTruthy(curRenderOp);\n        const textureIdx = curRenderOp.addTexture(texture);\n        // TODO: Refactor to be more DRY\n        if (textureIdx === 0xffffffff) {\n            if (recursive) {\n                throw new Error('Unable to add texture to render op');\n            }\n            const { shader, shaderProps, dimensions, clippingRect, alpha } = curRenderOp;\n            this.newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx);\n            return this.addTexture(texture, bufferIdx, true);\n        }\n        return textureIdx;\n    }\n    /**\n     * add RenderOp to the render pipeline\n     */\n    addRenderOp(renderable) {\n        this.renderOps.push(renderable);\n        this.curRenderOp = null;\n    }\n    /**\n     * Render the current set of RenderOps to render to the specified surface.\n     *\n     * TODO: 'screen' is the only supported surface at the moment.\n     *\n     * @param surface\n     */\n    render(surface = 'screen') {\n        const { glw, quadBuffer } = this;\n        const arr = new Float32Array(quadBuffer, 0, this.curBufferIdx);\n        const buffer = this.quadBufferCollection.getBuffer('a_position') ?? null;\n        glw.arrayBufferData(buffer, arr, glw.STATIC_DRAW);\n        const doLog = false; // idx++ % 100 === 0;\n        if (doLog) {\n            console.log('renderOps', this.renderOps.length);\n        }\n        this.renderOps.forEach((renderOp, i) => {\n            if (doLog) {\n                console.log('renderOp', i, renderOp.numQuads);\n            }\n            renderOp.draw();\n        });\n        // clean up\n        this.renderables = [];\n    }\n}\nconst idx = 0;\n//# sourceMappingURL=WebGlCoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const SpecialCodepoints = {\n    LINE_FEED: 0x0a,\n    CARRIAGE_RETURN: 0x0d,\n    SPACE: 0x20,\n    TAB: 0x09,\n    ZERO_WIDTH_SPACE: 0x200b,\n    ZERO_WIDTH_NON_JOINER: 0x200c,\n    ZERO_WIDTH_JOINER: 0x200d,\n    LEFT_TO_RIGHT_MARK: 0x200e,\n    RIGHT_TO_LEFT_MARK: 0x200f,\n    LEFT_TO_RIGHT_EMBEDDING: 0x202a,\n    RIGHT_TO_LEFT_EMBEDDING: 0x202b,\n    POP_DIRECTIONAL_FORMATTING: 0x202c,\n    LEFT_TO_RIGHT_OVERRIDE: 0x202d,\n    RIGHT_TO_LEFT_OVERRIDE: 0x202e,\n    LINE_SEPARATOR: 0x2028,\n    PARAGRAPH_SEPARATOR: 0x2029,\n    OBJECT_REPLACEMENT_CHARACTER: 0xfffc,\n    REPLACEMENT_CHARACTER: 0xfffd,\n    ZERO_WIDTH_NO_BREAK_SPACE: 0xfeff,\n    LEFT_TO_RIGHT_ISOLATE: 0x2066,\n    RIGHT_TO_LEFT_ISOLATE: 0x2067,\n    FIRST_STRONG_ISOLATE: 0x2068,\n    POP_DIRECTIONAL_ISOLATE: 0x2069,\n    INHIBIT_SYMMETRIC_SWAPPING: 0x206a,\n    ACTIVATE_SYMMETRIC_SWAPPING: 0x206b,\n    INHIBIT_ARABIC_FORM_SHAPING: 0x206c,\n    ACTIVATE_ARABIC_FORM_SHAPING: 0x206d,\n    NATIONAL_DIGIT_SHAPES: 0x206e,\n    NOMINAL_DIGIT_SHAPES: 0x206f,\n    LEFT_TO_RIGHT_BOUNDARY: 0x200e,\n    RIGHT_TO_LEFT_BOUNDARY: 0x200f,\n};\n//# sourceMappingURL=SpecialCodepoints.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SpecialCodepoints } from '../../../renderers/SdfTextRenderer/internal/SpecialCodepoints.js';\nimport { FontShaper, } from './FontShaper.js';\nexport class SdfFontShaper extends FontShaper {\n    data;\n    glyphMap;\n    kernings;\n    constructor(data, glyphMap) {\n        super();\n        this.data = data;\n        this.glyphMap = glyphMap;\n        const kernings = (this.kernings = {});\n        data.kernings.forEach((kerning) => {\n            const second = kerning.second;\n            const firsts = (kernings[second] = kernings[second] || {});\n            firsts[kerning.first] = kerning.amount;\n        });\n        this.kernings = kernings;\n    }\n    *shapeText(props, codepoints) {\n        let codepointResult;\n        let lastGlyphId = undefined;\n        while ((codepointResult = codepoints.peek()) && !codepointResult.done) {\n            const codepoint = codepointResult.value;\n            const glyph = this.glyphMap.get(codepoint);\n            codepoints.next();\n            if (glyph !== undefined) {\n                // We found a glyph for this codepoint\n                // Yield the mapped glyph info\n                /**\n                 * Kerning includes any possible additional letter spacing\n                 */\n                const kerning = lastGlyphId !== undefined\n                    ? (this.kernings[glyph.id]?.[lastGlyphId] || 0) +\n                        props.letterSpacing\n                    : 0;\n                lastGlyphId = glyph.id;\n                yield {\n                    mapped: true,\n                    glyphId: glyph.id,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                    xAdvance: glyph.xadvance + kerning,\n                    yAdvance: 0,\n                    xOffset: glyph.xoffset + kerning,\n                    yOffset: glyph.yoffset,\n                    xBearing: 0,\n                    yBearing: 0,\n                    width: glyph.width,\n                    height: glyph.height,\n                };\n            }\n            else {\n                // We didn't find a glyph for this codepoint\n                // Yield the unmapped codepoint info\n                // If this codepoint is a linebreak, we should reset the last glyph id\n                // so that the next glyph will not be kerned with the last glyph of the\n                // previous line.\n                if (codepoint === SpecialCodepoints.LINE_FEED) {\n                    lastGlyphId = undefined;\n                }\n                yield {\n                    mapped: false,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                };\n            }\n        }\n    }\n}\n//# sourceMappingURL=SdfFontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class FontShaper {\n}\n//# sourceMappingURL=FontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// import type { Renderer } from '../../../Renderer';\nimport { assertTruthy } from '../../../../utils.js';\nimport { WebGlCoreRenderer } from '../../../renderers/webgl/WebGlCoreRenderer.js';\nimport { ImageTexture } from '../../../textures/ImageTexture.js';\nimport { TrFontFace } from '../TrFontFace.js';\nimport { SdfFontShaper } from './internal/SdfFontShaper.js';\nexport class SdfTrFontFace extends TrFontFace {\n    type;\n    texture;\n    /**\n     * Height of the tallest character in the font including the whitespace above it\n     */\n    maxCharHeight = 0;\n    data;\n    shaper;\n    glyphMap = new Map();\n    constructor(fontFamily, descriptors, type, stage, atlasUrl, atlasDataUrl) {\n        super(fontFamily, descriptors);\n        this.type = type;\n        const renderer = stage.renderer;\n        assertTruthy(renderer instanceof WebGlCoreRenderer, 'SDF Font Faces can only be used with the WebGL Renderer');\n        this.texture = stage.txManager.loadTexture('ImageTexture', {\n            src: atlasUrl,\n            // IMPORTANT: The SDF shader requires the alpha channel to NOT be\n            // premultiplied on the atlas texture. If it is premultiplied, the\n            // rendering of SDF glyphs (especially single-channel SDF fonts) will\n            // be very jagged.\n            premultiplyAlpha: false,\n        }, {\n            preload: true,\n        });\n        this.texture.on('loaded', () => {\n            this.checkLoaded();\n        });\n        // Set this.data to the fetched data from dataUrl\n        fetch(atlasDataUrl)\n            .then(async (response) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            this.data = await response.json();\n            // Add all the glyphs to the glyph map\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            let maxCharHeight = 0;\n            this.data.chars.forEach((glyph) => {\n                this.glyphMap.set(glyph.id, glyph);\n                const charHeight = glyph.yoffset + glyph.height;\n                if (charHeight > maxCharHeight) {\n                    maxCharHeight = charHeight;\n                }\n            });\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.maxCharHeight = maxCharHeight;\n            // We know `data` is defined here, because we just set it\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.shaper = new SdfFontShaper(this.data, this.glyphMap);\n            this.checkLoaded();\n        })\n            .catch(console.error);\n    }\n    getAtlasEntry(glyphId) {\n        const glyph = this.glyphMap.get(glyphId);\n        if (glyph === undefined) {\n            throw new Error(`Glyph ${glyphId} not found in font ${this.fontFamily}`);\n        }\n        return {\n            x: glyph.x,\n            y: glyph.y,\n            width: glyph.width,\n            height: glyph.height,\n        };\n    }\n    checkLoaded() {\n        if (this.loaded)\n            return;\n        if (this.texture.state === 'loaded' && this.data) {\n            this.loaded = true;\n            this.emit('loaded');\n        }\n    }\n}\n//# sourceMappingURL=SdfTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Base class for Core extensions.\n *\n * @remarks\n * Core extensions are used to extend the Core Renderer with custom code such as\n * custom fonts, custom shaders, custom textures, custom animation functions,\n * and more.\n */\nexport class CoreExtension {\n}\n//# sourceMappingURL=CoreExtension.js.map"],"names":["assertTruthy","condition","message","hasOwn","obj","prop","Object","prototype","hasOwnProperty","call","isProductionEnvironment","BASE_URL","MODE","DEV","PROD","SSR","LEGACY","a","b","out","intersection","createBound","Math","max","x1","y1","min","x2","y2","x","y","width","height","rgba","color","r","floor","g","concat","toFixed","bound","alpha","flipEndianess","arguments","length","undefined","newAlpha","trunc","rgba1","rgba2","p","r1","g1","b1","a1","r2","g2","b2","a2","round","bound1","bound2","EventEmitter","_createClass","_classCallCheck","this","_defineProperty","key","value","event","listener","listeners","eventListeners","push","index","indexOf","splice","_this","on","onceListener","target","data","off","_this2","_toConsumableArray","forEach","exports","createShader","glw","type","source","shader","Error","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","deleteShader","WebGlCoreShader","_CoreShader","options","_this3","_callSuper","renderer","supportsIndexedTextures","webGl2","isWebGl2","requiredExtensions","webgl2Extensions","webgl1Extensions","glVersion","extensionName","getExtension","constructor","name","shaderSources","fragment","vertex","textureUnits","system","parameters","MAX_VERTEX_TEXTURE_IMAGE_UNITS","vertexSource","Function","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","vao","createVertexArray","bindVertexArray","attributeLocations","attributeBuffers","attributeNames","attributes","attributeName","location","getAttribLocation","buffer","createBuffer","uniformLocations","uniformTypes","uniforms","uniform","getUniformLocation","warn","_inherits","attribute","enableVertexAttribArray","vertexAttribPointer","size","normalized","stride","offset","disableVertexAttribArray","loc","disableAttribute","boundBufferCollection","propsA","propsB","renderOp","props","bindBufferCollection","buffers","textures","bindTextures","setUniform","canvas","pixelRatio","dimensions","$dimensions","$alpha","bindProps","_this$glw","_len","Array","_key","apply","resolvedBuffer","getBuffer","resolvedInfo","getAttributeInfo","bindBufferAttribute","useProgram","disableAttributes","CoreShader","Texture","_EventEmitter2","txManager","_this4","Set","owner","renderable","renderableOwners","add","delete","get","state","_len2","args","_key2","loadedArgs","failedArgs","error","emit","getNormalizedRgbaComponents","TrFontFace","_EventEmitter3","fontFamily","descriptors","_this5","_objectSpread","style","weight","stretch","unicodeRange","variant","featureSettings","display","_TrFontFace2","WebTrFontFace","fontUrl","_this6","fontUrlWithoutParentheses","replace","determinedDescriptors","cssDescriptors","fontFace","FontFace","load","then","loaded","catch","CoreContextTexture","memManager","textureSource","CoreRenderer","stage","WebGlCoreRenderOp","_CoreRenderOp","shaderProps","clippingRect","bufferIdx","zIndex","_this7","maxTextures","getParameter","texture","existingIdx","findIndex","t","newIdx","shManager","useShader","bindRenderOp","quadIdx","valid","_this$clippingRect","canvasHeight","clipX","clipWidth","clipHeight","clipY","setScissorTest","scissor","drawElements","TRIANGLES","numQuads","UNSIGNED_SHORT","CoreRenderOp","getWebGlParameters","params","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_SIZE","MAX_VIEWPORT_DIMS","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_ATTRIBS","MAX_VARYING_VECTORS","MAX_VERTEX_UNIFORM_VECTORS","MAX_FRAGMENT_UNIFORM_VECTORS","keys","getWebGlExtensions","extensions","ANGLE_instanced_arrays","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_astc","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_etc1","WEBGL_compressed_texture_pvrtc","WEBKIT_WEBGL_compressed_texture_pvrtc","WEBGL_compressed_texture_s3tc_srgb","OES_vertex_array_object","memize","fn","head","tail","memoized","i","node","len","searchCache","next","prev","val","maxSize","clear","isPowerOfTwo","getTimingBezier","c","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","it","minT","maxT","memo","str","s","parts","substr","split","parseFloat","isNaN","hypot","_len3","_key3","sqrt","TRANSPARENT_TEXTURE_DATA","Uint8Array","WebGlCoreCtxTexture","_CoreContextTexture2","_this8","_state","_nativeCtxTexture","_w","_h","_this9","setState","createNativeCtxTexture","onLoadRequest","_ref","err","_onLoadRequest","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$textureSource","textureData","_mipmaps$","_textureData$data","mipmaps","_textureData$data$wid","_width","_textureData$data$hei","_height","glInternalFormat","view","wrap","_callee$","_context","activeTexture","bindTexture","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","setTextureMemUse","byteLength","getTextureData","sent","abrupt","ImageBitmap","ImageData","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","generateMipmap","DataView","ArrayBuffer","compressedTexImage2D","stop","deleteTexture","nativeTexture","createTexture","ColorTexture","_Texture2","_this10","resolveDefaults","set","_getTextureData","_callee2","pixelData32","pixelData8","_context2","Uint32Array","Uint8ClampedArray","resolvedProps","SubTexture","_Texture3","_this11","parentTexture","loadTexture","txType","queueMicrotask","parentTx","onParentTxLoaded","onParentTxFailed","_getTextureData2","_callee3","_context3","WebGlCoreCtxSubTexture","_WebGlCoreCtxTexture2","_onLoadRequest2","_callee4","_props$data","_props$data2","_callee4$","_context4","BufferCollection","config","_this$config$find","find","item","_this$config$find2","WebGlContextWrapper","gl","_this12","WeakMap","activeTextureUnit","ACTIVE_TEXTURE","TEXTURE0","maxTextureUnits","texture2dUnits","fill","map","_","TEXTURE_BINDING_2D","scissorEnabled","isEnabled","SCISSOR_TEST","scissorBox","SCISSOR_BOX","scissorX","scissorY","scissorWidth","scissorHeight","blendEnabled","BLEND","blendSrcRgb","BLEND_SRC_RGB","blendDstRgb","BLEND_DST_RGB","blendSrcAlpha","BLEND_SRC_ALPHA","blendDstAlpha","BLEND_DST_ALPHA","boundArrayBuffer","ARRAY_BUFFER_BINDING","boundElementArrayBuffer","ELEMENT_ARRAY_BUFFER_BINDING","curProgram","CURRENT_PROGRAM","FLOAT","ONE","ONE_MINUS_SRC_ALPHA","STATIC_DRAW","DYNAMIC_DRAW","self","WebGL2RenderingContext","textureUnit","TEXTURE_2D","pname","param","texture2dParams","_getActiveTexture","textureParams","level","internalFormat","widthOrFormat","heightOrType","borderOrSource","format","pixels","internalformat","border","viewport","red","green","blue","clearColor","enable","disable","blend","src","dst","blendFunc","COLOR_BUFFER_BIT","usage","bindBuffer","ARRAY_BUFFER","bufferData","ELEMENT_ARRAY_BUFFER","programUniforms","Map","uniformArgs","_len4","_key4","every","v","isArray","Float32Array","compareArrays","mode","count","vertexArray","WebGlCoreRenderer","_CoreRenderer2","_this13","quadBuffer","bufferMemory","txMemManager","defaultTexture","once","requestRender","contextSpy","antialias","depth","stencil","desynchronized","powerPreference","premultipliedAlpha","preserveDrawingBuffer","getContext","Proxy","increment","String","bind","createWebGLContext","setBlend","maxQuads","indices","Uint16Array","j","elementArrayBufferData","createIndexBuffer","defaultShader","loadShader","BYTES_PER_ELEMENT","quadBufferCollection","a_position","a_textureCoordinate","a_color","a_textureIndex","curBufferIdx","curRenderOp","renderOps","_texture","_textureOptions$flipX","_textureOptions$flipY","fQuadBuffer","uiQuadBuffer","colorTl","colorTr","colorBl","colorBr","textureOptions","tx","ty","ta","tb","tc","td","targetDims","targetShader","canBatchShaderProps","newRenderOp","flipX","flipY","texCoordX1","texCoordY1","texCoordX2","texCoordY2","_texture$props","tw","th","_ref2","_ref2$width","parentW","_ref2$height","parentH","_ref3","_ref4","ctxTexture","getCtxTexture","textureIdx","addTexture","rightCornerX","rightCornerY","recursive","_this$quadBufferColle","arr","arrayBufferData","draw","renderables","SpecialCodepoints","SdfFontShaper","_FontShaper","glyphMap","_this14","kernings","kerning","second","first","amount","shapeText","codepoints","codepointResult","lastGlyphId","codepoint","glyph","_this$kernings$glyph$","shapeText$","_context5","peek","done","id","letterSpacing","mapped","glyphId","cluster","lastIndex","xAdvance","xadvance","yAdvance","xOffset","xoffset","yOffset","yoffset","xBearing","yBearing","FontShaper","SdfTrFontFace","_TrFontFace3","atlasUrl","atlasDataUrl","_this15","preload","checkLoaded","fetch","_ref5","_callee5","response","maxCharHeight","_context6","json","chars","charHeight","shaper","_x","CoreExtension"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]}