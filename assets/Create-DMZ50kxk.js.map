{"version":3,"file":"Create-DMZ50kxk.js","sources":["../../src/pages/Create.tsx"],"sourcesContent":["import {\n  IntrinsicNodeStyleProps,\n  Text,\n  View,\n  combineStyles,\n  hexColor,\n} from \"@lightningtv/solid\";\nimport { Show, children, createSignal, onMount } from \"solid-js\";\nimport { setGlobalBackground } from \"../state\";\n\nconst CreatePage = () => {\n  const OverviewContainer = {\n    width: 900,\n    height: 500,\n    y: 50,\n    x: 150,\n    gap: 25,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flexStart\",\n    color: hexColor(\"00000000\"),\n  } satisfies IntrinsicNodeStyleProps;\n\n  const SublineContainer = {\n    width: 900,\n    height: 36,\n    gap: 6,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flexStart\",\n    color: hexColor(\"00000000\"),\n  } satisfies IntrinsicNodeStyleProps;\n\n  const Title = {\n    fontSize: 42,\n  };\n\n  const Subline = {\n    fontSize: 26,\n  };\n\n  let myBox, childRef;\n  onMount(() => {\n    setGlobalBackground(\"#000000\");\n    myBox.animate({ x: 100 }, { duration: 2000 }).start();\n  });\n\n  const [insertTest, setInsertTest] = createSignal<string | undefined>();\n  const [emptyTest, setEmptyTest] = createSignal<string | undefined>();\n\n  setTimeout(() => {\n    setInsertTest(\"- Inserted -\");\n    childRef\n      .getChildById(\"child1\")\n      //.searchChildrenById('subChild') - more expensive version of getChildById\n      ?.animate({ x: 600 }, { duration: 2000 })\n      .start();\n  }, 2000);\n\n  const styleChild = {\n    width: 400,\n    height: 300,\n    // Solid blue\n    color: \"#0000ff\",\n  } as const;\n\n  const someOtherStyle = {\n    // pretty red\n    color: \"#f54242\",\n    $focus: {\n      // pretty blue\n      color: \"#4287f5\",\n    },\n  };\n\n  function ChildTest(props) {\n    // This causes a parent not rendered error since we're rendering it twice in the template\n    const resolved = children(() => props.children);\n    return (\n      <View\n        {...props}\n        style={combineStyles(someOtherStyle, props.style, styleChild)}\n      >\n        <View id=\"child1\" width={100} height={100} color={\"#ff0000\"} y={25}>\n          {resolved()}\n          <View\n            id=\"subChild\"\n            x={150}\n            width={100}\n            height={100}\n            color={\"#00ff00\"}\n          />\n          <Text>{props.title}</Text>\n        </View>\n        <View width={100} height={100} color={\"#ffff00\"} y={175}>\n          {resolved()}\n        </View>\n      </View>\n    );\n  }\n\n  function PosTest(props) {\n    return (\n      <View {...props} width={400} height={400} color={\"#0000ff\"}>\n        <View width={50} height={50} color={\"#ff0000\"} right={0}>\n          <Text fontSize={18}>Right</Text>\n        </View>\n        <View width={50} height={50} color={\"#ff0000\"} bottom={0}>\n          <Text fontSize={18}>Bottom</Text>\n        </View>\n        <View\n          width={50}\n          height={50}\n          color={\"#ff0000\"}\n          bottom={0}\n          right={0}\n          data={{ id: \"BR\" }}\n        >\n          <Text fontSize={18}>BR</Text>\n        </View>\n      </View>\n    );\n  }\n\n  const borderStyles = {\n    borderLeft: {\n      width: 8,\n      color: 0x05b2b626,\n    },\n    borderTop: {\n      width: 8,\n      color: 0x25a2bd26,\n    },\n    borderRight: {\n      width: 8,\n      color: 0x05b2b626,\n    },\n    borderBottom: {\n      width: 8,\n      color: 0xc5b23626,\n    },\n  } as const;\n\n  const childTestPassedStyles = {\n    // grey color\n    color: \"#cccccc\",\n    $focus: {\n      // black\n      color: \"#000000\",\n    },\n  };\n\n  const childTestPassedStyles2 = {\n    // white color\n    color: \"#ffffff\",\n    $focus: {\n      // white something...\n      color: \"#f6f6cc\",\n    },\n  };\n\n  function hasFocus(elm) {\n    // This doesnt work yet - need to make states reactive\n    return elm.states.has(\"focus\");\n  }\n\n  return (\n    <View style={OverviewContainer}>\n      <Text style={Title}>Title of the Page</Text>\n      <View style={SublineContainer}>\n        <Text>{emptyTest()}</Text>\n        <Text style={Subline}>Sub {insertTest()} Text</Text>\n        <Show when={insertTest()}>\n          <View width={28} height={28} src={\"./assets/rt-popcorn.png\"}></View>\n        </Show>\n        <Text style={Subline}>More Text</Text>\n      </View>\n      <ChildTest\n        autofocus\n        ref={childRef}\n        style={combineStyles(childTestPassedStyles2, childTestPassedStyles)}\n      >\n        <Text>Child Test</Text>\n      </ChildTest>\n      <View\n        ref={myBox}\n        style={borderStyles}\n        width={100}\n        height={100}\n        color={\"#00ff00\"}\n        x={900}\n        y={400}\n        alpha={hasFocus(myBox) ? 1 : 0.2}\n      />\n      <PosTest x={100} y={100} />\n    </View>\n  );\n};\n\nexport default CreatePage;\n"],"names":["CreatePage","OverviewContainer","width","height","y","x","gap","display","flexDirection","justifyContent","color","hexColor","SublineContainer","Title","fontSize","Subline","myBox","childRef","onMount","setGlobalBackground","animate","duration","start","insertTest","setInsertTest","createSignal","emptyTest","setEmptyTest","setTimeout","getChildById","someOtherStyle","$focus","ChildTest","props","resolved","children","_$createComponent","View","_$mergeProps","style","combineStyles","id","_$memo","Text","title","PosTest","right","bottom","data","borderStyles","borderLeft","borderTop","borderRight","borderBottom","childTestPassedStyles","childTestPassedStyles2","hasFocus","elm","states","has","Show","when","src","autofocus","ref","r$","_ref$","_ref$2","alpha"],"mappings":";AAUA,MAAMA,aAAaA,MAAM;AACvB,QAAMC,oBAAoB;AAAA,IACxBC,OAAO;AAAA,IACPC,QAAQ;AAAA,IACRC,GAAG;AAAA,IACHC,GAAG;AAAA,IACHC,KAAK;AAAA,IACLC,SAAS;AAAA,IACTC,eAAe;AAAA,IACfC,gBAAgB;AAAA,IAChBC,OAAOC,SAAS,UAAU;AAAA,EAC5B;AAEA,QAAMC,mBAAmB;AAAA,IACvBV,OAAO;AAAA,IACPC,QAAQ;AAAA,IACRG,KAAK;AAAA,IACLC,SAAS;AAAA,IACTC,eAAe;AAAA,IACfC,gBAAgB;AAAA,IAChBC,OAAOC,SAAS,UAAU;AAAA,EAC5B;AAEA,QAAME,QAAQ;AAAA,IACZC,UAAU;AAAA,EACZ;AAEA,QAAMC,UAAU;AAAA,IACdD,UAAU;AAAA,EACZ;AAEA,MAAIE,OAAOC;AACXC,UAAQ,MAAM;AACZC,wBAAoB,GAAS;AAC7BH,UAAMI,QAAQ;AAAA,MAAEf,GAAG;AAAA,IAAA,GAAO;AAAA,MAAEgB,UAAU;AAAA,IAAM,CAAA,EAAEC,MAAM;AAAA,EAAA,CACrD;AAED,QAAM,CAACC,YAAYC,aAAa,IAAIC,aAAiC;AACrE,QAAM,CAACC,WAAWC,YAAY,IAAIF,aAAiC;AAEnEG,aAAW,MAAM;;AACfJ,kBAAc,cAAc;AAEzBK,mBAAAA,aAAa,QAAQ,MAArBA,mBAECT,QAAQ;AAAA,MAAEf,GAAG;AAAA,IAAA,GAAO;AAAA,MAAEgB,UAAU;AAAA,IAAM,GACvCC;AAAAA,KACF,GAAI;AASP,QAAMQ,iBAAiB;AAAA;AAAA,IAErBpB,OAAO;AAAA,IACPqB,QAAQ;AAAA;AAAA,MAENrB,OAAO;AAAA,IAAA;AAAA,EAEX;AAEA,WAASsB,UAAUC,OAAO;AAExB,UAAMC,WAAWC,SAAS,MAAMF,MAAME,QAAQ;AAC9CC,WAAAA,gBACGC,MAAIC,WACCL,OAAK;AAAA,MAAA,IACTM,QAAK;AAAA,eAAEC,cAAcV,gBAAgBG,MAAMM,KAAiB;AAAA,MAAC;AAAA,MAAA,IAAAJ,WAAA;AAAAC,eAAAA,CAAAA,gBAE5DC,MAAI;AAAA,UAACI,IAAE;AAAA,UAAUvC,OAAO;AAAA,UAAKC,QAAQ;AAAA,UAAKO,OAAO;AAAA,UAAWN,GAAG;AAAA,UAAE,IAAA+B,WAAA;AAAA,mBAAAO,CAAAA,WAC/DR,SAAU,CAAA,GAAAE,gBACVC,MAAI;AAAA,cACHI,IAAE;AAAA,cACFpC,GAAG;AAAA,cACHH,OAAO;AAAA,cACPC,QAAQ;AAAA,cACRO,OAAO;AAAA,YAAA,CAAS0B,GAAAA,gBAEjBO,MAAI;AAAA,cAAA,IAAAR,WAAA;AAAA,uBAAEF,MAAMW;AAAAA,cAAAA;AAAAA,YAAK,CAAA,CAAA;AAAA,UAAA;AAAA,QAAA,CAAAR,GAAAA,gBAEnBC,MAAI;AAAA,UAACnC,OAAO;AAAA,UAAKC,QAAQ;AAAA,UAAKO,OAAO;AAAA,UAAWN,GAAG;AAAA,UAAG,IAAA+B,WAAA;AAAA,mBACpDD,SAAS;AAAA,UAAA;AAAA,QAAC,CAAA,CAAA;AAAA,MAAA;AAAA,IAAA,CAAA,CAAA;AAAA,EAAA;AAMnB,WAASW,QAAQZ,OAAO;AACtBG,WAAAA,gBACGC,MAAIC,WAAKL,OAAK;AAAA,MAAE/B,OAAO;AAAA,MAAKC,QAAQ;AAAA,MAAKO,OAAO;AAAA,MAAS,IAAAyB,WAAA;AAAAC,eAAAA,CAAAA,gBACvDC,MAAI;AAAA,UAACnC,OAAO;AAAA,UAAIC,QAAQ;AAAA,UAAIO,OAAO;AAAA,UAAWoC,OAAO;AAAA,UAAC,IAAAX,WAAA;AAAA,mBAAAC,gBACpDO,MAAI;AAAA,cAAC7B,UAAU;AAAA,cAAEqB,UAAA;AAAA,YAAA,CAAA;AAAA,UAAA;AAAA,QAAA,CAAAC,GAAAA,gBAEnBC,MAAI;AAAA,UAACnC,OAAO;AAAA,UAAIC,QAAQ;AAAA,UAAIO,OAAO;AAAA,UAAWqC,QAAQ;AAAA,UAAC,IAAAZ,WAAA;AAAA,mBAAAC,gBACrDO,MAAI;AAAA,cAAC7B,UAAU;AAAA,cAAEqB,UAAA;AAAA,YAAA,CAAA;AAAA,UAAA;AAAA,QAAA,CAAAC,GAAAA,gBAEnBC,MAAI;AAAA,UACHnC,OAAO;AAAA,UACPC,QAAQ;AAAA,UACRO,OAAO;AAAA,UACPqC,QAAQ;AAAA,UACRD,OAAO;AAAA,UACPE,MAAM;AAAA,YAAEP,IAAI;AAAA,UAAK;AAAA,UAAC,IAAAN,WAAA;AAAA,mBAAAC,gBAEjBO,MAAI;AAAA,cAAC7B,UAAU;AAAA,cAAEqB,UAAA;AAAA,YAAA,CAAA;AAAA,UAAA;AAAA,QAAA,CAAA,CAAA;AAAA,MAAA;AAAA,IAAA,CAAA,CAAA;AAAA,EAAA;AAM1B,QAAMc,eAAe;AAAA,IACnBC,YAAY;AAAA,MACVhD,OAAO;AAAA,MACPQ,OAAO;AAAA,IACT;AAAA,IACAyC,WAAW;AAAA,MACTjD,OAAO;AAAA,MACPQ,OAAO;AAAA,IACT;AAAA,IACA0C,aAAa;AAAA,MACXlD,OAAO;AAAA,MACPQ,OAAO;AAAA,IACT;AAAA,IACA2C,cAAc;AAAA,MACZnD,OAAO;AAAA,MACPQ,OAAO;AAAA,IAAA;AAAA,EAEX;AAEA,QAAM4C,wBAAwB;AAAA;AAAA,IAE5B5C,OAAO;AAAA,IACPqB,QAAQ;AAAA;AAAA,MAENrB,OAAO;AAAA,IAAA;AAAA,EAEX;AAEA,QAAM6C,yBAAyB;AAAA;AAAA,IAE7B7C,OAAO;AAAA,IACPqB,QAAQ;AAAA;AAAA,MAENrB,OAAO;AAAA,IAAA;AAAA,EAEX;AAEA,WAAS8C,SAASC,KAAK;AAEdA,WAAAA,IAAIC,OAAOC,IAAI,OAAO;AAAA,EAAA;AAG/B,SAAAvB,gBACGC,MAAI;AAAA,IAACE,OAAOtC;AAAAA,IAAiB,IAAAkC,WAAA;AAAAC,aAAAA,CAAAA,gBAC3BO,MAAI;AAAA,QAACJ,OAAO1B;AAAAA,QAAKsB,UAAA;AAAA,MAAA,CAAAC,GAAAA,gBACjBC,MAAI;AAAA,QAACE,OAAO3B;AAAAA,QAAgB,IAAAuB,WAAA;AAAAC,iBAAAA,CAAAA,gBAC1BO,MAAI;AAAA,YAAA,IAAAR,WAAA;AAAA,qBAAET,UAAU;AAAA,YAAA;AAAA,UAAC,CAAAU,GAAAA,gBACjBO,MAAI;AAAA,YAACJ,OAAOxB;AAAAA,YAAO,IAAAoB,WAAA;AAAA,qBAAA,CAAA,QAAAO,KAAA,MAAOnB,WAAY,CAAA,GAAA,OAAA;AAAA,YAAA;AAAA,UAAA,CAAAa,GAAAA,gBACtCwB,MAAI;AAAA,YAAA,IAACC,OAAI;AAAA,qBAAEtC,WAAW;AAAA,YAAC;AAAA,YAAA,IAAAY,WAAA;AAAA,qBAAAC,gBACrBC,MAAI;AAAA,gBAACnC,OAAO;AAAA,gBAAIC,QAAQ;AAAA,gBAAI2D,KAAK;AAAA,cAAA,CAAyB;AAAA,YAAA;AAAA,UAAA,CAAA1B,GAAAA,gBAE5DO,MAAI;AAAA,YAACJ,OAAOxB;AAAAA,YAAOoB,UAAA;AAAA,UAAA,CAAA,CAAA;AAAA,QAAA;AAAA,MAAA,CAAAC,GAAAA,gBAErBJ,WAAS;AAAA,QACR+B,WAAS;AAAA,QAAAC,IAAAC,IAAA;AAAA,cAAAC,QACJjD;AAAQ,iBAAAiD,uBAAAA,MAAAD,EAAA,IAARhD,WAAQgD;AAAAA,QAAA;AAAA,QAAA,IACb1B,QAAK;AAAEC,iBAAAA,cAAce,wBAAwBD,qBAAqB;AAAA,QAAC;AAAA,QAAA,IAAAnB,WAAA;AAAA,iBAAAC,gBAElEO,MAAI;AAAA,YAAAR,UAAA;AAAA,UAAA,CAAA;AAAA,QAAA;AAAA,MAAA,CAAAC,GAAAA,gBAENC,MAAI;AAAA,QAAA2B,IAAAC,IAAA;AAAA,cAAAE,SACEnD;AAAK,iBAAAmD,wBAAAA,OAAAF,EAAA,IAALjD,QAAKiD;AAAAA,QAAA;AAAA,QACV1B,OAAOU;AAAAA,QACP/C,OAAO;AAAA,QACPC,QAAQ;AAAA,QACRO,OAAO;AAAA,QACPL,GAAG;AAAA,QACHD,GAAG;AAAA,QAAG,IACNgE,QAAK;AAAEZ,iBAAAA,SAASxC,KAAK,IAAI,IAAI;AAAA,QAAA;AAAA,MAAG,CAAAoB,GAAAA,gBAEjCS,SAAO;AAAA,QAACxC,GAAG;AAAA,QAAKD,GAAG;AAAA,MAAA,CAAG,CAAA;AAAA,IAAA;AAAA,EAAA,CAAA;AAG7B;"}