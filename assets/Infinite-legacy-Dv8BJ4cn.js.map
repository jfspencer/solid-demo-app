{"version":3,"file":"Infinite-legacy-Dv8BJ4cn.js","sources":["../../src/pages/Infinite.tsx"],"sourcesContent":["import { createEffect, createSignal, Show } from \"solid-js\";\nimport { ElementNode, View, Text } from \"@lightningtv/solid\";\nimport { Poster } from \"../components\";\nimport { setGlobalBackground } from \"../state\";\nimport { List } from \"@solid-primitives/list\";\n\nconst Loops = (props) => {\n  const [allItems, setAllItems] = createSignal<any[]>([]);\n  const [displayedItems, setDisplayedItems] = createSignal<any[]>([]);\n  const [resetCounter, setResetCounter] = createSignal(1);\n  const displaySize = 5;\n  const bufferSize = 2; // Number of items to load ahead\n  let currentIndex = 0, solidLogo;\n\n  createEffect(() => {\n    // Flatten all rows into a single array, add empty item for initial offscreen item\n    const all = [{}, ...props.data.rows.map((row) => row.items()).flat()];\n    setAllItems(all);\n    setDisplayedItems(all.slice(0, displaySize + bufferSize));\n  });\n\n  function updateDisplayedItems() {\n    const items = allItems();\n    const start = Math.max(currentIndex, 0);\n    const end = Math.min(currentIndex + displaySize + bufferSize, items.length);\n    setDisplayedItems(items.slice(start, end));\n  }\n\n  function reset(_e, elm) {\n    currentIndex = 0;\n    setResetCounter(r => r + 1);\n    updateDisplayedItems();\n    elm.children[1].setFocus();\n    return true;\n  }\n\n  function shiftLeft(_e, elm) {\n    if (currentIndex > 0) {\n      currentIndex = Math.max(0, currentIndex - 1);\n      elm.children[0].setFocus();\n      updateDisplayedItems();\n    }\n    return true;\n  }\n\n  function shiftRight(_e, elm) {\n    if (currentIndex < allItems().length - 1) {\n      currentIndex = Math.min(allItems().length - 1, currentIndex + 1);\n      elm.children[2].setFocus();\n      updateDisplayedItems();\n    }\n    return true;\n  }\n\n  function animateOut(node) {\n    return node\n      .animate({ y: 200, alpha: 0 }, { duration: 500, easing: \"ease-in-out\" })\n      .start()\n      .waitUntilStopped();\n  }\n\n  function animateIn(node) {\n    node.alpha = 0;\n    node.y = -100;\n    return node\n      .animate({ y: 55, alpha: 1 }, { duration: 500, easing: \"ease-in-out\" })\n      .start()\n      .waitUntilStopped();\n  }\n\n  setGlobalBackground(\"#000000\");\n\n  const titleRowStyles = {\n    fontFamily: \"Raleway\",\n    fontSize: 24,\n    height: 32,\n    lineHeight: 32,\n  };\n\n  const withTransition = { x: { duration: 250 }, alpha: { duration: 250 } };\n\n  return (\n    <>\n      <View ref={solidLogo} width={300} height={150} x={162} y={80} zIndex={105}>\n        <Text x={80} fontSize={28} color={0xf6f6f699}>\n          Built With:\n        </Text>\n        <View y={32} src=\"./assets/solidWord.png\" width={280} height={52} />\n        <View x={0} y={110} src=\"./assets/tmdb.png\" width={80} height={41} />\n        <Text x={90} y={110} contain=\"width\" width={160} fontSize={12} color={0xf6f6f699}>\n          This product uses the TMDB API but is not endorsed or certified by TMDB.\n        </Text>\n      </View>\n      \n      <View x={160} y={300} height={300}>\n        <Text style={titleRowStyles}>Infinite Item List</Text>\n        <Show when={resetCounter()} keyed>\n        <View autofocus={allItems()} onDestroy={animateOut}\n          onCreate={animateIn} \n          onFocus={(elm) => elm.children[1]?.setFocus()} \n          onLeft={shiftLeft} onRight={shiftRight} onUp={reset} onDown={reset} y={55}>\n          <List each={displayedItems()}>\n            {(item, index) => {\n              const isEdgeItem = () => index() === 0 || index() === displayedItems().length - 1;\n              return (\n                <Poster\n                  {...item()}\n                  x={index() * 210 - 210}\n                  alpha={isEdgeItem() ? 0 : 1}\n                  transition={withTransition}\n                />\n              );\n            }}\n          </List>\n        </View>\n        </Show>\n      </View>\n    </>\n  );\n};\n\nexport default Loops;\n"],"names":["Loops","props","_createSignal","createSignal","_createSignal2","_slicedToArray","allItems","setAllItems","_createSignal3","_createSignal4","displayedItems","setDisplayedItems","_createSignal5","_createSignal6","resetCounter","setResetCounter","displaySize","bufferSize","currentIndex","solidLogo","createEffect","all","concat","_toConsumableArray","data","rows","map","row","items","flat","slice","updateDisplayedItems","start","Math","max","end","min","length","reset","_e","elm","r","children","setFocus","shiftLeft","shiftRight","animateOut","node","animate","y","alpha","duration","easing","waitUntilStopped","animateIn","setGlobalBackground","titleRowStyles","fontFamily","fontSize","height","lineHeight","withTransition","x","_$createComponent","View","ref","r$","_ref$","width","zIndex","Text","color","src","contain","style","Show","when","keyed","autofocus","onDestroy","onCreate","onFocus","onLeft","onRight","onUp","onDown","List","each","item","index","isEdgeItem","Poster","_$mergeProps","transition"],"mappings":"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"}